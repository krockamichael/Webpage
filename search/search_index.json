{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\ud83c\udfe0 Domov \u00b6","title":"\ud83c\udfe0 Domov"},{"location":"#-domov","text":"","title":"\ud83c\udfe0 Domov"},{"location":"dokumentacia_k_produktu/caste_problemy/","text":"\ud83d\udc1e \u010cast\u00e9 probl\u00e9my \u00b6 Vytv\u00e1ranie objektov starou syntaxou \u00b6 Niektor\u00e9 Lua moduly vyu\u017e\u00edvaj\u00fa star\u00fa syntax vytv\u00e1rania objektov v tvare module(_nazov_modulu_) namiesto novej syntaxe, ktor\u00e1 vracia vybran\u00e9 funkcie a premenn\u00e9 modulu prostredn\u00edctvom n\u00e1vratovej hodnoty vo forme tabu\u013eky v ni\u017e\u0161ie uvedenom tvare. Vytv\u00e1ranie objektov novou syntaxou \u00b6 local logger local mojaPremenna local moja Funkcia return { logger = logger, mojaPremenna = mojaPremenna, mojaFunkcia = mojaFunkcia } V\u00fdskyt starej syntaxe \u00b6 Star\u00e1 syntax je pou\u017eit\u00e1 v nasleduj\u00facich moduloch : Luametrics metrics/init.lua metrics/rules.lua metrics/captures/ast.lua metrics/captures/block.lua metrics/captures/cyclomatic.lua metrics/captures/document_metrics.lua metrics/captures/functiontree.lua metrics/captures/halstead.lua metrics/captures/hypergraph.lua metrics/captures/infoflow.lua metrics/captures/LOC.lua metrics/captures/statements.lua metrics/luadoc/captures.lua metrics/luadoc/commentParser.lua Luameg meg.lua","title":"\ud83d\udc1e \u010cast\u00e9 probl\u00e9my"},{"location":"dokumentacia_k_produktu/caste_problemy/#-\u010dast\u00e9-probl\u00e9my","text":"","title":"\ud83d\udc1e \u010cast\u00e9 probl\u00e9my"},{"location":"dokumentacia_k_produktu/caste_problemy/#vytv\u00e1ranie-objektov-starou-syntaxou","text":"Niektor\u00e9 Lua moduly vyu\u017e\u00edvaj\u00fa star\u00fa syntax vytv\u00e1rania objektov v tvare module(_nazov_modulu_) namiesto novej syntaxe, ktor\u00e1 vracia vybran\u00e9 funkcie a premenn\u00e9 modulu prostredn\u00edctvom n\u00e1vratovej hodnoty vo forme tabu\u013eky v ni\u017e\u0161ie uvedenom tvare.","title":"Vytv\u00e1ranie objektov starou syntaxou"},{"location":"dokumentacia_k_produktu/caste_problemy/#vytv\u00e1ranie-objektov-novou-syntaxou","text":"local logger local mojaPremenna local moja Funkcia return { logger = logger, mojaPremenna = mojaPremenna, mojaFunkcia = mojaFunkcia }","title":"Vytv\u00e1ranie objektov novou syntaxou"},{"location":"dokumentacia_k_produktu/caste_problemy/#v\u00fdskyt-starej-syntaxe","text":"Star\u00e1 syntax je pou\u017eit\u00e1 v nasleduj\u00facich moduloch : Luametrics metrics/init.lua metrics/rules.lua metrics/captures/ast.lua metrics/captures/block.lua metrics/captures/cyclomatic.lua metrics/captures/document_metrics.lua metrics/captures/functiontree.lua metrics/captures/halstead.lua metrics/captures/hypergraph.lua metrics/captures/infoflow.lua metrics/captures/LOC.lua metrics/captures/statements.lua metrics/luadoc/captures.lua metrics/luadoc/commentParser.lua Luameg meg.lua","title":"V\u00fdskyt starej syntaxe"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/","text":"\ud83d\udcdd Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du \u00b6 Pre ka\u017ed\u00fd modul existuje zoznam v\u0161etk\u00fdch vetiev, pre ktor\u00e9 bola vygenerovan\u00e9 dokument\u00e1cia. Medzi t\u00fdmito dokument\u00e1ciami sa d\u00e1 jednoducho prep\u00edna\u0165 pod\u013ea potreby. Za hlavn\u00fa dokument\u00e1ciu je pova\u017eovan\u00e1 dokument\u00e1cia na vetve develop alebo master , v pr\u00edpade, \u017ee pre dan\u00fd modulul nie je vetva develop vytvoren\u00e1. Pre niektor\u00e9 moduly nebola e\u0161te na vetv\u00e1ch master alebo develop vygenerovan\u00e1 dokument\u00e1cia, preto na ne nie je pridan\u00fd odkaz. 3D SoftViz \u00b6 Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre 3dsoftviz Lua Graph \u00b6 Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre LuaGraph Lua Interface \u00b6 Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre LuaInterface Luadb \u00b6 Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luadb Luagit \u00b6 Master Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luagit Luameg \u00b6 Master Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luameg Luametrics \u00b6 Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luametrics Luatree \u00b6 Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luatree","title":"\ud83d\udcdd Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#-dokument\u00e1cia-k-zdrojov\u00e9mu-k\u00f3du","text":"Pre ka\u017ed\u00fd modul existuje zoznam v\u0161etk\u00fdch vetiev, pre ktor\u00e9 bola vygenerovan\u00e9 dokument\u00e1cia. Medzi t\u00fdmito dokument\u00e1ciami sa d\u00e1 jednoducho prep\u00edna\u0165 pod\u013ea potreby. Za hlavn\u00fa dokument\u00e1ciu je pova\u017eovan\u00e1 dokument\u00e1cia na vetve develop alebo master , v pr\u00edpade, \u017ee pre dan\u00fd modulul nie je vetva develop vytvoren\u00e1. Pre niektor\u00e9 moduly nebola e\u0161te na vetv\u00e1ch master alebo develop vygenerovan\u00e1 dokument\u00e1cia, preto na ne nie je pridan\u00fd odkaz.","title":"\ud83d\udcdd Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#3d-softviz","text":"Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre 3dsoftviz","title":"3D SoftViz"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#lua-graph","text":"Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre LuaGraph","title":"Lua Graph"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#lua-interface","text":"Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre LuaInterface","title":"Lua Interface"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#luadb","text":"Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luadb","title":"Luadb"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#luagit","text":"Master Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luagit","title":"Luagit"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#luameg","text":"Master Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luameg","title":"Luameg"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#luametrics","text":"Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luametrics","title":"Luametrics"},{"location":"dokumentacia_k_produktu/dokumentacia_k_zdrojovemu_kodu/#luatree","text":"Develop Zoznam v\u0161etk\u00fdch dokument\u00e1ci\u00ed pre luatree","title":"Luatree"},{"location":"dokumentacia_k_produktu/uvod/","text":"1\ufe0f\u20e3 \u00davod \u00b6 Ke\u010f si predstav\u00edme projekt, ktor\u00fd je nap\u00edsan\u00fd v programovacom jazyku, vybavia sa n\u00e1m funkcie, premenn\u00e9 a z\u00e1vislosti t\u00fdchto funkci\u00ed. Pr\u00e1ve tieto dve veci, teda funkcie a z\u00e1vislosti sa daj\u00fa zobrazova\u0165 graficky vo forme grafov, kde funkcie predstavuj\u00fa vrcholy a ich volania zase hrany. N\u00e1\u0161 t\u00edm sa venujeme zobrazovaniu pr\u00e1ve tak\u00fdchto grafov pomocou virtu\u00e1lnej alebo roz\u0161\u00edrenej reality. Vizualizovanie t\u00fdchto grafov n\u00e1m dok\u00e1\u017ee pom\u00e1ha\u0165 pri anal\u00fdze k\u00f3du, ch\u00e1pan\u00ed z\u00e1vislosti jednotliv\u00fdch modulov alebo na prezenta\u010dn\u00e9 \u00fa\u010dely. Cie\u013eom n\u00e1\u0161ho projektu je teda poskytn\u00fa\u0165 pou\u017e\u00edvate\u013eovi v\u00e4\u010d\u0161\u00ed preh\u013ead v nap\u00edsanom k\u00f3de, \u010di u\u017e je to vo virtu\u00e1lnej realite kde k\u00f3d predstavuje graf, alebo v roz\u0161\u00edrenej realite kde je k\u00f3d zobrazen\u00fd ako metafora mesta.","title":"1\ufe0f\u20e3 \u00davod"},{"location":"dokumentacia_k_produktu/uvod/#1-\u00favod","text":"Ke\u010f si predstav\u00edme projekt, ktor\u00fd je nap\u00edsan\u00fd v programovacom jazyku, vybavia sa n\u00e1m funkcie, premenn\u00e9 a z\u00e1vislosti t\u00fdchto funkci\u00ed. Pr\u00e1ve tieto dve veci, teda funkcie a z\u00e1vislosti sa daj\u00fa zobrazova\u0165 graficky vo forme grafov, kde funkcie predstavuj\u00fa vrcholy a ich volania zase hrany. N\u00e1\u0161 t\u00edm sa venujeme zobrazovaniu pr\u00e1ve tak\u00fdchto grafov pomocou virtu\u00e1lnej alebo roz\u0161\u00edrenej reality. Vizualizovanie t\u00fdchto grafov n\u00e1m dok\u00e1\u017ee pom\u00e1ha\u0165 pri anal\u00fdze k\u00f3du, ch\u00e1pan\u00ed z\u00e1vislosti jednotliv\u00fdch modulov alebo na prezenta\u010dn\u00e9 \u00fa\u010dely. Cie\u013eom n\u00e1\u0161ho projektu je teda poskytn\u00fa\u0165 pou\u017e\u00edvate\u013eovi v\u00e4\u010d\u0161\u00ed preh\u013ead v nap\u00edsanom k\u00f3de, \u010di u\u017e je to vo virtu\u00e1lnej realite kde k\u00f3d predstavuje graf, alebo v roz\u0161\u00edrenej realite kde je k\u00f3d zobrazen\u00fd ako metafora mesta.","title":"1\ufe0f\u20e3 \u00davod"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/","text":"Architekt\u00fara syst\u00e9mu \u00b6 Celkov\u00fd poh\u013ead na syst\u00e9m \u00b6 Kapitola obsahuje opis z\u00e1kladnej architekt\u00fary projektu, jednotliv\u00e9 vrstvy a ich moduly. V\u0161etky moduly maj\u00fa vybudovan\u00fa infra\u0161trukt\u00faru, ktor\u00e1 zah\u0155\u0148a kompil\u00e1ciu, testovanie, coverage, generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du a jej export na vzdialen\u00fd server. Z\u00e1kladn\u00e1 architekt\u00fara \u00b6 Architekt\u00fara projektu je zlo\u017een\u00e1 zo 4 vrstiev. Na najni\u017e\u0161ej vrstve sa nach\u00e1dzaj\u00fa moduly jazyka Lua. Tieto moduly priamo nar\u00e1baj\u00fa s reprezent\u00e1ciou grafov\u00fdch \u00fadajov a vykon\u00e1vaj\u00fa nad nimi oper\u00e1cie. Druh\u00e1 vrstva je reprezentovan\u00e1 programovac\u00edm jazykom C++. Na tejto vrstve s\u00fa implementovan\u00e9 2 moduly, ktor\u00e9 sl\u00fa\u017eia ako rozhranie pre moduly jazyka C# pre pr\u00e1cu s najni\u017e\u0161ou vrstvou, t.j. modulmi jazyka Lua. Tretia vrstva je tvoren\u00e1 modulmi jazyka C#, ktor\u00e9 poskytuj\u00fa rozhranie pre Unity vrstvu, prostredn\u00edctvom ktorej je mo\u017en\u00e9 pracova\u0165 s ni\u017e\u0161\u00edmi vrstvami. Najvy\u0161\u0161ia vrstva je reprezentovan\u00e1 Unity, ktor\u00e9 poskytuje grafick\u00fa reprezent\u00e1ciu ni\u017e\u0161\u00edch vrstiev. Architekt\u00faru projektu je mo\u017en\u00e9 vidie\u0165 na obr\u00e1zku ni\u017e\u0161ie. Lua \u00b6 Na tejto vrstve sa nach\u00e1dza reprezent\u00e1cia grafov\u00fdch \u00fadajov. Jednotliv\u00e9 oper\u00e1cie nad grafom s\u00fa teda vykon\u00e1van\u00e9 na tejto vrstve. Vo v\u0161eobecnosti teda doch\u00e1dza k prepo\u010d\u00edtavaniu a zmen\u00e1m s\u00faradn\u00edc uzlov, anal\u00fdze zdrojov\u00e9ho k\u00f3du a po\u010d\u00edtaniu metr\u00edk. Bli\u017e\u0161ie inform\u00e1cie o generovan\u00ed grafu je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii generovania grafu . S touto vrstvou \u00fazko s\u00favis\u00ed tie\u017e jazyk Terra, v ktorom je implementovan\u00fd layoutovac\u00ed algoritmus Fruchterman-Reingold. Na tejto vrstve je tie\u017e mo\u017en\u00e9 analyzova\u0165 Moonscript projekty. Vrstva \u010falej poskytuje funkcionalitu pre generovanie UML a sekven\u010dn\u00fdch diagramov. Vrstva je celkovo tvoren\u00e1 5 modulmi. Luadb \u00b6 Logika modulu Luadb priamo s\u00favis\u00ed s tvorbou grafu. Obsahuje reprezent\u00e1ciu hr\u00e1n, uzlov a metauzlov. V r\u00e1mci modulu s\u00fa tie\u017e implementovan\u00e9 oper\u00e1cie, ktor\u00e9 je mo\u017en\u00e9 nad grafom vykon\u00e1va\u0165. Bli\u017e\u0161\u00ed popis modulu a layoutovacieho algoritmu je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii Lua modulov . Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . Luametrics \u00b6 Modul Luametrics vykon\u00e1va anal\u00fdzu zdrojov\u00e9ho k\u00f3du a produkuje AST, spolu s metrikami. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . Luameg \u00b6 \u00dalohou modulu je vytv\u00e1ranie UML a sekven\u010dn\u00fdch diagramov zo zdrojov\u00fdch k\u00f3dov. Modul podporuje jazyky Lua a Moonscript. Bli\u017e\u0161ie inform\u00e1cie k jednotliv\u00fdm diagramom je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii UML diagramov . Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . Luatree \u00b6 Luatree je bal\u00edk n\u00e1strojov na anal\u00fdzu a in\u0161pekciu AST, ktor\u00e9 produkuje modul Luametrics, a grafov volan\u00ed funkci\u00ed vytv\u00e1ran\u00fdch modulom Luadb. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . Luagit \u00b6 Modul Luagit sl\u00fa\u017ei na anal\u00fdzu Git repozit\u00e1rov, pri\u010dom k svojej \u010dinnosti vyu\u017e\u00edva moduly Luametrics a Luadb. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . C++ \u00b6 Druh\u00e1 vrstva, reprezentovan\u00e1 programovac\u00edm jazykom C++, sl\u00fa\u017ei ako rozhranie pre C# moduly, aby mohli komunikova\u0165 s Lua modulmi a z\u00edskava\u0165 tak grafov\u00e9 \u00fadaje, pr\u00edpadne nad t\u00fdmito \u00fadajmi vykon\u00e1va\u0165 oper\u00e1cie. Vrstva zah\u0155\u0148a 2 moduly. Bli\u017e\u0161ie inform\u00e1cie o t\u00fdchto moduloch je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii C++ modulov . LuaInterface \u00b6 Modul sl\u00fa\u017ei ako rozhranie medzi C# a Lua modulmi. Poskytuje met\u00f3dy pre volanie Lua funkci\u00ed a z\u00edskavanie inform\u00e1ci\u00ed. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . LuaGraph \u00b6 \u00dalohou modulu je na\u010d\u00edta\u0165 grafov\u00e9 \u00fadaje modulu Luadb a poskytova\u0165 ich vy\u0161\u0161\u00edm vrstv\u00e1m. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m . C# \u00b6 Programovac\u00ed jazyk C# predstavuje pomyseln\u00fa tretiu vrstvu. C# moduly s\u00fa priamo vyu\u017e\u00edvan\u00e9 vy\u0161\u0161ou vrstvou. Tieto moduly zabezpe\u010duj\u00fa pr\u00edstup k met\u00f3dam C++ modulov a tie\u017e umo\u017e\u0148uj\u00fa pracova\u0165 s grafov\u00fdmi \u00fadajmi. Na tejto vrstve obsahuje projekt 2 moduly. Bli\u017e\u0161\u00ed popis modulov je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii C# modulov . Infra\u0161trukt\u00fara a build syst\u00e9m s\u00fa zdru\u017een\u00e9 pre v\u0161etky C# moduly. Lua.Common \u00b6 Modul poskytuje pr\u00edstup k C++ met\u00f3dam, ktor\u00e9 s\u00fa exportovan\u00e9 vo forme DLL LuaGraph a LuaInterface . Modul obsahuje viacer\u00e9 pomocn\u00e9 met\u00f3dy, ktor\u00e9 zjednodu\u0161uj\u00fa reprezent\u00e1ciu \u00fadajov, pr\u00edpadne vykon\u00e1vaj\u00fa konverziu. Modul \u010falej obsahuje viacero atrib\u00fatov, ktor\u00e9 zjednodu\u0161uj\u00fa na\u010d\u00edtavanie pol\u00ed, \u0161trukt\u00far a re\u0165azcov. GraphCore \u00b6 V module je obsiahnut\u00e1 logika s\u00favisiaca s grafov\u00fdmi \u00fadajmi. Modul umo\u017e\u0148uje pr\u00e1cu s grafom, na\u010d\u00edtavanie jeho aktu\u00e1lneho stavu, polohy, pr\u00edpadne in\u00fdch \u0161pecifick\u00fdch vlastnost\u00ed. Unity \u00b6 Unity predstavuje najvy\u0161\u0161iu vrstvu, ktor\u00e1 sl\u00fa\u017ei na zobrazovanie a manipul\u00e1ciu grafov\u00fdch \u00fadajov prostredn\u00edctvom rozhran\u00ed ni\u017e\u0161\u00edch vrstiev. \u00dadaje ni\u017e\u0161\u00edch vrstiev graficky reprezentuje. Logika pr\u00e1ce Unity s grafov\u00fdmi \u00fadajmi je pop\u00edsan\u00e1 v dokument\u00e1cii generovania grafu . Vrstva zah\u0155\u0148a viacero modulov. Bli\u017e\u0161\u00ed popis jednotliv\u00fdch modulov je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii Unity modulov .","title":"Architekt\u00fara syst\u00e9mu"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#architekt\u00fara-syst\u00e9mu","text":"","title":"Architekt\u00fara syst\u00e9mu"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#celkov\u00fd-poh\u013ead-na-syst\u00e9m","text":"Kapitola obsahuje opis z\u00e1kladnej architekt\u00fary projektu, jednotliv\u00e9 vrstvy a ich moduly. V\u0161etky moduly maj\u00fa vybudovan\u00fa infra\u0161trukt\u00faru, ktor\u00e1 zah\u0155\u0148a kompil\u00e1ciu, testovanie, coverage, generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du a jej export na vzdialen\u00fd server.","title":"Celkov\u00fd poh\u013ead na syst\u00e9m"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#z\u00e1kladn\u00e1-architekt\u00fara","text":"Architekt\u00fara projektu je zlo\u017een\u00e1 zo 4 vrstiev. Na najni\u017e\u0161ej vrstve sa nach\u00e1dzaj\u00fa moduly jazyka Lua. Tieto moduly priamo nar\u00e1baj\u00fa s reprezent\u00e1ciou grafov\u00fdch \u00fadajov a vykon\u00e1vaj\u00fa nad nimi oper\u00e1cie. Druh\u00e1 vrstva je reprezentovan\u00e1 programovac\u00edm jazykom C++. Na tejto vrstve s\u00fa implementovan\u00e9 2 moduly, ktor\u00e9 sl\u00fa\u017eia ako rozhranie pre moduly jazyka C# pre pr\u00e1cu s najni\u017e\u0161ou vrstvou, t.j. modulmi jazyka Lua. Tretia vrstva je tvoren\u00e1 modulmi jazyka C#, ktor\u00e9 poskytuj\u00fa rozhranie pre Unity vrstvu, prostredn\u00edctvom ktorej je mo\u017en\u00e9 pracova\u0165 s ni\u017e\u0161\u00edmi vrstvami. Najvy\u0161\u0161ia vrstva je reprezentovan\u00e1 Unity, ktor\u00e9 poskytuje grafick\u00fa reprezent\u00e1ciu ni\u017e\u0161\u00edch vrstiev. Architekt\u00faru projektu je mo\u017en\u00e9 vidie\u0165 na obr\u00e1zku ni\u017e\u0161ie.","title":"Z\u00e1kladn\u00e1 architekt\u00fara"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#lua","text":"Na tejto vrstve sa nach\u00e1dza reprezent\u00e1cia grafov\u00fdch \u00fadajov. Jednotliv\u00e9 oper\u00e1cie nad grafom s\u00fa teda vykon\u00e1van\u00e9 na tejto vrstve. Vo v\u0161eobecnosti teda doch\u00e1dza k prepo\u010d\u00edtavaniu a zmen\u00e1m s\u00faradn\u00edc uzlov, anal\u00fdze zdrojov\u00e9ho k\u00f3du a po\u010d\u00edtaniu metr\u00edk. Bli\u017e\u0161ie inform\u00e1cie o generovan\u00ed grafu je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii generovania grafu . S touto vrstvou \u00fazko s\u00favis\u00ed tie\u017e jazyk Terra, v ktorom je implementovan\u00fd layoutovac\u00ed algoritmus Fruchterman-Reingold. Na tejto vrstve je tie\u017e mo\u017en\u00e9 analyzova\u0165 Moonscript projekty. Vrstva \u010falej poskytuje funkcionalitu pre generovanie UML a sekven\u010dn\u00fdch diagramov. Vrstva je celkovo tvoren\u00e1 5 modulmi.","title":"Lua"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luadb","text":"Logika modulu Luadb priamo s\u00favis\u00ed s tvorbou grafu. Obsahuje reprezent\u00e1ciu hr\u00e1n, uzlov a metauzlov. V r\u00e1mci modulu s\u00fa tie\u017e implementovan\u00e9 oper\u00e1cie, ktor\u00e9 je mo\u017en\u00e9 nad grafom vykon\u00e1va\u0165. Bli\u017e\u0161\u00ed popis modulu a layoutovacieho algoritmu je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii Lua modulov . Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"Luadb"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luametrics","text":"Modul Luametrics vykon\u00e1va anal\u00fdzu zdrojov\u00e9ho k\u00f3du a produkuje AST, spolu s metrikami. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"Luametrics"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luameg","text":"\u00dalohou modulu je vytv\u00e1ranie UML a sekven\u010dn\u00fdch diagramov zo zdrojov\u00fdch k\u00f3dov. Modul podporuje jazyky Lua a Moonscript. Bli\u017e\u0161ie inform\u00e1cie k jednotliv\u00fdm diagramom je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii UML diagramov . Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"Luameg"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luatree","text":"Luatree je bal\u00edk n\u00e1strojov na anal\u00fdzu a in\u0161pekciu AST, ktor\u00e9 produkuje modul Luametrics, a grafov volan\u00ed funkci\u00ed vytv\u00e1ran\u00fdch modulom Luadb. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"Luatree"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luagit","text":"Modul Luagit sl\u00fa\u017ei na anal\u00fdzu Git repozit\u00e1rov, pri\u010dom k svojej \u010dinnosti vyu\u017e\u00edva moduly Luametrics a Luadb. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"Luagit"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#c","text":"Druh\u00e1 vrstva, reprezentovan\u00e1 programovac\u00edm jazykom C++, sl\u00fa\u017ei ako rozhranie pre C# moduly, aby mohli komunikova\u0165 s Lua modulmi a z\u00edskava\u0165 tak grafov\u00e9 \u00fadaje, pr\u00edpadne nad t\u00fdmito \u00fadajmi vykon\u00e1va\u0165 oper\u00e1cie. Vrstva zah\u0155\u0148a 2 moduly. Bli\u017e\u0161ie inform\u00e1cie o t\u00fdchto moduloch je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii C++ modulov .","title":"C++"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luainterface","text":"Modul sl\u00fa\u017ei ako rozhranie medzi C# a Lua modulmi. Poskytuje met\u00f3dy pre volanie Lua funkci\u00ed a z\u00edskavanie inform\u00e1ci\u00ed. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luagraph","text":"\u00dalohou modulu je na\u010d\u00edta\u0165 grafov\u00e9 \u00fadaje modulu Luadb a poskytova\u0165 ich vy\u0161\u0161\u00edm vrstv\u00e1m. Modul m\u00e1 vybudovan\u00fa infra\u0161trukt\u00faru a vlastn\u00fd build syst\u00e9m .","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#c_1","text":"Programovac\u00ed jazyk C# predstavuje pomyseln\u00fa tretiu vrstvu. C# moduly s\u00fa priamo vyu\u017e\u00edvan\u00e9 vy\u0161\u0161ou vrstvou. Tieto moduly zabezpe\u010duj\u00fa pr\u00edstup k met\u00f3dam C++ modulov a tie\u017e umo\u017e\u0148uj\u00fa pracova\u0165 s grafov\u00fdmi \u00fadajmi. Na tejto vrstve obsahuje projekt 2 moduly. Bli\u017e\u0161\u00ed popis modulov je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii C# modulov . Infra\u0161trukt\u00fara a build syst\u00e9m s\u00fa zdru\u017een\u00e9 pre v\u0161etky C# moduly.","title":"C#"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#luacommon","text":"Modul poskytuje pr\u00edstup k C++ met\u00f3dam, ktor\u00e9 s\u00fa exportovan\u00e9 vo forme DLL LuaGraph a LuaInterface . Modul obsahuje viacer\u00e9 pomocn\u00e9 met\u00f3dy, ktor\u00e9 zjednodu\u0161uj\u00fa reprezent\u00e1ciu \u00fadajov, pr\u00edpadne vykon\u00e1vaj\u00fa konverziu. Modul \u010falej obsahuje viacero atrib\u00fatov, ktor\u00e9 zjednodu\u0161uj\u00fa na\u010d\u00edtavanie pol\u00ed, \u0161trukt\u00far a re\u0165azcov.","title":"Lua.Common"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#graphcore","text":"V module je obsiahnut\u00e1 logika s\u00favisiaca s grafov\u00fdmi \u00fadajmi. Modul umo\u017e\u0148uje pr\u00e1cu s grafom, na\u010d\u00edtavanie jeho aktu\u00e1lneho stavu, polohy, pr\u00edpadne in\u00fdch \u0161pecifick\u00fdch vlastnost\u00ed.","title":"GraphCore"},{"location":"dokumentacia_k_produktu/architektura_systemu/architektura_systemu/#unity","text":"Unity predstavuje najvy\u0161\u0161iu vrstvu, ktor\u00e1 sl\u00fa\u017ei na zobrazovanie a manipul\u00e1ciu grafov\u00fdch \u00fadajov prostredn\u00edctvom rozhran\u00ed ni\u017e\u0161\u00edch vrstiev. \u00dadaje ni\u017e\u0161\u00edch vrstiev graficky reprezentuje. Logika pr\u00e1ce Unity s grafov\u00fdmi \u00fadajmi je pop\u00edsan\u00e1 v dokument\u00e1cii generovania grafu . Vrstva zah\u0155\u0148a viacero modulov. Bli\u017e\u0161\u00ed popis jednotliv\u00fdch modulov je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii Unity modulov .","title":"Unity"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/","text":"Mo\u017enosti komunik\u00e1cie medzi procesmi \u00b6 Kv\u00f4li probl\u00e9mom s kompabilitou medzi platformami je vhodn\u00e9, ak \u010fal\u0161\u00ed v\u00fdvoj projektu bude smerova\u0165 ku komunik\u00e1cii medzi procesmi prostredn\u00edctvom IPC alebo RPC. Cie\u013eom je tak \u00faplne izolova\u0165 \u010das\u0165, ktor\u00e1 pre svoju \u010dinnos\u0165 vy\u017eaduje programovacie jazyky Lua a Terra. T\u00e1to \u010das\u0165 bude kontajnerizovan\u00e1. Kontajner bude obsahova\u0165 interpreter LuaJIT z distrib\u00facie Luapower . Kontajner bude \u010falej obsahova\u0165 v\u0161etky z\u00e1vislosti a Lua moduly potrebn\u00e9 k \u010dinnosti. Potrebn\u00e9 je tak zabezpe\u010di\u0165 komunik\u00e1ciu medzi kontajnerom a hostite\u013esk\u00fdm syst\u00e9mom. Taktie\u017e je nevyhnutn\u00e9 navrhn\u00fa\u0165 sp\u00f4sob serializ\u00e1cie \u00fadajov. Do bud\u00facna je mo\u017en\u00e9 t\u00fato komunik\u00e1ciu rie\u0161i\u0165 bu\u010f na \u00farovni komunik\u00e1cie v r\u00e1mci lok\u00e1lneho stroja, alebo je mo\u017en\u00e9 upravi\u0165 projekt tak, aby vyu\u017e\u00edval vzdialen\u00fd server. Z h\u013eadiska povahy tejto komunik\u00e1cie je potrebn\u00e9 zabezpe\u010di\u0165 vysok\u00fa priepustnos\u0165. Kontajner by bol zalo\u017een\u00fd na Lua CI Image , ktor\u00fd je pou\u017eit\u00fd taktie\u017e vo v\u00fdvojovom prostred\u00ed Devenv . V kontajneri by teda be\u017eal Layouter , ktor\u00fd by prepo\u010d\u00edtaval s\u00faradnice. Tie by potom poskytoval C# modulu GraphCore . T\u00fdmto sp\u00f4sobom je mo\u017en\u00e9 z\u00e1rove\u0148 projekt od\u013eah\u010di\u0165, nako\u013eko by nebolo potrebn\u00e9 vyu\u017e\u00edva\u0165 C++ moduly , ktor\u00e9 sprostredk\u00favaj\u00fa komunik\u00e1ciu medzi C# a Lua vrstvou. Komunik\u00e1cia \u00b6 Komunik\u00e1ciu medzi kontajnerom a hostite\u013esk\u00fdm syst\u00e9mom je v princ\u00edpe mo\u017en\u00e9 vykona\u0165 bu\u010f medziprocesovou komunik\u00e1ciou (IPC), alebo vzdialen\u00fdm volan\u00edm proced\u00far (RPC). Z\u00e1rove\u0148 je potrebn\u00e9 bra\u0165 do \u00favahy kompatibilitu medzi platformami. Nako\u013eko kontajner vyu\u017e\u00edva opera\u010dn\u00fd syst\u00e9m Linux Ubuntu, nie je mo\u017en\u00e9 zabezpe\u010di\u0165 kompatibilitu so v\u0161etk\u00fdmi paradigmami. Z h\u013eadiska r\u00fdchlosti s\u00fa jednotliv\u00e9 paradigmy zoraden\u00e9 zostupne od najr\u00fdchlej\u0161ej po najpomal\u0161iu : Zdie\u013ean\u00e1 pam\u00e4\u0165 (shared memory/shm) Message Queue Unix domain sockets Pipe FIFO (named pipe) TCP socket D\u00f4le\u017eit\u00e9 je poznamena\u0165, \u017ee rozdiel medzi FIFO a TCP socketmi predstavuje pribli\u017ene 16%. Ako bolo vy\u0161\u0161ie uveden\u00e9, kv\u00f4li kompatibilite nie je mo\u017en\u00e9 pou\u017ei\u0165 v\u0161etky paradigmy. Z h\u013eadiska kompatibility je najv\u00fdhodnej\u0161ie pou\u017eitie TCP socketu. Prostredn\u00edctvom TCP socketu je n\u00e1sledne mo\u017en\u00e9 prejs\u0165 na pou\u017eitie vzdialen\u00e9ho servera bez potreby modifik\u00e1cie klientskej \u010dasti. Na zabezpe\u010denie komunik\u00e1cie existuje viacero kni\u017en\u00edc, ktor\u00e9 sa l\u00ed\u0161ia r\u00fdchlos\u0165ou, podporovan\u00fdmi vzormi komunik\u00e1cie, pr\u00edpadne pou\u017eit\u00edm brokerov (centr\u00e1lnych uzlov). Pre potreby projektu je nevyhnutn\u00e9, aby bola dostupn\u00e1 kni\u017enica pre programovacie jazyky Lua a C#. ZeroMQ \u00b6 ZeroMQ (tie\u017e zn\u00e1me ako \u00d8MQ, 0MQ, alebo zmq) predstavuje r\u00e1mec, ktor\u00fd umo\u017e\u0148uje pren\u00e1\u0161a\u0165 spr\u00e1vy medzi viacer\u00fdmi uzlami. Podporuje viacer\u00e9 sp\u00f4soby prenosu - v r\u00e1mci procesu, medzi procesmi, TCP a multicast. ZeroMQ \u010falej implementuje mechanizmus High Water Mark , ktor\u00fd predstavuje pevn\u00fd limit maxim\u00e1lneho po\u010dtu spr\u00e1v v rade, po naplnen\u00ed ktor\u00e9ho d\u00f4jde k blokovaniu alebo zahadzovaniu \u010fal\u0161\u00edch prijat\u00fdch spr\u00e1v. V\u00fdhodou rie\u0161enia je kvalitn\u00e1 dokument\u00e1cia . K dispoz\u00edcii je ako verzia pre jazyk C# , tak aj pre jazyk Lua. Lua-zmq predstavuje binding nad ZeroMQ verzie 2. Kni\u017enica Lzmq je binding nad verziami 3 a 4. Obe kni\u017enice je mo\u017en\u00e9 in\u0161talova\u0165 prostredn\u00edctvom spr\u00e1vcu Luarocks . V spojen\u00ed s interpreterom LuaJIT by mal r\u00e1mec poskytova\u0165 dostato\u010dn\u00fa r\u00fdchlos\u0165 aj pri komunik\u00e1cii prostredn\u00edctvom TCP socketu. Pod\u013ea dostupn\u00fdch inform\u00e1cii je mo\u017en\u00e9 dosiahnu\u0165 r\u00fdchlos\u0165 a\u017e 1 478.619 Mb/s. V repozit\u00e1roch Lzmq-guide a Zguide je mo\u017en\u00e9 n\u00e1js\u0165 viacero uk\u00e1\u017ekov\u00fdch implement\u00e1ci\u00ed pre r\u00f4zne programovacie jazyky. Ni\u017e\u0161ie je mo\u017en\u00e9 vidie\u0165 uk\u00e1\u017ekov\u00e9 rie\u0161enie jednoduchej klient-server komunik\u00e1cie prostredn\u00edctvom Unix domain socketov. Server bol vytvoren\u00fd v jazyku C a klient v jazyku Lua. // C Hello World server #include <zmq.h> #include <stdio.h> #include <unistd.h> #include <string.h> #include <assert.h> int main ( void ) { // Socket to talk to clients void * context = zmq_ctx_new (); void * responder = zmq_socket ( context , ZMQ_REP ); int rc = zmq_bind ( responder , \"ipc:///src/test\" ); assert ( rc == 0 ); while ( 1 ) { char buffer [ 10 ]; zmq_recv ( responder , buffer , 10 , 0 ); printf ( \"Received Hello \\n \" ); sleep ( 1 ); // Do some 'work' zmq_send ( responder , \"World\" , 5 , 0 ); } return 0 ; } -- -- Lua Hello World client -- Sends \"Hello\" to server, expects \"World\" back -- -- Author: Robert G. Jakabosky <bobby@sharedrealm.com> -- local zmq = require \"lzmq\" local context = zmq . init ( 1 ) -- Socket to talk to server print ( \"Connecting to hello world server\u2026\" ) local socket = context : socket ( zmq . REQ ) socket : connect ( \"ipc:///src/test\" ) for n = 1 , 10 do print ( \"Sending Hello \" .. n .. \" \u2026\" ) socket : send ( \"Hello\" ) local reply = socket : recv () print ( \"Received World \" .. n .. \" [\" .. reply .. \"]\" ) end socket : close () context : term () ZeroMQ poskytuje tie\u017e viacero vzorov komunik\u00e1cie : Request-reply \u00b6 Prepojenie mno\u017einy klientov s mno\u017einou slu\u017eieb. V tomto pr\u00edpade sa jedn\u00e1 o RPC a model distrib\u00facie \u00faloh. Publish-subscribe \u00b6 Vzor prep\u00e1ja mno\u017einu producentov s mno\u017einou konzumentov. Ide o model distrib\u00facie \u00fadajov. Pipeline \u00b6 Potrubie, ktor\u00e9 sp\u00e1ja viacero uzlov. M\u00f4\u017ee ma\u0165 viacero krokov a slu\u010diek. Jedn\u00e1 sa o model paralelnej distrib\u00facie a zberu. Exclusive pair \u00b6 Vzor prep\u00e1ja pr\u00e1ve 2 sockety. Ide o model prepojenia dvoch vl\u00e1ken v procese. Serializ\u00e1cia \u00b6 Pred samotn\u00fdm odoslan\u00edm je potrebn\u00e1 serializ\u00e1cia \u00fadajov. \u010c\u00edm efekt\u00edvnej\u0161ia bude serializ\u00e1cia, t\u00fdm efekt\u00edvnej\u0161ie m\u00f4\u017ee prebieha\u0165 cel\u00e1 komunik\u00e1cia, obzvl\u00e1\u0161\u0165 pokia\u013e by v\u00fdsledn\u00e9 rie\u0161enie komunikovalo so vzdialen\u00fdm serverom. Medzi najbe\u017enej\u0161ie form\u00e1ty \u00fadajov patr\u00ed JSON a XML. Existuje viacero kni\u017en\u00edc pre jazyky C# aj Lua. JSON \u00b6 JSON predstavuje jednoduch\u00fd form\u00e1t na v\u00fdmenu \u00fadajov. Patr\u00ed medzi pomerne \u013eahko \u010ditate\u013en\u00e9 a zapisovate\u013en\u00e9 not\u00e1cie. M\u00e1 taktie\u017e \u0161irok\u00fa podporu. Je zalo\u017een\u00fd na 2 z\u00e1kladn\u00fdch \u0161trukt\u00farach, a to kolekcia p\u00e1rov k\u013e\u00fa\u010d-hodnota (objekt, z\u00e1znam, \u0161trukt\u00fara, slovn\u00edk a pod.) a usporiadan\u00fd zoznam hodn\u00f4t (pole, vektor, zoznam a pod.). Pre programovac\u00ed jazyk Lua je mo\u017en\u00e9 pou\u017ei\u0165 kni\u017enicu priamo z distrib\u00facie Luapower, konkr\u00e9tne CJSON . MessagePack \u00b6 MessagePack je r\u00e1mec na serializ\u00e1ciu \u00fadajov. Podobne ako JSON, umo\u017e\u0148uje v\u00fdmenu \u00fadajov medzi viacer\u00fdmi uzlami a programovac\u00edmi jazykmi. Oproti form\u00e1tu JSON by mal by\u0165 MessagePack efekt\u00edvnej\u0161\u00ed a r\u00fdchlej\u0161\u00ed, nako\u013eko serializovan\u00e9 \u00fadaje maj\u00fa men\u0161iu ve\u013ekos\u0165. Men\u0161ia ve\u013ekos\u0165 so sebou prin\u00e1\u0161a aj nieko\u013eko obmedzen\u00ed, ktor\u00e9 sa t\u00fdkaj\u00fa mo\u017enej ve\u013ekosti \u00fadajov\u00fdch typov. Jednotliv\u00e9 obmedzenia, rovnako ako aj podporovan\u00e9 \u00fadajov\u00e9 typy je mo\u017en\u00e9 n\u00e1js\u0165 v \u0161pecifik\u00e1cii . Pre programovac\u00ed jazyk Lua je k dispoz\u00edcii kni\u017enica lua-MessagePack , ktor\u00e1 by mala by\u0165 pod\u013ea autora r\u00fdchla v kombin\u00e1cii s interpreterom LuaJIT . Rovnako aj t\u00fato kni\u017enicu je mo\u017en\u00e9 in\u0161talova\u0165 prostredn\u00edctvom Luarocks . Pre C# je potom k dispoz\u00edcii kni\u017enica msgpack-cli . Uk\u00e1\u017eka RPC \u00b6 Repozit\u00e1r 3DSoftviz obsahuje adres\u00e1r examples, v ktorom sa nach\u00e1dza uk\u00e1\u017eka mo\u017enost\u00ed implement\u00e1cie mechanizmov RPC s pou\u017eit\u00edm ZeroMQ a MessagePack. Za t\u00fdmto \u00fa\u010delom bol modifikovan\u00fd Lua CI Image , ktor\u00fd obsahuje v\u0161etky potrebn\u00e9 z\u00e1vislosti. Uk\u00e1\u017eka obsahuje jednoduch\u00fa implement\u00e1ciu serverovej \u010dasti v jazyku Lua a klientskej \u010dasti v jazyku C#. Serverov\u00e1 \u010das\u0165 po\u010d\u00fava na porte TCP/49155. Prijat\u00e1 spr\u00e1va je n\u00e1sledne rozbalen\u00e1 prostredn\u00edctvom kni\u017enice MessagePack. Rozbalen\u00e1 spr\u00e1va m\u00e1 potom formu tabu\u013eky, ku ktorej obsahu je mo\u017en\u00e9 pristupova\u0165 prostredn\u00edctvom \u010d\u00edseln\u00fdch indexov. V uk\u00e1\u017eke sa o\u010dak\u00e1va spr\u00e1va v nasleduj\u00facom tvare. local message = {} message [ 1 ] = \"command\" message [ 2 ] = \"params\" message [ 3 ] = \"result\" V\u0161etky atrib\u00faty tabu\u013eky s\u00fa reprezentovan\u00e9 vo forme re\u0165azcov. Jednotliv\u00e9 lok\u00e1lne funkcie s\u00fa ulo\u017een\u00e9 v tabu\u013eke s n\u00e1zvom _L , \u010d\u00edm je mo\u017en\u00e9 zabezpe\u010di\u0165 volanie funkcie na z\u00e1klade jej n\u00e1zvu vo forme re\u0165azca. Rovnak\u00fdm sp\u00f4sobom je mo\u017en\u00e9 uchov\u00e1va\u0165 tie\u017e lok\u00e1lne premenn\u00e9. local _L = {} _L [ \"extract\" ] = extract Pre \u00fa\u010dely uk\u00e1\u017eky bola vytvoren\u00e1 funkcia s n\u00e1zvom extract , ktor\u00e1 spracov\u00e1va parametre a n\u00e1sledne vol\u00e1 funkciu extractor.extract, ktorej v\u00fdstup je odovzdan\u00fd vo forme n\u00e1vratovej hodnoty. local function extract ( params ) local path = params [ 1 ] return extractor . extract ( path , astMan ) end Funkcia je potom volan\u00e1 bezpe\u010dn\u00fdm sp\u00f4sobom prostredn\u00edctvom funkcie pcall . Funkci\u00ed s\u00fa tie\u017e odovzdan\u00e9 po\u017eadovan\u00e9 parametre. local command = message [ 1 ] local params = message [ 2 ] local status , result = pcall ( _L [ command ], params ) Pokia\u013e atrib\u00fat command obsahuje re\u0165azec \"end\", d\u00f4jde k nastaveniu premennej cyklu na hodnotu false, server upovedom\u00ed klienta a program skon\u010d\u00ed. if command == \"end\" then loop = false request [ 3 ] = \"Server stopping\" socket : send ( mp . pack ( request )) break end Do atrib\u00fatu result m\u00f4\u017ee by\u0165 vlo\u017een\u00fd v\u00fdsledok. Pre \u00fa\u010dely uk\u00e1\u017eky je atrib\u00fat reprezentovan\u00fd vo forme re\u0165azca. Do bud\u00facna by v\u0161ak bolo vhodnej\u0161ie tento atrib\u00fat reprezentova\u0165 na klientskej strane vnoren\u00fdm objektom, tak\u017ee na strane servera by mal atrib\u00fat formu vnorenej tabu\u013eky. Odpove\u010f je n\u00e1sledne odoslan\u00e1 klientovi. message [ 3 ] = json . encode ( result ) socket : send ( mp . pack ( message )) Klientska \u010das\u0165 je implementovan\u00e1 v programovacom jazyku C#. Na \u00faspe\u0161n\u00fa komunik\u00e1ciu medzi klientskou a serverovou \u010das\u0165ou s vyu\u017eit\u00edm serializ\u00e1cie prostredn\u00edctvom kni\u017enice MessagePack, je potrebn\u00e9 vytvori\u0165 objektov\u00e9 \u0161trukt\u00fary, ktor\u00e9 bud\u00fa dodr\u017ean\u00e9 ako na klientskej, tak aj serverovej strane. Dodr\u017eanie \u0161trukt\u00fary sa t\u00fdka hlavne pou\u017eit\u00fdch \u00fadajov\u00fdch typov. \u0160trukt\u00fara objektu, ktor\u00fd je mapovan\u00fd na tabu\u013eku uveden\u00fa vy\u0161\u0161ie je mo\u017en\u00e9 vidie\u0165 na nasleduj\u00facej uk\u00e1\u017eke. public class RemoteCall { public string functionName { get ; set ; } public string [] functionParams { get ; set ; } public string result { get ; set ; } } Atrib\u00fat functionName zodpoved\u00e1 atrib\u00fatu ozna\u010den\u00e9mu ako command , functionParams zodpoved\u00e1 params a result je mapovan\u00fd na result . Tak\u00fdmto sp\u00f4sobom je mo\u017en\u00e9 zabezpe\u010di\u0165 bezprobl\u00e9mov\u00e9 mapovanie C# objektov na tabu\u013eku v jazyku Lua. Rovnako je bezprobl\u00e9mov\u00e9 sp\u00e4tn\u00e9 mapovanie tabu\u013eky na C# objekt, ku ktor\u00e9ho atrib\u00fatom je mo\u017en\u00e9 pristupova\u0165 \u0161tandardnou bodkovou not\u00e1ciou. MessagePackSerializer serializer = MessagePackSerializer . Get ( rpc . GetType ()); MemoryStream toUnpack = null ; byte [] responseFromServer = client . ReceiveFrameBytes (); toUnpack = new MemoryStream ( responseFromServer ); RemoteCall unpacked = ( RemoteCall ) serializer . Unpack ( toUnpack ); Console . WriteLine ( unpacked . result ); Spustenie \u00b6 Na spustenie uk\u00e1\u017eky je potrebn\u00e9 prostredie Docker a IDE Visual Studio. Pre spustenie serverovej \u010dasti uk\u00e1\u017eky je potrebn\u00e1 in\u0161tal\u00e1cia v\u00fdvojov\u00e9ho prostredia Devenv . Je teda potrebn\u00e9 postupova\u0165 pod\u013ea krokov uveden\u00fdch v dokument\u00e1cii. Repozit\u00e1r obsahuj\u00faci s\u00fabory potrebn\u00e9 pre v\u00fdvojov\u00e9 prostredie devenv by mali by\u0165 naklonovan\u00e9 do rovnomenn\u00e9ho adres\u00e1ra, t.j. devenv. Tento adres\u00e1r po \u00faspe\u0161nej in\u0161tal\u00e1cii obsahuje \u010falej adres\u00e1r luadev. Do tohto adres\u00e1ra je potrebn\u00e9 naklonova\u0165 repozit\u00e1r 3DSoftVis_Remake . Pre spustenie serverovej \u010dasti je potrebn\u00e9 prejs\u0165 do adres\u00e1ra examples/rpc a n\u00e1sledne pr\u00edkazom lua server.lua program spusti\u0165. Tip Na spustenie nie je potrebn\u00e9 klonovanie cel\u00e9ho repozit\u00e1ra. Pokia\u013e u\u017e repozit\u00e1r bol naklonovan\u00fd, sta\u010d\u00ed nakop\u00edrova\u0165 adres\u00e1r examples do adres\u00e1ra luadev . Na spustenie klientskej \u010dasti je potrebn\u00e9 otvori\u0165 s\u00fabor examples/rpc/Lua_rpc/Lua_rpc.sln . Solution je potrebn\u00e9 n\u00e1sledne v IDE Visual Studio zostavi\u0165 a spusti\u0165. Pozn\u00e1mka \u00b6 Ako testovac\u00ed vstup je v s\u00fa\u010dasnosti pre \u00fa\u010dely uk\u00e1\u017eky pou\u017eit\u00fd Moonscript projekt. Pou\u017eitie Lua projektu moment\u00e1lne nie je mo\u017en\u00e9, pravdepodobne kv\u00f4li vzniku cyklov vo v\u00fdslednom grafe, v d\u00f4sledku \u010doho nie je mo\u017en\u00e9 nad t\u00fdmito \u00fadajmi vykona\u0165 serializ\u00e1ciu ani prostredn\u00edctvom kni\u017enice ZeroMQ, ani CJSON. Po odstr\u00e1nen\u00ed cyklov by so serializ\u00e1ciou nemal by\u0165 probl\u00e9m. Tento probl\u00e9m sa vyskytuje pri priamom volan\u00ed funkcie extractor.extract , ktor\u00e1 je s\u00fa\u010das\u0165ou submodulu luadb.extraction.extractor . Pozn\u00e1mky \u00b6 K dipoz\u00edcii je viacero v\u00fdvojov\u00fdch r\u00e1mcov umo\u017e\u0148uj\u00facich komunik\u00e1ciu medzi viacer\u00fdmi uzlami. Jedn\u00fdm z rie\u0161en\u00ed m\u00f4\u017ee by\u0165 gRPC , ktor\u00e9 v\u0161ak nem\u00e1 k dispoz\u00edcii ofici\u00e1lnu kni\u017enicu pre jazyk Lua. \u010eal\u0161ou alternat\u00edvou m\u00f4\u017ee by\u0165 komunik\u00e1cia prostredn\u00edctvom JSON-RPC . \u00dadaje by sa pren\u00e1\u0161ali vo form\u00e1te JSON. Ni\u017e\u0161ie je mo\u017en\u00e9 vidie\u0165 uk\u00e1\u017ekov\u00e9 volania. { \"method\" : \"doString\" , \"params\" :[ \"asd = {ma=12,mk=45}\" ], \"id\" : 12 } { \"method\" : \"doString\" , \"params\" :[ \"asd = \\\"asd\\\\nxncbv\\\"\" ], \"id\" : 13 } { \"method\" : \"getObject\" , \"params\" :[ \"asd\" ], \"id\" : 14 } { \"method\" : \"doString\" , \"params\" :[ \"aasd()\" ]} { \"method\" : \"doString\" , \"params\" :[ \"gr = getGraph(0)\" ]} { \"method\" : \"getObject\" , \"params\" :[ \"gr\" ]} { \"method\" : \"doString\" , \"params\" :[ \"aasd()\" ]} { \"method\" : \"doString\" , \"params\" :[ \"UMLVALUE = getSequenceDiagram(0, 68)\" ]} { \"method\" : \"getString\" , \"params\" :[ \"UMLVALUE\" ]} { \"method\" : \"doString\" , \"params\" :[ \"print(\\\"asd\\\\nxncbv\\\")\" ], \"id\" : 13 } Viacero u\u017eito\u010dn\u00fdch inform\u00e1ci\u00ed, vr\u00e1tane implement\u00e1cie funkci\u00ed doString , getString a getObject , rovnako aj pou\u017eitie exportovan\u00fdch funkci\u00ed, je mo\u017en\u00e9 n\u00e1js\u0165 v pozn\u00e1mkach v OneNote . U\u017eito\u010dn\u00e9 linky \u00b6 https://github.com/luapower https://luarocks.org/modules/neopallium/lua-zmq https://luarocks.org/modules/moteus/lzmq http://zguide.zeromq.org/lua:all https://github.com/zeromq/libzmq https://github.com/goldsborough/ipc-bench https://github.com/grpc https://docs.docker.com/engine/reference/run/#ipc-settings---ipc https://github.com/msgpack https://luarocks.org/modules/fperrad/lua-messagepack","title":"Mo\u017enosti komunik\u00e1cie medzi procesmi"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#mo\u017enosti-komunik\u00e1cie-medzi-procesmi","text":"Kv\u00f4li probl\u00e9mom s kompabilitou medzi platformami je vhodn\u00e9, ak \u010fal\u0161\u00ed v\u00fdvoj projektu bude smerova\u0165 ku komunik\u00e1cii medzi procesmi prostredn\u00edctvom IPC alebo RPC. Cie\u013eom je tak \u00faplne izolova\u0165 \u010das\u0165, ktor\u00e1 pre svoju \u010dinnos\u0165 vy\u017eaduje programovacie jazyky Lua a Terra. T\u00e1to \u010das\u0165 bude kontajnerizovan\u00e1. Kontajner bude obsahova\u0165 interpreter LuaJIT z distrib\u00facie Luapower . Kontajner bude \u010falej obsahova\u0165 v\u0161etky z\u00e1vislosti a Lua moduly potrebn\u00e9 k \u010dinnosti. Potrebn\u00e9 je tak zabezpe\u010di\u0165 komunik\u00e1ciu medzi kontajnerom a hostite\u013esk\u00fdm syst\u00e9mom. Taktie\u017e je nevyhnutn\u00e9 navrhn\u00fa\u0165 sp\u00f4sob serializ\u00e1cie \u00fadajov. Do bud\u00facna je mo\u017en\u00e9 t\u00fato komunik\u00e1ciu rie\u0161i\u0165 bu\u010f na \u00farovni komunik\u00e1cie v r\u00e1mci lok\u00e1lneho stroja, alebo je mo\u017en\u00e9 upravi\u0165 projekt tak, aby vyu\u017e\u00edval vzdialen\u00fd server. Z h\u013eadiska povahy tejto komunik\u00e1cie je potrebn\u00e9 zabezpe\u010di\u0165 vysok\u00fa priepustnos\u0165. Kontajner by bol zalo\u017een\u00fd na Lua CI Image , ktor\u00fd je pou\u017eit\u00fd taktie\u017e vo v\u00fdvojovom prostred\u00ed Devenv . V kontajneri by teda be\u017eal Layouter , ktor\u00fd by prepo\u010d\u00edtaval s\u00faradnice. Tie by potom poskytoval C# modulu GraphCore . T\u00fdmto sp\u00f4sobom je mo\u017en\u00e9 z\u00e1rove\u0148 projekt od\u013eah\u010di\u0165, nako\u013eko by nebolo potrebn\u00e9 vyu\u017e\u00edva\u0165 C++ moduly , ktor\u00e9 sprostredk\u00favaj\u00fa komunik\u00e1ciu medzi C# a Lua vrstvou.","title":"Mo\u017enosti komunik\u00e1cie medzi procesmi"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#komunik\u00e1cia","text":"Komunik\u00e1ciu medzi kontajnerom a hostite\u013esk\u00fdm syst\u00e9mom je v princ\u00edpe mo\u017en\u00e9 vykona\u0165 bu\u010f medziprocesovou komunik\u00e1ciou (IPC), alebo vzdialen\u00fdm volan\u00edm proced\u00far (RPC). Z\u00e1rove\u0148 je potrebn\u00e9 bra\u0165 do \u00favahy kompatibilitu medzi platformami. Nako\u013eko kontajner vyu\u017e\u00edva opera\u010dn\u00fd syst\u00e9m Linux Ubuntu, nie je mo\u017en\u00e9 zabezpe\u010di\u0165 kompatibilitu so v\u0161etk\u00fdmi paradigmami. Z h\u013eadiska r\u00fdchlosti s\u00fa jednotliv\u00e9 paradigmy zoraden\u00e9 zostupne od najr\u00fdchlej\u0161ej po najpomal\u0161iu : Zdie\u013ean\u00e1 pam\u00e4\u0165 (shared memory/shm) Message Queue Unix domain sockets Pipe FIFO (named pipe) TCP socket D\u00f4le\u017eit\u00e9 je poznamena\u0165, \u017ee rozdiel medzi FIFO a TCP socketmi predstavuje pribli\u017ene 16%. Ako bolo vy\u0161\u0161ie uveden\u00e9, kv\u00f4li kompatibilite nie je mo\u017en\u00e9 pou\u017ei\u0165 v\u0161etky paradigmy. Z h\u013eadiska kompatibility je najv\u00fdhodnej\u0161ie pou\u017eitie TCP socketu. Prostredn\u00edctvom TCP socketu je n\u00e1sledne mo\u017en\u00e9 prejs\u0165 na pou\u017eitie vzdialen\u00e9ho servera bez potreby modifik\u00e1cie klientskej \u010dasti. Na zabezpe\u010denie komunik\u00e1cie existuje viacero kni\u017en\u00edc, ktor\u00e9 sa l\u00ed\u0161ia r\u00fdchlos\u0165ou, podporovan\u00fdmi vzormi komunik\u00e1cie, pr\u00edpadne pou\u017eit\u00edm brokerov (centr\u00e1lnych uzlov). Pre potreby projektu je nevyhnutn\u00e9, aby bola dostupn\u00e1 kni\u017enica pre programovacie jazyky Lua a C#.","title":"Komunik\u00e1cia"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#zeromq","text":"ZeroMQ (tie\u017e zn\u00e1me ako \u00d8MQ, 0MQ, alebo zmq) predstavuje r\u00e1mec, ktor\u00fd umo\u017e\u0148uje pren\u00e1\u0161a\u0165 spr\u00e1vy medzi viacer\u00fdmi uzlami. Podporuje viacer\u00e9 sp\u00f4soby prenosu - v r\u00e1mci procesu, medzi procesmi, TCP a multicast. ZeroMQ \u010falej implementuje mechanizmus High Water Mark , ktor\u00fd predstavuje pevn\u00fd limit maxim\u00e1lneho po\u010dtu spr\u00e1v v rade, po naplnen\u00ed ktor\u00e9ho d\u00f4jde k blokovaniu alebo zahadzovaniu \u010fal\u0161\u00edch prijat\u00fdch spr\u00e1v. V\u00fdhodou rie\u0161enia je kvalitn\u00e1 dokument\u00e1cia . K dispoz\u00edcii je ako verzia pre jazyk C# , tak aj pre jazyk Lua. Lua-zmq predstavuje binding nad ZeroMQ verzie 2. Kni\u017enica Lzmq je binding nad verziami 3 a 4. Obe kni\u017enice je mo\u017en\u00e9 in\u0161talova\u0165 prostredn\u00edctvom spr\u00e1vcu Luarocks . V spojen\u00ed s interpreterom LuaJIT by mal r\u00e1mec poskytova\u0165 dostato\u010dn\u00fa r\u00fdchlos\u0165 aj pri komunik\u00e1cii prostredn\u00edctvom TCP socketu. Pod\u013ea dostupn\u00fdch inform\u00e1cii je mo\u017en\u00e9 dosiahnu\u0165 r\u00fdchlos\u0165 a\u017e 1 478.619 Mb/s. V repozit\u00e1roch Lzmq-guide a Zguide je mo\u017en\u00e9 n\u00e1js\u0165 viacero uk\u00e1\u017ekov\u00fdch implement\u00e1ci\u00ed pre r\u00f4zne programovacie jazyky. Ni\u017e\u0161ie je mo\u017en\u00e9 vidie\u0165 uk\u00e1\u017ekov\u00e9 rie\u0161enie jednoduchej klient-server komunik\u00e1cie prostredn\u00edctvom Unix domain socketov. Server bol vytvoren\u00fd v jazyku C a klient v jazyku Lua. // C Hello World server #include <zmq.h> #include <stdio.h> #include <unistd.h> #include <string.h> #include <assert.h> int main ( void ) { // Socket to talk to clients void * context = zmq_ctx_new (); void * responder = zmq_socket ( context , ZMQ_REP ); int rc = zmq_bind ( responder , \"ipc:///src/test\" ); assert ( rc == 0 ); while ( 1 ) { char buffer [ 10 ]; zmq_recv ( responder , buffer , 10 , 0 ); printf ( \"Received Hello \\n \" ); sleep ( 1 ); // Do some 'work' zmq_send ( responder , \"World\" , 5 , 0 ); } return 0 ; } -- -- Lua Hello World client -- Sends \"Hello\" to server, expects \"World\" back -- -- Author: Robert G. Jakabosky <bobby@sharedrealm.com> -- local zmq = require \"lzmq\" local context = zmq . init ( 1 ) -- Socket to talk to server print ( \"Connecting to hello world server\u2026\" ) local socket = context : socket ( zmq . REQ ) socket : connect ( \"ipc:///src/test\" ) for n = 1 , 10 do print ( \"Sending Hello \" .. n .. \" \u2026\" ) socket : send ( \"Hello\" ) local reply = socket : recv () print ( \"Received World \" .. n .. \" [\" .. reply .. \"]\" ) end socket : close () context : term () ZeroMQ poskytuje tie\u017e viacero vzorov komunik\u00e1cie :","title":"ZeroMQ"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#request-reply","text":"Prepojenie mno\u017einy klientov s mno\u017einou slu\u017eieb. V tomto pr\u00edpade sa jedn\u00e1 o RPC a model distrib\u00facie \u00faloh.","title":"Request-reply"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#publish-subscribe","text":"Vzor prep\u00e1ja mno\u017einu producentov s mno\u017einou konzumentov. Ide o model distrib\u00facie \u00fadajov.","title":"Publish-subscribe"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#pipeline","text":"Potrubie, ktor\u00e9 sp\u00e1ja viacero uzlov. M\u00f4\u017ee ma\u0165 viacero krokov a slu\u010diek. Jedn\u00e1 sa o model paralelnej distrib\u00facie a zberu.","title":"Pipeline"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#exclusive-pair","text":"Vzor prep\u00e1ja pr\u00e1ve 2 sockety. Ide o model prepojenia dvoch vl\u00e1ken v procese.","title":"Exclusive pair"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#serializ\u00e1cia","text":"Pred samotn\u00fdm odoslan\u00edm je potrebn\u00e1 serializ\u00e1cia \u00fadajov. \u010c\u00edm efekt\u00edvnej\u0161ia bude serializ\u00e1cia, t\u00fdm efekt\u00edvnej\u0161ie m\u00f4\u017ee prebieha\u0165 cel\u00e1 komunik\u00e1cia, obzvl\u00e1\u0161\u0165 pokia\u013e by v\u00fdsledn\u00e9 rie\u0161enie komunikovalo so vzdialen\u00fdm serverom. Medzi najbe\u017enej\u0161ie form\u00e1ty \u00fadajov patr\u00ed JSON a XML. Existuje viacero kni\u017en\u00edc pre jazyky C# aj Lua.","title":"Serializ\u00e1cia"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#json","text":"JSON predstavuje jednoduch\u00fd form\u00e1t na v\u00fdmenu \u00fadajov. Patr\u00ed medzi pomerne \u013eahko \u010ditate\u013en\u00e9 a zapisovate\u013en\u00e9 not\u00e1cie. M\u00e1 taktie\u017e \u0161irok\u00fa podporu. Je zalo\u017een\u00fd na 2 z\u00e1kladn\u00fdch \u0161trukt\u00farach, a to kolekcia p\u00e1rov k\u013e\u00fa\u010d-hodnota (objekt, z\u00e1znam, \u0161trukt\u00fara, slovn\u00edk a pod.) a usporiadan\u00fd zoznam hodn\u00f4t (pole, vektor, zoznam a pod.). Pre programovac\u00ed jazyk Lua je mo\u017en\u00e9 pou\u017ei\u0165 kni\u017enicu priamo z distrib\u00facie Luapower, konkr\u00e9tne CJSON .","title":"JSON"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#messagepack","text":"MessagePack je r\u00e1mec na serializ\u00e1ciu \u00fadajov. Podobne ako JSON, umo\u017e\u0148uje v\u00fdmenu \u00fadajov medzi viacer\u00fdmi uzlami a programovac\u00edmi jazykmi. Oproti form\u00e1tu JSON by mal by\u0165 MessagePack efekt\u00edvnej\u0161\u00ed a r\u00fdchlej\u0161\u00ed, nako\u013eko serializovan\u00e9 \u00fadaje maj\u00fa men\u0161iu ve\u013ekos\u0165. Men\u0161ia ve\u013ekos\u0165 so sebou prin\u00e1\u0161a aj nieko\u013eko obmedzen\u00ed, ktor\u00e9 sa t\u00fdkaj\u00fa mo\u017enej ve\u013ekosti \u00fadajov\u00fdch typov. Jednotliv\u00e9 obmedzenia, rovnako ako aj podporovan\u00e9 \u00fadajov\u00e9 typy je mo\u017en\u00e9 n\u00e1js\u0165 v \u0161pecifik\u00e1cii . Pre programovac\u00ed jazyk Lua je k dispoz\u00edcii kni\u017enica lua-MessagePack , ktor\u00e1 by mala by\u0165 pod\u013ea autora r\u00fdchla v kombin\u00e1cii s interpreterom LuaJIT . Rovnako aj t\u00fato kni\u017enicu je mo\u017en\u00e9 in\u0161talova\u0165 prostredn\u00edctvom Luarocks . Pre C# je potom k dispoz\u00edcii kni\u017enica msgpack-cli .","title":"MessagePack"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#uk\u00e1\u017eka-rpc","text":"Repozit\u00e1r 3DSoftviz obsahuje adres\u00e1r examples, v ktorom sa nach\u00e1dza uk\u00e1\u017eka mo\u017enost\u00ed implement\u00e1cie mechanizmov RPC s pou\u017eit\u00edm ZeroMQ a MessagePack. Za t\u00fdmto \u00fa\u010delom bol modifikovan\u00fd Lua CI Image , ktor\u00fd obsahuje v\u0161etky potrebn\u00e9 z\u00e1vislosti. Uk\u00e1\u017eka obsahuje jednoduch\u00fa implement\u00e1ciu serverovej \u010dasti v jazyku Lua a klientskej \u010dasti v jazyku C#. Serverov\u00e1 \u010das\u0165 po\u010d\u00fava na porte TCP/49155. Prijat\u00e1 spr\u00e1va je n\u00e1sledne rozbalen\u00e1 prostredn\u00edctvom kni\u017enice MessagePack. Rozbalen\u00e1 spr\u00e1va m\u00e1 potom formu tabu\u013eky, ku ktorej obsahu je mo\u017en\u00e9 pristupova\u0165 prostredn\u00edctvom \u010d\u00edseln\u00fdch indexov. V uk\u00e1\u017eke sa o\u010dak\u00e1va spr\u00e1va v nasleduj\u00facom tvare. local message = {} message [ 1 ] = \"command\" message [ 2 ] = \"params\" message [ 3 ] = \"result\" V\u0161etky atrib\u00faty tabu\u013eky s\u00fa reprezentovan\u00e9 vo forme re\u0165azcov. Jednotliv\u00e9 lok\u00e1lne funkcie s\u00fa ulo\u017een\u00e9 v tabu\u013eke s n\u00e1zvom _L , \u010d\u00edm je mo\u017en\u00e9 zabezpe\u010di\u0165 volanie funkcie na z\u00e1klade jej n\u00e1zvu vo forme re\u0165azca. Rovnak\u00fdm sp\u00f4sobom je mo\u017en\u00e9 uchov\u00e1va\u0165 tie\u017e lok\u00e1lne premenn\u00e9. local _L = {} _L [ \"extract\" ] = extract Pre \u00fa\u010dely uk\u00e1\u017eky bola vytvoren\u00e1 funkcia s n\u00e1zvom extract , ktor\u00e1 spracov\u00e1va parametre a n\u00e1sledne vol\u00e1 funkciu extractor.extract, ktorej v\u00fdstup je odovzdan\u00fd vo forme n\u00e1vratovej hodnoty. local function extract ( params ) local path = params [ 1 ] return extractor . extract ( path , astMan ) end Funkcia je potom volan\u00e1 bezpe\u010dn\u00fdm sp\u00f4sobom prostredn\u00edctvom funkcie pcall . Funkci\u00ed s\u00fa tie\u017e odovzdan\u00e9 po\u017eadovan\u00e9 parametre. local command = message [ 1 ] local params = message [ 2 ] local status , result = pcall ( _L [ command ], params ) Pokia\u013e atrib\u00fat command obsahuje re\u0165azec \"end\", d\u00f4jde k nastaveniu premennej cyklu na hodnotu false, server upovedom\u00ed klienta a program skon\u010d\u00ed. if command == \"end\" then loop = false request [ 3 ] = \"Server stopping\" socket : send ( mp . pack ( request )) break end Do atrib\u00fatu result m\u00f4\u017ee by\u0165 vlo\u017een\u00fd v\u00fdsledok. Pre \u00fa\u010dely uk\u00e1\u017eky je atrib\u00fat reprezentovan\u00fd vo forme re\u0165azca. Do bud\u00facna by v\u0161ak bolo vhodnej\u0161ie tento atrib\u00fat reprezentova\u0165 na klientskej strane vnoren\u00fdm objektom, tak\u017ee na strane servera by mal atrib\u00fat formu vnorenej tabu\u013eky. Odpove\u010f je n\u00e1sledne odoslan\u00e1 klientovi. message [ 3 ] = json . encode ( result ) socket : send ( mp . pack ( message )) Klientska \u010das\u0165 je implementovan\u00e1 v programovacom jazyku C#. Na \u00faspe\u0161n\u00fa komunik\u00e1ciu medzi klientskou a serverovou \u010das\u0165ou s vyu\u017eit\u00edm serializ\u00e1cie prostredn\u00edctvom kni\u017enice MessagePack, je potrebn\u00e9 vytvori\u0165 objektov\u00e9 \u0161trukt\u00fary, ktor\u00e9 bud\u00fa dodr\u017ean\u00e9 ako na klientskej, tak aj serverovej strane. Dodr\u017eanie \u0161trukt\u00fary sa t\u00fdka hlavne pou\u017eit\u00fdch \u00fadajov\u00fdch typov. \u0160trukt\u00fara objektu, ktor\u00fd je mapovan\u00fd na tabu\u013eku uveden\u00fa vy\u0161\u0161ie je mo\u017en\u00e9 vidie\u0165 na nasleduj\u00facej uk\u00e1\u017eke. public class RemoteCall { public string functionName { get ; set ; } public string [] functionParams { get ; set ; } public string result { get ; set ; } } Atrib\u00fat functionName zodpoved\u00e1 atrib\u00fatu ozna\u010den\u00e9mu ako command , functionParams zodpoved\u00e1 params a result je mapovan\u00fd na result . Tak\u00fdmto sp\u00f4sobom je mo\u017en\u00e9 zabezpe\u010di\u0165 bezprobl\u00e9mov\u00e9 mapovanie C# objektov na tabu\u013eku v jazyku Lua. Rovnako je bezprobl\u00e9mov\u00e9 sp\u00e4tn\u00e9 mapovanie tabu\u013eky na C# objekt, ku ktor\u00e9ho atrib\u00fatom je mo\u017en\u00e9 pristupova\u0165 \u0161tandardnou bodkovou not\u00e1ciou. MessagePackSerializer serializer = MessagePackSerializer . Get ( rpc . GetType ()); MemoryStream toUnpack = null ; byte [] responseFromServer = client . ReceiveFrameBytes (); toUnpack = new MemoryStream ( responseFromServer ); RemoteCall unpacked = ( RemoteCall ) serializer . Unpack ( toUnpack ); Console . WriteLine ( unpacked . result );","title":"Uk\u00e1\u017eka RPC"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#spustenie","text":"Na spustenie uk\u00e1\u017eky je potrebn\u00e9 prostredie Docker a IDE Visual Studio. Pre spustenie serverovej \u010dasti uk\u00e1\u017eky je potrebn\u00e1 in\u0161tal\u00e1cia v\u00fdvojov\u00e9ho prostredia Devenv . Je teda potrebn\u00e9 postupova\u0165 pod\u013ea krokov uveden\u00fdch v dokument\u00e1cii. Repozit\u00e1r obsahuj\u00faci s\u00fabory potrebn\u00e9 pre v\u00fdvojov\u00e9 prostredie devenv by mali by\u0165 naklonovan\u00e9 do rovnomenn\u00e9ho adres\u00e1ra, t.j. devenv. Tento adres\u00e1r po \u00faspe\u0161nej in\u0161tal\u00e1cii obsahuje \u010falej adres\u00e1r luadev. Do tohto adres\u00e1ra je potrebn\u00e9 naklonova\u0165 repozit\u00e1r 3DSoftVis_Remake . Pre spustenie serverovej \u010dasti je potrebn\u00e9 prejs\u0165 do adres\u00e1ra examples/rpc a n\u00e1sledne pr\u00edkazom lua server.lua program spusti\u0165. Tip Na spustenie nie je potrebn\u00e9 klonovanie cel\u00e9ho repozit\u00e1ra. Pokia\u013e u\u017e repozit\u00e1r bol naklonovan\u00fd, sta\u010d\u00ed nakop\u00edrova\u0165 adres\u00e1r examples do adres\u00e1ra luadev . Na spustenie klientskej \u010dasti je potrebn\u00e9 otvori\u0165 s\u00fabor examples/rpc/Lua_rpc/Lua_rpc.sln . Solution je potrebn\u00e9 n\u00e1sledne v IDE Visual Studio zostavi\u0165 a spusti\u0165.","title":"Spustenie"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#pozn\u00e1mka","text":"Ako testovac\u00ed vstup je v s\u00fa\u010dasnosti pre \u00fa\u010dely uk\u00e1\u017eky pou\u017eit\u00fd Moonscript projekt. Pou\u017eitie Lua projektu moment\u00e1lne nie je mo\u017en\u00e9, pravdepodobne kv\u00f4li vzniku cyklov vo v\u00fdslednom grafe, v d\u00f4sledku \u010doho nie je mo\u017en\u00e9 nad t\u00fdmito \u00fadajmi vykona\u0165 serializ\u00e1ciu ani prostredn\u00edctvom kni\u017enice ZeroMQ, ani CJSON. Po odstr\u00e1nen\u00ed cyklov by so serializ\u00e1ciou nemal by\u0165 probl\u00e9m. Tento probl\u00e9m sa vyskytuje pri priamom volan\u00ed funkcie extractor.extract , ktor\u00e1 je s\u00fa\u010das\u0165ou submodulu luadb.extraction.extractor .","title":"Pozn\u00e1mka"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#pozn\u00e1mky","text":"K dipoz\u00edcii je viacero v\u00fdvojov\u00fdch r\u00e1mcov umo\u017e\u0148uj\u00facich komunik\u00e1ciu medzi viacer\u00fdmi uzlami. Jedn\u00fdm z rie\u0161en\u00ed m\u00f4\u017ee by\u0165 gRPC , ktor\u00e9 v\u0161ak nem\u00e1 k dispoz\u00edcii ofici\u00e1lnu kni\u017enicu pre jazyk Lua. \u010eal\u0161ou alternat\u00edvou m\u00f4\u017ee by\u0165 komunik\u00e1cia prostredn\u00edctvom JSON-RPC . \u00dadaje by sa pren\u00e1\u0161ali vo form\u00e1te JSON. Ni\u017e\u0161ie je mo\u017en\u00e9 vidie\u0165 uk\u00e1\u017ekov\u00e9 volania. { \"method\" : \"doString\" , \"params\" :[ \"asd = {ma=12,mk=45}\" ], \"id\" : 12 } { \"method\" : \"doString\" , \"params\" :[ \"asd = \\\"asd\\\\nxncbv\\\"\" ], \"id\" : 13 } { \"method\" : \"getObject\" , \"params\" :[ \"asd\" ], \"id\" : 14 } { \"method\" : \"doString\" , \"params\" :[ \"aasd()\" ]} { \"method\" : \"doString\" , \"params\" :[ \"gr = getGraph(0)\" ]} { \"method\" : \"getObject\" , \"params\" :[ \"gr\" ]} { \"method\" : \"doString\" , \"params\" :[ \"aasd()\" ]} { \"method\" : \"doString\" , \"params\" :[ \"UMLVALUE = getSequenceDiagram(0, 68)\" ]} { \"method\" : \"getString\" , \"params\" :[ \"UMLVALUE\" ]} { \"method\" : \"doString\" , \"params\" :[ \"print(\\\"asd\\\\nxncbv\\\")\" ], \"id\" : 13 } Viacero u\u017eito\u010dn\u00fdch inform\u00e1ci\u00ed, vr\u00e1tane implement\u00e1cie funkci\u00ed doString , getString a getObject , rovnako aj pou\u017eitie exportovan\u00fdch funkci\u00ed, je mo\u017en\u00e9 n\u00e1js\u0165 v pozn\u00e1mkach v OneNote .","title":"Pozn\u00e1mky"},{"location":"dokumentacia_k_produktu/architektura_systemu/komunikacia/#u\u017eito\u010dn\u00e9-linky","text":"https://github.com/luapower https://luarocks.org/modules/neopallium/lua-zmq https://luarocks.org/modules/moteus/lzmq http://zguide.zeromq.org/lua:all https://github.com/zeromq/libzmq https://github.com/goldsborough/ipc-bench https://github.com/grpc https://docs.docker.com/engine/reference/run/#ipc-settings---ipc https://github.com/msgpack https://luarocks.org/modules/fperrad/lua-messagepack","title":"U\u017eito\u010dn\u00e9 linky"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/cplusplus/","text":"C++ Core \u00b6 LuaInterface \u00b6 Tento modul zabezpe\u010duje komunik\u00e1ciu C# \u010dasti s Lua \u010das\u0165ou vyu\u017eit\u00edm Sol2 kni\u017enice. Je naprogramovan\u00fd v jazyku C++. Poskytuje z\u00e1kladn\u00e9 funkcie pre vykon\u00e1vanie Lua k\u00f3du, volanie Lua funkcii, a z\u00edskavanie inform\u00e1ci\u00ed z modulov v jazyku Lua. Ka\u017ed\u00e1 funkcia, ktor\u00e1 m\u00e1 by\u0165 pr\u00edstupn\u00e1 v Lua.Common module by mala ma\u0165 svoj ekvivalent v pr\u00edslu\u0161nom ExportC s\u00fabore. Napr\u00edklad pre LuaInterface.cpp je to LuaInterfaceExportC.cpp . Tieto funkcie sa musia nach\u00e1dza\u0165 v extern \u201cc\u201d bloku a musia ma\u0165 defin\u00edciu kompatibiln\u00fa s jazykom C. LuaGraph \u00b6 \u00dalohou tohto modulu je s vyu\u017eit\u00edm modulu LuaInterface na\u010d\u00edta\u0165 LuaDB graf z jazyka Lua do jazyka C++. Jeho hlavn\u00e1 logika sa nach\u00e1dza vo funkcii LuaGraph::loadGraph(int id) . Podobne ako LuaInterface , ka\u017ed\u00e1 pridan\u00e1 funkcia, ktor\u00e1 m\u00e1 by\u0165 pr\u00edstupn\u00e1 v Lua.Common by mala by\u0165 definovan\u00e1 aj v pr\u00edslu\u0161nom ExportC s\u00fabore.","title":"C++ Core"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/cplusplus/#c-core","text":"","title":"C++ Core"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/cplusplus/#luainterface","text":"Tento modul zabezpe\u010duje komunik\u00e1ciu C# \u010dasti s Lua \u010das\u0165ou vyu\u017eit\u00edm Sol2 kni\u017enice. Je naprogramovan\u00fd v jazyku C++. Poskytuje z\u00e1kladn\u00e9 funkcie pre vykon\u00e1vanie Lua k\u00f3du, volanie Lua funkcii, a z\u00edskavanie inform\u00e1ci\u00ed z modulov v jazyku Lua. Ka\u017ed\u00e1 funkcia, ktor\u00e1 m\u00e1 by\u0165 pr\u00edstupn\u00e1 v Lua.Common module by mala ma\u0165 svoj ekvivalent v pr\u00edslu\u0161nom ExportC s\u00fabore. Napr\u00edklad pre LuaInterface.cpp je to LuaInterfaceExportC.cpp . Tieto funkcie sa musia nach\u00e1dza\u0165 v extern \u201cc\u201d bloku a musia ma\u0165 defin\u00edciu kompatibiln\u00fa s jazykom C.","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/cplusplus/#luagraph","text":"\u00dalohou tohto modulu je s vyu\u017eit\u00edm modulu LuaInterface na\u010d\u00edta\u0165 LuaDB graf z jazyka Lua do jazyka C++. Jeho hlavn\u00e1 logika sa nach\u00e1dza vo funkcii LuaGraph::loadGraph(int id) . Podobne ako LuaInterface , ka\u017ed\u00e1 pridan\u00e1 funkcia, ktor\u00e1 m\u00e1 by\u0165 pr\u00edstupn\u00e1 v Lua.Common by mala by\u0165 definovan\u00e1 aj v pr\u00edslu\u0161nom ExportC s\u00fabore.","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/csharp/","text":"C# Core \u00b6 Lua.Common \u00b6 Tento modul vyu\u017e\u00edva PInvoke pre pr\u00edstup k funkci\u00e1m exportovan\u00fdm v C++ DLL LuaGraph a LuaInterface . Jeho jedinou \u00falohou je zjednodu\u0161i\u0165 pr\u00edstup k t\u00fdmto funkci\u00e1m. Hlavn\u00fdmi triedami s\u00fa LuaInterface a LuaGraph , ktor\u00e9 volaj\u00fa pr\u00edslu\u0161n\u00e9 C++ funkcie a v pr\u00edpade potreby vykon\u00e1vaj\u00fa konverziu d\u00e1t na pr\u00edslu\u0161n\u00e9 d\u00e1tov\u00e9 typy v jazyku C#. Pre zjednodu\u0161enie na\u010d\u00edtania po\u013ea, \u0161trukt\u00far a stringov bola vytvoren\u00e1 trieda MarshallingUtils , ktor\u00e1 obsahuje pomocn\u00e9 met\u00f3dy na prevod t\u00fdchto d\u00e1tov\u00fdch typov z jazyka C do C#. Pre reprezent\u00e1ciu ak\u00e9hoko\u013evek objektu v jazyku Lua sl\u00fa\u017ei trieda LuaObject , ktor\u00e1 implementuje aj konverziu lua typu na C# typ. Ke\u010f\u017ee v\u00e4\u010d\u0161ina tried v tomto module pracuje priamo s pam\u00e4\u0165ou, je potrebn\u00e9 myslie\u0165 na to, \u017ee t\u00fato pam\u00e4\u0165 treba manu\u00e1lne dealokova\u0165 preto\u017ee nebude odstr\u00e1nen\u00e1 automaticky garbage collectorom. Pre zjednodu\u0161enie je ka\u017ed\u00e1 tak\u00e1to trieda implementovan\u00e1 n\u00e1vrhov\u00fdm vzorom Dispose . Je na to potrebn\u00e9 myslie\u0165 najm\u00e4 pri volan\u00ed met\u00f3d LuaObject.GetObject a LuaInterface.GetObject (a ka\u017edej inej, ktor\u00e1 priamo vracia LuaObject ), preto\u017ee dealok\u00e1cia pam\u00e4ti, ktor\u00fa si alokuje LuaObject , je na tom, kto t\u00fato funkciu zavolal. Pre zjednodu\u0161enie na\u010d\u00edtania d\u00e1t pre uzly a hrany z tabu\u013eky data v LuaDb grafe bol vytvoren\u00fd atrib\u00fat LuaParameterAttribute . Ka\u017ed\u00fd \u00fadaj v tabu\u013eke data , ktor\u00fd chceme na\u010d\u00edta\u0165 by mal ma\u0165 svoj ekvivalent v triede LuaNodeData/LuaNodeEdge alebo GraphObjectData , ak ide o spolo\u010dn\u00fa vlastnos\u0165 ako je napr\u00edklad farba. Ka\u017ed\u00e1 premenn\u00e1 tejto triedy by mala by\u0165 ozna\u010den\u00e1 atrib\u00fatom LuaParameter , kde v parametri LuaName by mal by\u0165 n\u00e1zov tejto premennej v data tabu\u013eke. V\u0161etky premenn\u00e9 ozna\u010den\u00e9 t\u00fdmto atrib\u00fatom s\u00fa automaticky pri vytvoren\u00ed objektu typu GraphObject na\u010d\u00edtan\u00e9 z LuaDB grafu vo funkcii GraphObject.LoadData . Pri odstr\u00e1nen\u00ed objektu typu GraphObject je automatick\u00fd dealokovan\u00e1 v\u0161etka pam\u00e4\u0165, ktor\u00fa tieto d\u00e1ta pou\u017e\u00edvaj\u00fa, tak\u017ee nie je potrebn\u00e9 vola\u0165 met\u00f3du Dispose na \u017eiadnej premennej ozna\u010denej t\u00fdmto atrib\u00fatom. GraphCore \u00b6 V tomto module je obsiahnut\u00e1 cel\u00e1 logika t\u00fdkaj\u00faca sa grafu. V met\u00f3de Graph.InitializeGraph doch\u00e1dza k vytvoreniu grafu z Lua.Common.Graph . K \u010fal\u0161iemu aktualizovaniu tohto grafu z LuaDb grafu doch\u00e1dza v met\u00f3de Graph.UpdateNodes , ktor\u00e1 sa prostredn\u00edctom GraphManager -a vol\u00e1 v pravideln\u00fdch intervaloch z unity hern\u00e9ho objektu GraphLoader . S\u00fa\u010das\u0165ou modulu je trieda LayoutManager , ktora je reprezent\u00e1ciou layout managera, ktor\u00fd sa nach\u00e1dza v module layouter . Vlastnosti objektov typu GraphCore.Node a GraphCore.Edge , ktor\u00e9 sa pravidelne menia, ako napr\u00edklad farba, poz\u00edcia, tvar a podobne, by mali obsahova\u0165 aj pr\u00edslu\u0161n\u00fa udalos\u0165, ktor\u00e1 signalizuje zmenu tohto atrib\u00fatu, aby bolo mo\u017en\u00e9 pod\u013ea neho n\u00e1sledne aktualizova\u0165 vizu\u00e1lnu reprezent\u00e1ciu grafu v Unity.","title":"C# Core"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/csharp/#c-core","text":"","title":"C# Core"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/csharp/#luacommon","text":"Tento modul vyu\u017e\u00edva PInvoke pre pr\u00edstup k funkci\u00e1m exportovan\u00fdm v C++ DLL LuaGraph a LuaInterface . Jeho jedinou \u00falohou je zjednodu\u0161i\u0165 pr\u00edstup k t\u00fdmto funkci\u00e1m. Hlavn\u00fdmi triedami s\u00fa LuaInterface a LuaGraph , ktor\u00e9 volaj\u00fa pr\u00edslu\u0161n\u00e9 C++ funkcie a v pr\u00edpade potreby vykon\u00e1vaj\u00fa konverziu d\u00e1t na pr\u00edslu\u0161n\u00e9 d\u00e1tov\u00e9 typy v jazyku C#. Pre zjednodu\u0161enie na\u010d\u00edtania po\u013ea, \u0161trukt\u00far a stringov bola vytvoren\u00e1 trieda MarshallingUtils , ktor\u00e1 obsahuje pomocn\u00e9 met\u00f3dy na prevod t\u00fdchto d\u00e1tov\u00fdch typov z jazyka C do C#. Pre reprezent\u00e1ciu ak\u00e9hoko\u013evek objektu v jazyku Lua sl\u00fa\u017ei trieda LuaObject , ktor\u00e1 implementuje aj konverziu lua typu na C# typ. Ke\u010f\u017ee v\u00e4\u010d\u0161ina tried v tomto module pracuje priamo s pam\u00e4\u0165ou, je potrebn\u00e9 myslie\u0165 na to, \u017ee t\u00fato pam\u00e4\u0165 treba manu\u00e1lne dealokova\u0165 preto\u017ee nebude odstr\u00e1nen\u00e1 automaticky garbage collectorom. Pre zjednodu\u0161enie je ka\u017ed\u00e1 tak\u00e1to trieda implementovan\u00e1 n\u00e1vrhov\u00fdm vzorom Dispose . Je na to potrebn\u00e9 myslie\u0165 najm\u00e4 pri volan\u00ed met\u00f3d LuaObject.GetObject a LuaInterface.GetObject (a ka\u017edej inej, ktor\u00e1 priamo vracia LuaObject ), preto\u017ee dealok\u00e1cia pam\u00e4ti, ktor\u00fa si alokuje LuaObject , je na tom, kto t\u00fato funkciu zavolal. Pre zjednodu\u0161enie na\u010d\u00edtania d\u00e1t pre uzly a hrany z tabu\u013eky data v LuaDb grafe bol vytvoren\u00fd atrib\u00fat LuaParameterAttribute . Ka\u017ed\u00fd \u00fadaj v tabu\u013eke data , ktor\u00fd chceme na\u010d\u00edta\u0165 by mal ma\u0165 svoj ekvivalent v triede LuaNodeData/LuaNodeEdge alebo GraphObjectData , ak ide o spolo\u010dn\u00fa vlastnos\u0165 ako je napr\u00edklad farba. Ka\u017ed\u00e1 premenn\u00e1 tejto triedy by mala by\u0165 ozna\u010den\u00e1 atrib\u00fatom LuaParameter , kde v parametri LuaName by mal by\u0165 n\u00e1zov tejto premennej v data tabu\u013eke. V\u0161etky premenn\u00e9 ozna\u010den\u00e9 t\u00fdmto atrib\u00fatom s\u00fa automaticky pri vytvoren\u00ed objektu typu GraphObject na\u010d\u00edtan\u00e9 z LuaDB grafu vo funkcii GraphObject.LoadData . Pri odstr\u00e1nen\u00ed objektu typu GraphObject je automatick\u00fd dealokovan\u00e1 v\u0161etka pam\u00e4\u0165, ktor\u00fa tieto d\u00e1ta pou\u017e\u00edvaj\u00fa, tak\u017ee nie je potrebn\u00e9 vola\u0165 met\u00f3du Dispose na \u017eiadnej premennej ozna\u010denej t\u00fdmto atrib\u00fatom.","title":"Lua.Common"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/csharp/#graphcore","text":"V tomto module je obsiahnut\u00e1 cel\u00e1 logika t\u00fdkaj\u00faca sa grafu. V met\u00f3de Graph.InitializeGraph doch\u00e1dza k vytvoreniu grafu z Lua.Common.Graph . K \u010fal\u0161iemu aktualizovaniu tohto grafu z LuaDb grafu doch\u00e1dza v met\u00f3de Graph.UpdateNodes , ktor\u00e1 sa prostredn\u00edctom GraphManager -a vol\u00e1 v pravideln\u00fdch intervaloch z unity hern\u00e9ho objektu GraphLoader . S\u00fa\u010das\u0165ou modulu je trieda LayoutManager , ktora je reprezent\u00e1ciou layout managera, ktor\u00fd sa nach\u00e1dza v module layouter . Vlastnosti objektov typu GraphCore.Node a GraphCore.Edge , ktor\u00e9 sa pravidelne menia, ako napr\u00edklad farba, poz\u00edcia, tvar a podobne, by mali obsahova\u0165 aj pr\u00edslu\u0161n\u00fa udalos\u0165, ktor\u00e1 signalizuje zmenu tohto atrib\u00fatu, aby bolo mo\u017en\u00e9 pod\u013ea neho n\u00e1sledne aktualizova\u0165 vizu\u00e1lnu reprezent\u00e1ciu grafu v Unity.","title":"GraphCore"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/","text":"Lua \u00b6 Layouter \u00b6 Tento modul zodpoved\u00e1 za v\u00fdpo\u010det rozlo\u017eenia grafu a spr\u00e1vu layoutov grafu. Layout Manager \u00b6 Zodpoved\u00e1 za spravovanie layoutov grafu. Ka\u017ed\u00fd graf m\u00e1 svoj vlastn\u00fd layout manager. Obsahuje z\u00e1kladne funkcie pre kontrolu layoutovania ako s\u00fa \u0161tart, stop, pauza. Zabezpe\u010duje to, ktor\u00fd algoritmus je v s\u00fa\u010dasnosti akt\u00edvny a zabezpe\u010duje prenos d\u00e1t z a do algoritmu. Vo funkcii updateNodes doch\u00e1dza k aktualizovaniu uzlov LuaDB grafu z pr\u00e1ve akt\u00edvneho algoritmu. Z algoritmu sa na\u010d\u00edta poz\u00edcia ka\u017ed\u00e9ho uzla, a pr\u00edpadne \u010fal\u0161ie atrib\u00faty uzla, ktor\u00e9 algoritmus m\u00f4\u017ee obsahova\u0165, ako napr\u00edklad ve\u013ekos\u0165 uzla, a t\u00e1to poz\u00edcia sa nastav\u00ed zodpovedaj\u00facemu uzlu v LuaDB grafe. Algoritmus Fruchterman-Reingold \u00b6 Jeho implement\u00e1cia je v jazyku terra, ktor\u00e9ho r\u00fdchlos\u0165 je porovnate\u013en\u00e1 s jazykom C. Algoritmus si na za\u010diatku vytvor\u00ed k\u00f3piu LuaDB grafov. Z lua tabuliek obsahuj\u00facich uzly a hrany si vytvor\u00ed pole terra \u0161trukt\u00far TNode a TEdge , ktor\u00e9 reprezentuj\u00fa graf a obsahuj\u00fa v\u0161etky atrib\u00faty, ktor\u00e9 s\u00fa potrebn\u00e9 pre v\u00fdpo\u010det rozlo\u017eenia grafu. Vo funkcii initialize , sa vypo\u010d\u00edta po\u010diato\u010dn\u00e9 rozlo\u017eenie grafu. Po zavolan\u00ed funkcie runLayouting sa vytvor\u00ed nov\u00e9 vl\u00e1kno, kde iterat\u00edvne prebieha v\u00fdpo\u010det nov\u00e9ho rozlo\u017eenia grafu. LuaDB \u00b6 Modul je nap\u00edsan\u00fd v programovacom jazyku Lua. Jeho hlavnou \u00falohou je anal\u00fdza zdrojov\u00e9ho k\u00f3du, ktor\u00fd je modulu poskytnut\u00fd zatia\u013e zadan\u00edm priamej cesty, analyzuje volania funkci\u00ed, komplexitu, a r\u00f4zne metriky, na z\u00e1klade ktor\u00fdch sa nesk\u00f4r ostatn\u00e9 moduly rozhoduj\u00fa o vlastnostiach vykreslenia uzlu, napr\u00edklad ve\u013ekos\u0165 uzlu.","title":"Lua"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/#lua","text":"","title":"Lua"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/#layouter","text":"Tento modul zodpoved\u00e1 za v\u00fdpo\u010det rozlo\u017eenia grafu a spr\u00e1vu layoutov grafu.","title":"Layouter"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/#layout-manager","text":"Zodpoved\u00e1 za spravovanie layoutov grafu. Ka\u017ed\u00fd graf m\u00e1 svoj vlastn\u00fd layout manager. Obsahuje z\u00e1kladne funkcie pre kontrolu layoutovania ako s\u00fa \u0161tart, stop, pauza. Zabezpe\u010duje to, ktor\u00fd algoritmus je v s\u00fa\u010dasnosti akt\u00edvny a zabezpe\u010duje prenos d\u00e1t z a do algoritmu. Vo funkcii updateNodes doch\u00e1dza k aktualizovaniu uzlov LuaDB grafu z pr\u00e1ve akt\u00edvneho algoritmu. Z algoritmu sa na\u010d\u00edta poz\u00edcia ka\u017ed\u00e9ho uzla, a pr\u00edpadne \u010fal\u0161ie atrib\u00faty uzla, ktor\u00e9 algoritmus m\u00f4\u017ee obsahova\u0165, ako napr\u00edklad ve\u013ekos\u0165 uzla, a t\u00e1to poz\u00edcia sa nastav\u00ed zodpovedaj\u00facemu uzlu v LuaDB grafe.","title":"Layout Manager"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/#algoritmus-fruchterman-reingold","text":"Jeho implement\u00e1cia je v jazyku terra, ktor\u00e9ho r\u00fdchlos\u0165 je porovnate\u013en\u00e1 s jazykom C. Algoritmus si na za\u010diatku vytvor\u00ed k\u00f3piu LuaDB grafov. Z lua tabuliek obsahuj\u00facich uzly a hrany si vytvor\u00ed pole terra \u0161trukt\u00far TNode a TEdge , ktor\u00e9 reprezentuj\u00fa graf a obsahuj\u00fa v\u0161etky atrib\u00faty, ktor\u00e9 s\u00fa potrebn\u00e9 pre v\u00fdpo\u010det rozlo\u017eenia grafu. Vo funkcii initialize , sa vypo\u010d\u00edta po\u010diato\u010dn\u00e9 rozlo\u017eenie grafu. Po zavolan\u00ed funkcie runLayouting sa vytvor\u00ed nov\u00e9 vl\u00e1kno, kde iterat\u00edvne prebieha v\u00fdpo\u010det nov\u00e9ho rozlo\u017eenia grafu.","title":"Algoritmus Fruchterman-Reingold"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/lua/#luadb","text":"Modul je nap\u00edsan\u00fd v programovacom jazyku Lua. Jeho hlavnou \u00falohou je anal\u00fdza zdrojov\u00e9ho k\u00f3du, ktor\u00fd je modulu poskytnut\u00fd zatia\u013e zadan\u00edm priamej cesty, analyzuje volania funkci\u00ed, komplexitu, a r\u00f4zne metriky, na z\u00e1klade ktor\u00fdch sa nesk\u00f4r ostatn\u00e9 moduly rozhoduj\u00fa o vlastnostiach vykreslenia uzlu, napr\u00edklad ve\u013ekos\u0165 uzlu.","title":"LuaDB"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/","text":"Unity \u00b6 Modul tvor\u00ed prezenta\u010dn\u00fa vrstvu cel\u00e9ho projektu. Vizualizuje graf analyzovan\u00e9ho zdrojov\u00e9ho k\u00f3du a umo\u017e\u0148uje manipul\u00e1ciu grafu ako celku aj s jeho jednotliv\u00fdmi vrcholmi a prepojeniami. Graf zobrazuje komplexitu analyzovan\u00e9ho zdrojov\u00e9ho k\u00f3du a prepojenia medzi modulmi. R\u00e1mec Unity si vy\u017eaduje implement\u00e1ciu skriptov v C#. S\u00fa\u010das\u0165ou tohto modulu s\u00fa dodato\u010dn\u00e9 moduly ako podpora vykres\u013eovania vo virtu\u00e1lnej realite na Oculus Rift alebo HTC Vive a interakciu s grafom pomocou senzoru r\u00fak Leap Motion, vykres\u013eovanie v roz\u0161\u00edrenej realite a manipul\u00e1ciu s grafom sledovan\u00edm \u0161peci\u00e1lnych symbolov pomocou be\u017enej kamery. Actions \u00b6 Tento modul vytv\u00e1ra jednotn\u00fd syst\u00e9m pre sp\u00fa\u0161\u0165anie znovupou\u017eite\u013en\u00fdch kusov k\u00f3du sp\u00fa\u0161\u0165an\u00e9 z grafick\u00e9ho rozhrania. Je to implement\u00e1cia Command patternu. Diagram Command patternu je mo\u017en\u00e9 vidie\u0165 na obr\u00e1zku ni\u017e\u0161ie. Akcie sa sp\u00fa\u0161\u0165aj\u00fa pomocou met\u00f3dy ActionManager.Start . IAction m\u00e1 svoj \u017eivotn\u00fd cyklus OnStart , OnUpdate , OnEnd , OnCancel . Taktie\u017e ur\u010duje svoju IActionGroup . V jeden moment nem\u00f4\u017eu prebieha\u0165 viacer\u00e9 akcie z rovnakej IActionGroup . Ak sa za\u010dne in\u00e1 akcia, tak sa predo\u0161l\u00e1 zru\u0161\u00ed a zavol\u00e1 sa jej OnCancel . Akcie maj\u00fa predvolen\u00fa skupinu ActionGroup.None , pre ktor\u00fa tieto vz\u00e1jomn\u00e9 vylu\u010dovanie neplat\u00ed. Taktie\u017e je zadefinovan\u00e1 OneTimeAction , ktor\u00e1 je \u0161peci\u00e1lny pr\u00edpad IAction , ktor\u00e1 nem\u00e1 svoj \u017eivotn\u00fd cyklus a vykon\u00e1 sa iba jedenkr\u00e1t. AR Technol\u00f3gie \u00b6 Na spustenie AR sc\u00e9ny s\u00fa nutn\u00e9 okrem VR/AR okuliarov 3 technol\u00f3gie. Tie s\u00fa: LEAP Motion Senzor ZED Kamera HoverUI Kit ZED Kamera poskytuje zobrazenie priestoru okolo pou\u017e\u00edvate\u013ea. V projekte je pou\u017eit\u00e9 SDK v2.8. Pred pou\u017e\u00edvan\u00edm je nutn\u00e9 SDK najprv nain\u0161talova\u0165. To je dostupn\u00e9 na str\u00e1nke: https://www.stereolabs.com/developers/ . Kamera dok\u00e1\u017ee okrem sn\u00edmania aj vn\u00edma\u0165 okolie ako 3D priestor v\u010faka h\u013abkov\u00e9mu sn\u00edmaniu. V projekte sa preto pou\u017e\u00edva prim\u00e1rne na dve veci. Prvou je \u017ee dok\u00e1\u017ee vykon\u00e1va\u0165 \u201cspatial mapping\u201d, \u010do je vytvorenie digit\u00e1lneho meshu z prostredia a n\u00e1sledne ho aj uklada\u0165. Druhou vlastnos\u0165ou je \u201cdepth perception\u201d, pri ktorej ZED kamere zad\u00e1me dvojrozmern\u00e9 s\u00faradnice a ona n\u00e1m dok\u00e1\u017ee vr\u00e1ti\u0165 vzdialenos\u0165 kamery od body, na ktor\u00fd sa pozer\u00e1me. T\u00e1to funkcia sa pou\u017e\u00edva na umiest\u0148ovanie grafu na vybran\u00fd bod. Do sc\u00e9ny sa po nain\u0161talovan\u00ed prid\u00e1 modul, ktor\u00fd sa naz\u00fdva Zed_Rig_Stereo. Ten sl\u00fa\u017ei namiesto kamery v sc\u00e9ne a taktie\u017e obsahuje komponent ZED Manager, \u010do je kni\u017enica funkci\u00ed ZED kamery. Pokia\u013e potrebujeme vyu\u017ei\u0165 funkciu tejto kni\u017enice, v skripte si vytiahneme pr\u00e1ve tento komponent. LEAP Motion zabezpe\u010duje sledovanie pohybu r\u00fak. Pou\u017eite je SDK v2.3.1. Pre in\u0161tal\u00e1ciu je nutn\u00e9 stiahnu\u0165 vy\u0161\u0161ie spom\u00ednan\u00fd SDK zo str\u00e1nky: https://developer.leapmotion.com/get-started/ a nain\u0161talova\u0165. Parametre s\u00fa v Unity u\u017e prednastaven\u00e9. LEAP je v tejto sc\u00e9ne prim\u00e1rne kv\u00f4li interakt\u00edvnemu menu HoverUI. Na spr\u00edstupnenie LEAP senzoru v AR sc\u00e9ne je potrebn\u00e9 na kameru pripn\u00fa\u0165 LEAP XR Service Priovider a na spr\u00edstupnenie r\u00fak treba prida\u0165 objekt LEAP Rig do sc\u00e9ny. HoverUI Kit sl\u00fa\u017ei ako interakt\u00edvne menu, ktor\u00e9 je pripnut\u00e9 na ruk\u00e1ch pomocou LEAP senzoru. In\u0161tal\u00e1cia nie je potrebn\u00e1, v\u0161etky potrebn\u00e9 prostriedky s\u00fa u\u017e v projekte. Aktivuje sa obr\u00e1ten\u00edm \u013eavej ruky smerom nahor a naviguje sa n\u00edm pomocou ukazov\u00e1ka pravej ruky. Pomocou tohto menu sa interaguje so samotn\u00fdm grafom, teda funkcie ako zapn\u00fa\u0165 layoutova\u010d, zmeni\u0165 typy uzlov/hr\u00e1n alebo sa pomocou neho umiestni graf na miesto, na ktor\u00e9 sa moment\u00e1lne pou\u017e\u00edvate\u013e pozer\u00e1. Na pripnutie Hover UI menu na LEAP ruky je potrebn\u00e9 na Leap Rig pripn\u00fa\u0165 Hover Input Leap Motion. Camera Manager \u00b6 Skript zah\u0155\u0148a funkcionalitu pou\u017e\u00edvan\u00fa pri interakcii s kamerou. Zabezpe\u010duje efekt\u00edvne manipulovanie a pohyb vo vizualizovanom grafe. Medzi hlavn\u00fa funkcionalu tejto \u010dasti syst\u00e9mu patr\u00ed pribli\u017eovanie sa ku konkr\u00e9tnym uzlom (FocusObject), orbitovanie okolo jedn\u00e9ho alebo skupiny uzlov (OrbitalMode) a automatick\u00e9 oddialenie kamery do vzdialenosti potrebnej na zobrazenie kompletn\u00e9ho grafu (ZoomToFit). FocusObject - funkcionalita zabezpe\u010duj\u00faca pribl\u00ed\u017eenie kamery ku konkr\u00e9tnemu uzlu po vykonan\u00ed akcie pou\u017e\u00edvate\u013ea. Vyvolanie samotnej akcie zabezpe\u010duje met\u00f3da ZoomInTo(clickedObjectTransform), ktorej parameter clickedObjectTransform nesie pou\u017e\u00edvate\u013eov zvolen\u00fd objekt. V procese pribli\u017eovania m\u00e1 kamera prednastaven\u00e9 dva stavy - isZoomed a isZooming v z\u00e1vislosti od toho, \u010di je kamera k uzlu pribl\u00ed\u017een\u00e1, alebo je v re\u017eime pribli\u017eovania (UpdateZoomInTo). Pri tomto re\u017eime s\u00fa pou\u017e\u00edt\u00e9 \u0161tandardn\u00e9 oper\u00e1cie pre interpol\u00e1ciu a rot\u00e1ciu, ktor\u00fdmi Unity disponuje. OrbitalMode - orbit\u00e1lny m\u00f3d, ktor\u00e9ho \u00falohou je centrovanie kamery na \u017eiadan\u00fd bod a n\u00e1sledn\u00e9 orbitovanie. Nemus\u00ed \u00eds\u0165 nutne o uzol v grafe, funkcionalita pon\u00faka aj orbitovanie okolo \u0165a\u017eiska viacer\u00fdch vybran\u00fdch uzlov pou\u017e\u00edvate\u013eom. Selekcia uzla/uzlov: Poskytuje SelectionManager, ktor\u00e9ho met\u00f3da GetSelectedObjects() vracia zoznam ozna\u010den\u00fdch uzlov. V\u00fdpo\u010det \u0165a\u017eiska: Zo zoznamu ozna\u010den\u00fdch uzlov vykon\u00e1va v\u00fdpo\u010det poz\u00edcie \u0165a\u017eiska. Interakcia: Prv\u00fdm krokom je vycentrovanie kamery na \u017eiadan\u00fd bod. Dr\u017ean\u00edm zvolen\u00e9ho tla\u010didla je mo\u017en\u00e9 my\u0161ou orbitova\u0165 po X-ovej alebo Y-ovej osi. ZoomToFit - funkcionalita, ktor\u00e1 po jej zavolan\u00ed oddiali, alebo pribl\u00ed\u017ei kameru od grafu tak, aby sa zmestil na obrazovku. Vyvolanie samotnej akcie zabezpe\u010duje met\u00f3da ZoomToFit(). T\u00e1to met\u00f3da r\u00e1ta cie\u013eov\u00fa poz\u00edciu a nato\u010denie kamery, ktor\u00e9 mus\u00ed kamera dosiahnu\u0165, aby sa dosiahol v\u00fdsledn\u00fd efekt. V procese pribli\u017eovania / oddia\u013eovania m\u00e1 kamera prednastaven\u00e9 dva stavy - isZoomed a isZooming v z\u00e1vislosti od toho, \u010di je dosiahnut\u00fd cie\u013eov\u00fd stav kamery, alebo je v re\u017eime pohybu k tomuto stavu (UpdateZoomToFit). V\u0161etky akcie s\u00fa aplikovan\u00e9 za pomoci Action Patternu a ich vstupy s\u00fa spracov\u00e1van\u00e9 Input Handlerom. HoverUI Kit \u00b6 K modulu HoverUI Kit patria, v r\u00e1mci AR sc\u00e9ny, hern\u00e9 objekty: HoverCast \u00b6 Hern\u00fd objekt obsahuje v\u0161etky vizu\u00e1lne vlastnosti, komponenty a defin\u00edcie anim\u00e1ci\u00ed, ktor\u00e9 sa dej\u00fa pri pou\u017e\u00edvan\u00ed menu. Vyskytuj\u00fa sa v \u0148om 4 objekty: * OpenItem - defin\u00edcia tla\u010didla na otv\u00e1ranie/zatv\u00e1ranie menu. * TitleItem - obsahuje nastavenie textu pre n\u00e1zov menu. * BackItem - defin\u00edcia tla\u010didla pre krok sp\u00e4\u0165, ktor\u00e9 sa nach\u00e1dza sa v strede dlane. * Rows - aktu\u00e1lne rozlo\u017eenie hlavn\u00e9ho menu, ktor\u00e9 m\u00f4\u017eeme upravova\u0165 (pr\u00edpadne prid\u00e1va\u0165 nov\u00e9 polo\u017eky). HoverMock \u00b6 Dc\u00e9rsky hern\u00fd objekt Mock obsahuje makety v\u0161etk\u00fdch nami pou\u017e\u00edvan\u00fdch typov komponentov v hlavnom menu. Pri vytv\u00e1ran\u00ed nov\u00fdch komponentov je mo\u017en\u00e9 tieto hern\u00e9 objekty kop\u00edrova\u0165, \u010d\u00edm sa m\u00f4\u017eeme vyhn\u00fa\u0165 zd\u013ahav\u00e9mu a komplikovan\u00e9mu manu\u00e1lnemu vytv\u00e1raniu komponentov prostredn\u00edctvom extern\u00fdch HoverBuilderov. Pri nakop\u00edrovan\u00ed netreba zabudn\u00fa\u0165 na zmenu n\u00e1zvu hern\u00e9ho objektu a jeho vlastnost\u00ed ID a Label (pr\u00edpadne Navigate To Row pre typ RowSelector, Radio Group ID pre typ Radio, Range Min a Range Max pre Slider). Tento objekt obsahuje makety komponentov: Row - riadok vnoren\u00e9ho menu po kliknut\u00ed na RowSelector, ktor\u00fd obsahuje konkr\u00e9tne komponenty. RowSelector - komponent typu Selector, ktor\u00fd sa star\u00e1 o navig\u00e1ciu do vnoren\u00e9ho menu (Row). Back - komponent typu Selector, ktor\u00fd m\u00e1 za \u00falohu o navig\u00e1ciu do rodi\u010dovsk\u00e9ho menu (krok sp\u00e4\u0165). Selector - komponent, ktor\u00fd sa spr\u00e1va ako klasick\u00e9 tla\u010didlo - neuchov\u00e1va si stav. Radio - komponent, ktor\u00fd sa spoj\u00ed s ostatn\u00fdmi komponentami tohto typu prostredn\u00edctvom Group ID - v jednej skupine m\u00f4\u017ee by\u0165 ozna\u010den\u00e9 maxim\u00e1lne jedno Radio tla\u010didlo. CheckBox - tla\u010didlo, ktor\u00e9 si uchov\u00e1va stav (vieme ur\u010di\u0165, \u010di bol stla\u010den\u00fd alebo nie). Slider - posuvn\u00edk, ktor\u00fd sa je mo\u017en\u00e9 nastavi\u0165 na jednu z hodn\u00f4t z intervalu . TextItem - komponent, ktor\u00fd zobrazuje text. HoverUIManager \u00b6 Tento hern\u00fd objekt je jedn\u00fdm z mana\u017e\u00e9rov v AR sc\u00e9ne, ktor\u00e9 s\u00fa ulo\u017een\u00e9 v objekte ManagersAR. Obsahuje referencie na v\u0161etky komponenty HoverUI menu a skript HoverUIManager, ktor\u00fd na za\u010diatku \u017eivotn\u00e9ho cyklu prirad\u00ed komponentom event handlery, ktor\u00e9 bud\u00fa pri interakcii sp\u00fa\u0161\u0165a\u0165 jednotliv\u00e9 akcie z Action Pattern-u. Uk\u00e1\u017eku priradenia eventu v k\u00f3de zobrazuje obr\u00e1zok vy\u0161\u0161ie a sum\u00e1r komponentov s ich udalos\u0165ami tabu\u013eka ni\u017e\u0161ie. Input Handler \u00b6 Tento modul vytv\u00e1ra jednotn\u00fd syst\u00e9m pre spracovanie vstupov. Desktopov\u00e1 \u010dast zaoba\u013euje Unity input syst\u00e9m a AR \u010dast zaoba\u013euje Leap input syst\u00e9m. Modul pracuje na z\u00e1klade Observer patternu, kde skript, ktor\u00fd chce pou\u017e\u00edva\u0165 Input sa prihl\u00e1si na vstup met\u00f3dou InputHandler.Subscribe . Akcie pre vstupy s\u00fa zadefinovan\u00e9 v IBaseInputAction . Konkr\u00e9tne defin\u00edcie vstupu si definuj\u00fa jednotliv\u00e9 sp\u00f4soby vstupov. (napr. DesktopInputAction , LeapInputAction ). InputHandler.Subscribe z\u00e1rove\u0148 vracia InputSubscribtion , s ktorou je mo\u017en\u00e9 input zru\u0161i\u0165 cez met\u00f3du InputHandler.Unsubscribe . Callbacky pre inputy zavol\u00e1 InputHandler , pri\u010dom dozer\u00e1 na to, aby z\u00e1rove\u0148 neboli zavolan\u00e9 callbacky pre rovnak\u00e9 vstupy (napr. Ctrl+Mouse0 a z\u00e1rove\u0148 Mouse0). Jedna vstupov\u00e1 akcia resp. vstupov\u00e1 udalos\u0165 je definovan\u00e1 ako InputEvent , pri\u010dom sa event sklad\u00e1 z jedn\u00e9ho alebo viacer\u00fdch InputElement . InputElement sa d\u00e1 predstavi\u0165 ako jedna kl\u00e1vesa alebo axis (napr. stla\u010denie Mouse0) a InputEvent ako kombin\u00e1cia t\u00fdchto elementov (napr. Ctrl+Mouse0). Desktopov\u00e1 \u010das\u0165 inputov zaoba\u013euje Unity kon\u0161tanty a met\u00f3dy: Input.Desktop.Key - zaoba\u013euje UnityEngine.KeyCode Input.Desktop.Axis - zaoba\u013euje UnityEngine.Axis , resp. string Label Manager \u00b6 Tento skript obsahuje kon\u0161tanty a funkcie, ktor\u00e9 s\u00fa potrebn\u00e9 pre zobrazovanie jednotliv\u00fdch popiskov pre uzly alebo hrany. Skript konkr\u00e9tne obsahuje: kon\u0161tanty: LabelCharSet - hodnota typu float, ktor\u00e1 ovplyv\u0148uje v\u0161eobecn\u00fa ve\u013ekos\u0165 popiskov. showAllLabels - indikuje, \u010di sa maj\u00fa popisky zobrazi\u0165 ihne\u010f po na\u010d\u00edtan\u00ed grafu. funkcie: ToggleAllLabels - prep\u00edna v\u0161etky popisky medzi stavmi vidite\u013en\u00e9 a nevidite\u013en\u00e9. ShowLabel - zobraz\u00ed popisok pre ur\u010dit\u00fd hern\u00fd objekt. HideLabel - skryje popisok pre ur\u010dit\u00fd hern\u00fd objekt. ShowLabels - zobraz\u00ed popisky pre poskytnut\u00e9 hern\u00e9 objekty. HideLabels - skryje popisky pre poskytnut\u00e9 hern\u00e9 objekty. Selection Manager \u00b6 Tento skript sl\u00fa\u017ei na ozna\u010dovanie uzlov a hr\u00e1n v grafe. Pon\u00faka tieto funkcie: Select - po kliknut\u00ed na uzol/hranu sa dan\u00fd objekt ozna\u010di, a prid\u00e1 sa do zoznamu ozna\u010den\u00fdch objektov MultiSelect - pri dr\u017ean\u00ed CTRL a ozna\u010dovan\u00ed uzlov/hr\u00e1n sa prid\u00e1vaj\u00fa ozna\u010den\u00e9 objekty do ISet Unselect - ak je uzol/hrana u\u017e ozna\u010den\u00fd a op\u00e4tovne na\u0148 klikneme, objekt sa odzna\u010d\u00ed UnselectAll - pokia\u013e klikneme mimo grafu alebo m\u00e1me ozna\u010dn\u00fd objekt/-y a klikneme na in\u00fd objekt bez dr\u017eania CTRL, ostatn\u00e9 ozna\u010den\u00e9 objekty sa odzna\u010dia V\u0161etky grafov\u00e9 objekty, ktor\u00e9 s\u00fa ozna\u010den\u00e9 sa udr\u017euj\u00fa v ISet selectedObjects, ktor\u00fd si dok\u00e1\u017eeme getn\u00fa\u0165 ak by sme k nim potrebovali prist\u00fapi\u0165 zvonku. Po vizu\u00e1lnej str\u00e1nke v projekte vid\u00edme ozna\u010den\u00e9 objekty pomocou oran\u017eov\u00e9ho obrysu.","title":"Unity"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#unity","text":"Modul tvor\u00ed prezenta\u010dn\u00fa vrstvu cel\u00e9ho projektu. Vizualizuje graf analyzovan\u00e9ho zdrojov\u00e9ho k\u00f3du a umo\u017e\u0148uje manipul\u00e1ciu grafu ako celku aj s jeho jednotliv\u00fdmi vrcholmi a prepojeniami. Graf zobrazuje komplexitu analyzovan\u00e9ho zdrojov\u00e9ho k\u00f3du a prepojenia medzi modulmi. R\u00e1mec Unity si vy\u017eaduje implement\u00e1ciu skriptov v C#. S\u00fa\u010das\u0165ou tohto modulu s\u00fa dodato\u010dn\u00e9 moduly ako podpora vykres\u013eovania vo virtu\u00e1lnej realite na Oculus Rift alebo HTC Vive a interakciu s grafom pomocou senzoru r\u00fak Leap Motion, vykres\u013eovanie v roz\u0161\u00edrenej realite a manipul\u00e1ciu s grafom sledovan\u00edm \u0161peci\u00e1lnych symbolov pomocou be\u017enej kamery.","title":"Unity"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#actions","text":"Tento modul vytv\u00e1ra jednotn\u00fd syst\u00e9m pre sp\u00fa\u0161\u0165anie znovupou\u017eite\u013en\u00fdch kusov k\u00f3du sp\u00fa\u0161\u0165an\u00e9 z grafick\u00e9ho rozhrania. Je to implement\u00e1cia Command patternu. Diagram Command patternu je mo\u017en\u00e9 vidie\u0165 na obr\u00e1zku ni\u017e\u0161ie. Akcie sa sp\u00fa\u0161\u0165aj\u00fa pomocou met\u00f3dy ActionManager.Start . IAction m\u00e1 svoj \u017eivotn\u00fd cyklus OnStart , OnUpdate , OnEnd , OnCancel . Taktie\u017e ur\u010duje svoju IActionGroup . V jeden moment nem\u00f4\u017eu prebieha\u0165 viacer\u00e9 akcie z rovnakej IActionGroup . Ak sa za\u010dne in\u00e1 akcia, tak sa predo\u0161l\u00e1 zru\u0161\u00ed a zavol\u00e1 sa jej OnCancel . Akcie maj\u00fa predvolen\u00fa skupinu ActionGroup.None , pre ktor\u00fa tieto vz\u00e1jomn\u00e9 vylu\u010dovanie neplat\u00ed. Taktie\u017e je zadefinovan\u00e1 OneTimeAction , ktor\u00e1 je \u0161peci\u00e1lny pr\u00edpad IAction , ktor\u00e1 nem\u00e1 svoj \u017eivotn\u00fd cyklus a vykon\u00e1 sa iba jedenkr\u00e1t.","title":"Actions"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#ar-technol\u00f3gie","text":"Na spustenie AR sc\u00e9ny s\u00fa nutn\u00e9 okrem VR/AR okuliarov 3 technol\u00f3gie. Tie s\u00fa: LEAP Motion Senzor ZED Kamera HoverUI Kit ZED Kamera poskytuje zobrazenie priestoru okolo pou\u017e\u00edvate\u013ea. V projekte je pou\u017eit\u00e9 SDK v2.8. Pred pou\u017e\u00edvan\u00edm je nutn\u00e9 SDK najprv nain\u0161talova\u0165. To je dostupn\u00e9 na str\u00e1nke: https://www.stereolabs.com/developers/ . Kamera dok\u00e1\u017ee okrem sn\u00edmania aj vn\u00edma\u0165 okolie ako 3D priestor v\u010faka h\u013abkov\u00e9mu sn\u00edmaniu. V projekte sa preto pou\u017e\u00edva prim\u00e1rne na dve veci. Prvou je \u017ee dok\u00e1\u017ee vykon\u00e1va\u0165 \u201cspatial mapping\u201d, \u010do je vytvorenie digit\u00e1lneho meshu z prostredia a n\u00e1sledne ho aj uklada\u0165. Druhou vlastnos\u0165ou je \u201cdepth perception\u201d, pri ktorej ZED kamere zad\u00e1me dvojrozmern\u00e9 s\u00faradnice a ona n\u00e1m dok\u00e1\u017ee vr\u00e1ti\u0165 vzdialenos\u0165 kamery od body, na ktor\u00fd sa pozer\u00e1me. T\u00e1to funkcia sa pou\u017e\u00edva na umiest\u0148ovanie grafu na vybran\u00fd bod. Do sc\u00e9ny sa po nain\u0161talovan\u00ed prid\u00e1 modul, ktor\u00fd sa naz\u00fdva Zed_Rig_Stereo. Ten sl\u00fa\u017ei namiesto kamery v sc\u00e9ne a taktie\u017e obsahuje komponent ZED Manager, \u010do je kni\u017enica funkci\u00ed ZED kamery. Pokia\u013e potrebujeme vyu\u017ei\u0165 funkciu tejto kni\u017enice, v skripte si vytiahneme pr\u00e1ve tento komponent. LEAP Motion zabezpe\u010duje sledovanie pohybu r\u00fak. Pou\u017eite je SDK v2.3.1. Pre in\u0161tal\u00e1ciu je nutn\u00e9 stiahnu\u0165 vy\u0161\u0161ie spom\u00ednan\u00fd SDK zo str\u00e1nky: https://developer.leapmotion.com/get-started/ a nain\u0161talova\u0165. Parametre s\u00fa v Unity u\u017e prednastaven\u00e9. LEAP je v tejto sc\u00e9ne prim\u00e1rne kv\u00f4li interakt\u00edvnemu menu HoverUI. Na spr\u00edstupnenie LEAP senzoru v AR sc\u00e9ne je potrebn\u00e9 na kameru pripn\u00fa\u0165 LEAP XR Service Priovider a na spr\u00edstupnenie r\u00fak treba prida\u0165 objekt LEAP Rig do sc\u00e9ny. HoverUI Kit sl\u00fa\u017ei ako interakt\u00edvne menu, ktor\u00e9 je pripnut\u00e9 na ruk\u00e1ch pomocou LEAP senzoru. In\u0161tal\u00e1cia nie je potrebn\u00e1, v\u0161etky potrebn\u00e9 prostriedky s\u00fa u\u017e v projekte. Aktivuje sa obr\u00e1ten\u00edm \u013eavej ruky smerom nahor a naviguje sa n\u00edm pomocou ukazov\u00e1ka pravej ruky. Pomocou tohto menu sa interaguje so samotn\u00fdm grafom, teda funkcie ako zapn\u00fa\u0165 layoutova\u010d, zmeni\u0165 typy uzlov/hr\u00e1n alebo sa pomocou neho umiestni graf na miesto, na ktor\u00e9 sa moment\u00e1lne pou\u017e\u00edvate\u013e pozer\u00e1. Na pripnutie Hover UI menu na LEAP ruky je potrebn\u00e9 na Leap Rig pripn\u00fa\u0165 Hover Input Leap Motion.","title":"AR Technol\u00f3gie"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#camera-manager","text":"Skript zah\u0155\u0148a funkcionalitu pou\u017e\u00edvan\u00fa pri interakcii s kamerou. Zabezpe\u010duje efekt\u00edvne manipulovanie a pohyb vo vizualizovanom grafe. Medzi hlavn\u00fa funkcionalu tejto \u010dasti syst\u00e9mu patr\u00ed pribli\u017eovanie sa ku konkr\u00e9tnym uzlom (FocusObject), orbitovanie okolo jedn\u00e9ho alebo skupiny uzlov (OrbitalMode) a automatick\u00e9 oddialenie kamery do vzdialenosti potrebnej na zobrazenie kompletn\u00e9ho grafu (ZoomToFit). FocusObject - funkcionalita zabezpe\u010duj\u00faca pribl\u00ed\u017eenie kamery ku konkr\u00e9tnemu uzlu po vykonan\u00ed akcie pou\u017e\u00edvate\u013ea. Vyvolanie samotnej akcie zabezpe\u010duje met\u00f3da ZoomInTo(clickedObjectTransform), ktorej parameter clickedObjectTransform nesie pou\u017e\u00edvate\u013eov zvolen\u00fd objekt. V procese pribli\u017eovania m\u00e1 kamera prednastaven\u00e9 dva stavy - isZoomed a isZooming v z\u00e1vislosti od toho, \u010di je kamera k uzlu pribl\u00ed\u017een\u00e1, alebo je v re\u017eime pribli\u017eovania (UpdateZoomInTo). Pri tomto re\u017eime s\u00fa pou\u017e\u00edt\u00e9 \u0161tandardn\u00e9 oper\u00e1cie pre interpol\u00e1ciu a rot\u00e1ciu, ktor\u00fdmi Unity disponuje. OrbitalMode - orbit\u00e1lny m\u00f3d, ktor\u00e9ho \u00falohou je centrovanie kamery na \u017eiadan\u00fd bod a n\u00e1sledn\u00e9 orbitovanie. Nemus\u00ed \u00eds\u0165 nutne o uzol v grafe, funkcionalita pon\u00faka aj orbitovanie okolo \u0165a\u017eiska viacer\u00fdch vybran\u00fdch uzlov pou\u017e\u00edvate\u013eom. Selekcia uzla/uzlov: Poskytuje SelectionManager, ktor\u00e9ho met\u00f3da GetSelectedObjects() vracia zoznam ozna\u010den\u00fdch uzlov. V\u00fdpo\u010det \u0165a\u017eiska: Zo zoznamu ozna\u010den\u00fdch uzlov vykon\u00e1va v\u00fdpo\u010det poz\u00edcie \u0165a\u017eiska. Interakcia: Prv\u00fdm krokom je vycentrovanie kamery na \u017eiadan\u00fd bod. Dr\u017ean\u00edm zvolen\u00e9ho tla\u010didla je mo\u017en\u00e9 my\u0161ou orbitova\u0165 po X-ovej alebo Y-ovej osi. ZoomToFit - funkcionalita, ktor\u00e1 po jej zavolan\u00ed oddiali, alebo pribl\u00ed\u017ei kameru od grafu tak, aby sa zmestil na obrazovku. Vyvolanie samotnej akcie zabezpe\u010duje met\u00f3da ZoomToFit(). T\u00e1to met\u00f3da r\u00e1ta cie\u013eov\u00fa poz\u00edciu a nato\u010denie kamery, ktor\u00e9 mus\u00ed kamera dosiahnu\u0165, aby sa dosiahol v\u00fdsledn\u00fd efekt. V procese pribli\u017eovania / oddia\u013eovania m\u00e1 kamera prednastaven\u00e9 dva stavy - isZoomed a isZooming v z\u00e1vislosti od toho, \u010di je dosiahnut\u00fd cie\u013eov\u00fd stav kamery, alebo je v re\u017eime pohybu k tomuto stavu (UpdateZoomToFit). V\u0161etky akcie s\u00fa aplikovan\u00e9 za pomoci Action Patternu a ich vstupy s\u00fa spracov\u00e1van\u00e9 Input Handlerom.","title":"Camera Manager"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#hoverui-kit","text":"K modulu HoverUI Kit patria, v r\u00e1mci AR sc\u00e9ny, hern\u00e9 objekty:","title":"HoverUI Kit"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#hovercast","text":"Hern\u00fd objekt obsahuje v\u0161etky vizu\u00e1lne vlastnosti, komponenty a defin\u00edcie anim\u00e1ci\u00ed, ktor\u00e9 sa dej\u00fa pri pou\u017e\u00edvan\u00ed menu. Vyskytuj\u00fa sa v \u0148om 4 objekty: * OpenItem - defin\u00edcia tla\u010didla na otv\u00e1ranie/zatv\u00e1ranie menu. * TitleItem - obsahuje nastavenie textu pre n\u00e1zov menu. * BackItem - defin\u00edcia tla\u010didla pre krok sp\u00e4\u0165, ktor\u00e9 sa nach\u00e1dza sa v strede dlane. * Rows - aktu\u00e1lne rozlo\u017eenie hlavn\u00e9ho menu, ktor\u00e9 m\u00f4\u017eeme upravova\u0165 (pr\u00edpadne prid\u00e1va\u0165 nov\u00e9 polo\u017eky).","title":"HoverCast"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#hovermock","text":"Dc\u00e9rsky hern\u00fd objekt Mock obsahuje makety v\u0161etk\u00fdch nami pou\u017e\u00edvan\u00fdch typov komponentov v hlavnom menu. Pri vytv\u00e1ran\u00ed nov\u00fdch komponentov je mo\u017en\u00e9 tieto hern\u00e9 objekty kop\u00edrova\u0165, \u010d\u00edm sa m\u00f4\u017eeme vyhn\u00fa\u0165 zd\u013ahav\u00e9mu a komplikovan\u00e9mu manu\u00e1lnemu vytv\u00e1raniu komponentov prostredn\u00edctvom extern\u00fdch HoverBuilderov. Pri nakop\u00edrovan\u00ed netreba zabudn\u00fa\u0165 na zmenu n\u00e1zvu hern\u00e9ho objektu a jeho vlastnost\u00ed ID a Label (pr\u00edpadne Navigate To Row pre typ RowSelector, Radio Group ID pre typ Radio, Range Min a Range Max pre Slider). Tento objekt obsahuje makety komponentov: Row - riadok vnoren\u00e9ho menu po kliknut\u00ed na RowSelector, ktor\u00fd obsahuje konkr\u00e9tne komponenty. RowSelector - komponent typu Selector, ktor\u00fd sa star\u00e1 o navig\u00e1ciu do vnoren\u00e9ho menu (Row). Back - komponent typu Selector, ktor\u00fd m\u00e1 za \u00falohu o navig\u00e1ciu do rodi\u010dovsk\u00e9ho menu (krok sp\u00e4\u0165). Selector - komponent, ktor\u00fd sa spr\u00e1va ako klasick\u00e9 tla\u010didlo - neuchov\u00e1va si stav. Radio - komponent, ktor\u00fd sa spoj\u00ed s ostatn\u00fdmi komponentami tohto typu prostredn\u00edctvom Group ID - v jednej skupine m\u00f4\u017ee by\u0165 ozna\u010den\u00e9 maxim\u00e1lne jedno Radio tla\u010didlo. CheckBox - tla\u010didlo, ktor\u00e9 si uchov\u00e1va stav (vieme ur\u010di\u0165, \u010di bol stla\u010den\u00fd alebo nie). Slider - posuvn\u00edk, ktor\u00fd sa je mo\u017en\u00e9 nastavi\u0165 na jednu z hodn\u00f4t z intervalu . TextItem - komponent, ktor\u00fd zobrazuje text.","title":"HoverMock"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#hoveruimanager","text":"Tento hern\u00fd objekt je jedn\u00fdm z mana\u017e\u00e9rov v AR sc\u00e9ne, ktor\u00e9 s\u00fa ulo\u017een\u00e9 v objekte ManagersAR. Obsahuje referencie na v\u0161etky komponenty HoverUI menu a skript HoverUIManager, ktor\u00fd na za\u010diatku \u017eivotn\u00e9ho cyklu prirad\u00ed komponentom event handlery, ktor\u00e9 bud\u00fa pri interakcii sp\u00fa\u0161\u0165a\u0165 jednotliv\u00e9 akcie z Action Pattern-u. Uk\u00e1\u017eku priradenia eventu v k\u00f3de zobrazuje obr\u00e1zok vy\u0161\u0161ie a sum\u00e1r komponentov s ich udalos\u0165ami tabu\u013eka ni\u017e\u0161ie.","title":"HoverUIManager"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#input-handler","text":"Tento modul vytv\u00e1ra jednotn\u00fd syst\u00e9m pre spracovanie vstupov. Desktopov\u00e1 \u010dast zaoba\u013euje Unity input syst\u00e9m a AR \u010dast zaoba\u013euje Leap input syst\u00e9m. Modul pracuje na z\u00e1klade Observer patternu, kde skript, ktor\u00fd chce pou\u017e\u00edva\u0165 Input sa prihl\u00e1si na vstup met\u00f3dou InputHandler.Subscribe . Akcie pre vstupy s\u00fa zadefinovan\u00e9 v IBaseInputAction . Konkr\u00e9tne defin\u00edcie vstupu si definuj\u00fa jednotliv\u00e9 sp\u00f4soby vstupov. (napr. DesktopInputAction , LeapInputAction ). InputHandler.Subscribe z\u00e1rove\u0148 vracia InputSubscribtion , s ktorou je mo\u017en\u00e9 input zru\u0161i\u0165 cez met\u00f3du InputHandler.Unsubscribe . Callbacky pre inputy zavol\u00e1 InputHandler , pri\u010dom dozer\u00e1 na to, aby z\u00e1rove\u0148 neboli zavolan\u00e9 callbacky pre rovnak\u00e9 vstupy (napr. Ctrl+Mouse0 a z\u00e1rove\u0148 Mouse0). Jedna vstupov\u00e1 akcia resp. vstupov\u00e1 udalos\u0165 je definovan\u00e1 ako InputEvent , pri\u010dom sa event sklad\u00e1 z jedn\u00e9ho alebo viacer\u00fdch InputElement . InputElement sa d\u00e1 predstavi\u0165 ako jedna kl\u00e1vesa alebo axis (napr. stla\u010denie Mouse0) a InputEvent ako kombin\u00e1cia t\u00fdchto elementov (napr. Ctrl+Mouse0). Desktopov\u00e1 \u010das\u0165 inputov zaoba\u013euje Unity kon\u0161tanty a met\u00f3dy: Input.Desktop.Key - zaoba\u013euje UnityEngine.KeyCode Input.Desktop.Axis - zaoba\u013euje UnityEngine.Axis , resp. string","title":"Input Handler"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#label-manager","text":"Tento skript obsahuje kon\u0161tanty a funkcie, ktor\u00e9 s\u00fa potrebn\u00e9 pre zobrazovanie jednotliv\u00fdch popiskov pre uzly alebo hrany. Skript konkr\u00e9tne obsahuje: kon\u0161tanty: LabelCharSet - hodnota typu float, ktor\u00e1 ovplyv\u0148uje v\u0161eobecn\u00fa ve\u013ekos\u0165 popiskov. showAllLabels - indikuje, \u010di sa maj\u00fa popisky zobrazi\u0165 ihne\u010f po na\u010d\u00edtan\u00ed grafu. funkcie: ToggleAllLabels - prep\u00edna v\u0161etky popisky medzi stavmi vidite\u013en\u00e9 a nevidite\u013en\u00e9. ShowLabel - zobraz\u00ed popisok pre ur\u010dit\u00fd hern\u00fd objekt. HideLabel - skryje popisok pre ur\u010dit\u00fd hern\u00fd objekt. ShowLabels - zobraz\u00ed popisky pre poskytnut\u00e9 hern\u00e9 objekty. HideLabels - skryje popisky pre poskytnut\u00e9 hern\u00e9 objekty.","title":"Label Manager"},{"location":"dokumentacia_k_produktu/architektura_systemu/moduly_systemu/unity/#selection-manager","text":"Tento skript sl\u00fa\u017ei na ozna\u010dovanie uzlov a hr\u00e1n v grafe. Pon\u00faka tieto funkcie: Select - po kliknut\u00ed na uzol/hranu sa dan\u00fd objekt ozna\u010di, a prid\u00e1 sa do zoznamu ozna\u010den\u00fdch objektov MultiSelect - pri dr\u017ean\u00ed CTRL a ozna\u010dovan\u00ed uzlov/hr\u00e1n sa prid\u00e1vaj\u00fa ozna\u010den\u00e9 objekty do ISet Unselect - ak je uzol/hrana u\u017e ozna\u010den\u00fd a op\u00e4tovne na\u0148 klikneme, objekt sa odzna\u010d\u00ed UnselectAll - pokia\u013e klikneme mimo grafu alebo m\u00e1me ozna\u010dn\u00fd objekt/-y a klikneme na in\u00fd objekt bez dr\u017eania CTRL, ostatn\u00e9 ozna\u010den\u00e9 objekty sa odzna\u010dia V\u0161etky grafov\u00e9 objekty, ktor\u00e9 s\u00fa ozna\u010den\u00e9 sa udr\u017euj\u00fa v ISet selectedObjects, ktor\u00fd si dok\u00e1\u017eeme getn\u00fa\u0165 ak by sme k nim potrebovali prist\u00fapi\u0165 zvonku. Po vizu\u00e1lnej str\u00e1nke v projekte vid\u00edme ozna\u010den\u00e9 objekty pomocou oran\u017eov\u00e9ho obrysu.","title":"Selection Manager"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/","text":"\ud83e\uddf2 Magnety \u00b6 Metauzly s\u00fa uzly, ktor\u00e9 nie s\u00fa priamo s\u00fa\u010das\u0165ou grafu, ale m\u00f4\u017eu ovplyv\u0148ova\u0165 v\u00fdsledn\u00e9 rozlo\u017eenie grafu. Tieto uzly maj\u00fa fixn\u00e9 poz\u00edcie a m\u00f4\u017eu by\u0165 pridan\u00e9 do sc\u00e9ny napr\u00edklad pou\u017e\u00edvate\u013eom. M\u00f4\u017ee by\u0165 viacero druhov metauzlov, z ktor\u00fdch jedn\u00fdm druhom s\u00fa pr\u00e1ve magnety. Algoritmus pou\u017eit\u00fd v tomto rie\u0161en\u00ed podporuje tri typy metauzlov: Pri\u0165ahuje k sebe uzly, ktor\u00e9 s\u00fa s n\u00edm spojen\u00e9. Pri\u0165ahuje k sebe uzly, ktor\u00e9 sa nach\u00e1dzaj\u00fa v ur\u010denom rozsahu vzdialenosti od metauzla. To, \u010di je uzol k metauzlu pri\u0165ahovan\u00fd, je ur\u010den\u00e9 na z\u00e1klade funkcie, ktorej vstupom je konkr\u00e9tny uzol. Takto m\u00f4\u017eeme zadefinova\u0165 aj komplikovanej\u0161iu podmienku. Ka\u017ed\u00fd metauzol m\u00e1 ur\u010den\u00fd aj n\u00e1sobi\u010d sily, ktorou m\u00e1 uzol pri\u0165ahova\u0165. Ako je vy\u0161\u0161ie spomenut\u00e9, magnety k sebe pri\u0165ahuj\u00fa uzly v grafe, ktor\u00e9 sp\u013a\u0148aj\u00fa ur\u010dit\u00e9 krit\u00e9ria. M\u00f4\u017ee \u00eds\u0165 napr\u00edklad o stupe\u0148 uzla, vzdialenosti od in\u00e9ho uzla alebo o nejak\u00fa vlastnos\u0165, ktor\u00fa tento uzol v sebe nesie. Tak\u00e9to krit\u00e9rium v\u0161ak m\u00f4\u017ee z\u00e1visie\u0165 aj na in\u00fdch magnetoch v sc\u00e9ne. M\u00f4\u017eeme vytvori\u0165 magnet, ktor\u00fd bude pri\u0165ahova\u0165 v\u0161etky uzly, ktor\u00e9 nie s\u00fa pri\u0165ahovan\u00e9 in\u00fdmi magnetmi. Magnety p\u00f4sobia pr\u00ed\u0165a\u017elivou silou na uzly, ktor\u00e9 sp\u013a\u0148aj\u00fa zadan\u00e9 krit\u00e9rium a pr\u00edpadne odpudivou silou na v\u0161etky zvy\u0161n\u00e9 uzly v grafe. Mnohokr\u00e1t m\u00f4\u017ee by\u0165 potrebn\u00e9 umiestni\u0165 uzly so spolo\u010dn\u00fdmi znakmi do ur\u010dit\u00e9ho geometrick\u00e9ho tvaru. V takomto pr\u00edpade m\u00f4\u017eeme geometrick\u00fd \u00fatvar umiestni\u0165 okolo magnetu. Magnet n\u00e1sledne zaru\u010d\u00ed, \u017ee v\u0161etky uzly, ktor\u00e9 sp\u013a\u0148aj\u00fa krit\u00e9rium, s\u00fa pri\u0165ahovan\u00e9 do ur\u010denej oblasti a zvy\u0161n\u00e9 uzly s\u00fa od nej odpudzovan\u00e9. Upravovanie rozlo\u017eenia grafov silovo-riaden\u00fdch algoritmov pomocou magnetov bolo implementovan\u00e9 vo vizualiza\u010dnom n\u00e1stroji MagnetViz . Okrem vy\u0161\u0161ie pop\u00edsan\u00fdch pou\u017eit\u00ed magnetov, MagnetViz umo\u017e\u0148uje pou\u017e\u00edva\u0165 aj hierarchie magnetov, kde dc\u00e9rske magnety m\u00f4\u017eu pri\u0165ahova\u0165 len ur\u010dit\u00fa podmno\u017einu uzlov svojho rodi\u010da. Na obr\u00e1zku 1 vid\u00edme graf rozlo\u017een\u00fd n\u00e1strojom MagnetViz pred pou\u017eit\u00edm magnetu a po pou\u017eit\u00ed magnetu spolu s geometrick\u00fdm ohrani\u010den\u00edm. Na\u013eavo je graf bez pou\u017eitia magnetu. Napravo vid\u00edme ten ist\u00fd graf spolu s magnetom a kruhom do ktor\u00e9ho magnet pri\u0165ahuje uzly. Technick\u00e1 dokument\u00e1cia \u00b6 Implement\u00e1cia v aktu\u00e1lnom stave zah\u0155\u0148a podporu v layoutova\u010di (Terra \u010das\u0165), obslu\u017en\u00e9 Lua funkcie v layout manageri a GraphCore. Ch\u00fdba podpora \u00faprav metauzlov tretieho druhum pre ktor\u00e9 je potrebn\u00e9 navrhn\u00fa\u0165 sp\u00f4sob definovania a prira\u010fovania podmienkov\u00fdch funkci\u00ed. V s\u00fabore 3dsoftvis_remake\\resources\\scripts\\module\\layouter\\algorithms\\terra\\fruchterman_reingold.t , na riadkoch 273 a\u017e 305 je \u010das\u0165 k magnetom. T\u00e1to \u010das\u0165 sl\u00fa\u017ei na vypo\u010d\u00edtanie pr\u00ed\u0165a\u017eliv\u00fdch a odpudiv\u00fdch s\u00edl medzi metauzlami a jednotliv\u00fdmi uzlami grafu a na preskupenie grafu. Na riadkoch 418 a\u017e 584 sa nach\u00e1dzaj\u00fa funkcie pre mana\u017ement metauzlov. Layoutova\u010d obsahuje pole metaNodes v ktorom sa ukladaj\u00fa metauzly a premenn\u00fa metaNodeCount . Pri prid\u00e1van\u00ed a odoberan\u00ed metauzlov sa pole realokuje na men\u0161ie alebo v\u00e4\u010d\u0161ie a pr\u00edslu\u0161ne sa zmen\u00ed aj hodnota premennej. Metauzly sa kedysi nach\u00e1dzali priamo v grafe, teraz s\u00fa u\u017e oddelen\u00e9 v tomto poli. Implement\u00e1cia je roben\u00e1 pod\u013ea vzoru obmedzova\u010dov . Implement\u00e1ciu prid\u00e1vania obmedzova\u010dov m\u00f4\u017eeme vidie\u0165 v s\u00fabore 3dsoftvis_remake\\resources\\scripts\\module\\layouter\\layout_manager.lua . Z tohto s\u00faboru sa n\u00e1sledne vol\u00e1 funkcia s implementovan\u00fdm algoritmom na layoutovanie - v na\u0161om pr\u00edpade u\u017e spom\u00ednan\u00fd fruchterman_reingold.t , ke\u010f\u017ee v tomto je spraven\u00e1 predpr\u00edprava na magnety. V s\u00fabore layout_manager.lua sa zavol\u00e1 funkcia runLayouting() , ktor\u00e1 na viacero krokov nakoniec v s\u00fabore fruchterman_reingold.t spust\u00ed funkciu calculateLayout() , ktor\u00e1 u\u017e zabezpe\u010duje samotn\u00e9 layoutovanie. Funkcie na prid\u00e1vanie a upravovanie obmedzova\u010dov s\u00fa volan\u00e9 zo s\u00faboru 3dsoftvis_remake\\Projects\\3DSoftviz\\CSProjects\\GraphCore\\LayoutManager.cs od riadku 139 a pre magnety od riadku 322. Zo C# s\u00faboru sa Lua funkcie volaj\u00fa cez C++ wrapper LuaInterface pomocou funkcie DoString() . Zhrnutie \u00b6 \u010co bolo doposia\u013e implementovan\u00e9 layoutovanie metauzlov (magnetov) - Terra prid\u00e1vanie a upravovanie magnetov - Lua prid\u00e1vanie a upravovanie magnetov - C# \u010co bude treba implementova\u0165 v bud\u00facnosti metauzly tretieho druhu prid\u00e1vanie a upravovanie magnetov - Terra, Lua, C# interakcia s pou\u017e\u00edvate\u013eom - Unity testy Testy \u00b6 Testy pre t\u00fato funkcionalitu zatia\u013e neexistuj\u00fa, preto sa zatia\u013e sna\u017e\u00edme spravi\u0165 aspo\u0148 high-level n\u00e1vrh testov. High-level n\u00e1vrh testov \u00b6 Test na po\u010det metauzlov - \u010di sed\u00ed premenn\u00e1 metaNodesCount s re\u00e1lnym po\u010dtom metauzlov v poli Test na fixnos\u0165 metauzlov - ke\u010f\u017ee metauzly maj\u00fa ma\u0165 fixn\u00e9 poz\u00edcie, prid\u00e1me do sc\u00e9ny zop\u00e1r magnetov, prejdeme zop\u00e1r iter\u00e1ciami layoutovania a skontrolujeme, \u010di je ka\u017ed\u00fd z magnetov naozaj na tej poz\u00edcii, kam sme ho umiestnili Test na vzdialenos\u0165 od prv\u00e9ho druhu magnetu - vytvor\u00edme magnet, ktor\u00fd bude spojen\u00fd s jedn\u00fdm uzlom grafu, vypo\u010d\u00edtame ich vzdialenos\u0165 vzdu\u0161nou \u010diarou, takisto si n\u00e1hodne vyberieme zop\u00e1r \u010fal\u0161\u00edch uzlov v grafe a vypo\u010d\u00edtame ich vzdialenos\u0165 - po prelayoutovan\u00ed by sa mala vzdialenos\u0165 uzla spojen\u00e9ho s magnetom od magnetu zmen\u0161i\u0165 a vzdialenos\u0165 ostatn\u00fdch n\u00e1hodne vybran\u00fdch uzlov od magnetu by sa nemala zmen\u0161i\u0165 (to znamen\u00e1, \u017ee ostane rovnak\u00e1, alebo sa zv\u00e4\u010d\u0161\u00ed) Test na vzdialenos\u0165 od druh\u00e9ho druhu magnetu - analogicky k testu na prv\u00fd druh magnetu sprav\u00edme test aj na tento druh magnetu Test na vzdialenos\u0165 od tretieho druhu magnetu - analogicky k testu na prv\u00fd druh magnetu sprav\u00edme test aj na tento druh magnetu","title":"\ud83e\uddf2 Magnety"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/#-magnety","text":"Metauzly s\u00fa uzly, ktor\u00e9 nie s\u00fa priamo s\u00fa\u010das\u0165ou grafu, ale m\u00f4\u017eu ovplyv\u0148ova\u0165 v\u00fdsledn\u00e9 rozlo\u017eenie grafu. Tieto uzly maj\u00fa fixn\u00e9 poz\u00edcie a m\u00f4\u017eu by\u0165 pridan\u00e9 do sc\u00e9ny napr\u00edklad pou\u017e\u00edvate\u013eom. M\u00f4\u017ee by\u0165 viacero druhov metauzlov, z ktor\u00fdch jedn\u00fdm druhom s\u00fa pr\u00e1ve magnety. Algoritmus pou\u017eit\u00fd v tomto rie\u0161en\u00ed podporuje tri typy metauzlov: Pri\u0165ahuje k sebe uzly, ktor\u00e9 s\u00fa s n\u00edm spojen\u00e9. Pri\u0165ahuje k sebe uzly, ktor\u00e9 sa nach\u00e1dzaj\u00fa v ur\u010denom rozsahu vzdialenosti od metauzla. To, \u010di je uzol k metauzlu pri\u0165ahovan\u00fd, je ur\u010den\u00e9 na z\u00e1klade funkcie, ktorej vstupom je konkr\u00e9tny uzol. Takto m\u00f4\u017eeme zadefinova\u0165 aj komplikovanej\u0161iu podmienku. Ka\u017ed\u00fd metauzol m\u00e1 ur\u010den\u00fd aj n\u00e1sobi\u010d sily, ktorou m\u00e1 uzol pri\u0165ahova\u0165. Ako je vy\u0161\u0161ie spomenut\u00e9, magnety k sebe pri\u0165ahuj\u00fa uzly v grafe, ktor\u00e9 sp\u013a\u0148aj\u00fa ur\u010dit\u00e9 krit\u00e9ria. M\u00f4\u017ee \u00eds\u0165 napr\u00edklad o stupe\u0148 uzla, vzdialenosti od in\u00e9ho uzla alebo o nejak\u00fa vlastnos\u0165, ktor\u00fa tento uzol v sebe nesie. Tak\u00e9to krit\u00e9rium v\u0161ak m\u00f4\u017ee z\u00e1visie\u0165 aj na in\u00fdch magnetoch v sc\u00e9ne. M\u00f4\u017eeme vytvori\u0165 magnet, ktor\u00fd bude pri\u0165ahova\u0165 v\u0161etky uzly, ktor\u00e9 nie s\u00fa pri\u0165ahovan\u00e9 in\u00fdmi magnetmi. Magnety p\u00f4sobia pr\u00ed\u0165a\u017elivou silou na uzly, ktor\u00e9 sp\u013a\u0148aj\u00fa zadan\u00e9 krit\u00e9rium a pr\u00edpadne odpudivou silou na v\u0161etky zvy\u0161n\u00e9 uzly v grafe. Mnohokr\u00e1t m\u00f4\u017ee by\u0165 potrebn\u00e9 umiestni\u0165 uzly so spolo\u010dn\u00fdmi znakmi do ur\u010dit\u00e9ho geometrick\u00e9ho tvaru. V takomto pr\u00edpade m\u00f4\u017eeme geometrick\u00fd \u00fatvar umiestni\u0165 okolo magnetu. Magnet n\u00e1sledne zaru\u010d\u00ed, \u017ee v\u0161etky uzly, ktor\u00e9 sp\u013a\u0148aj\u00fa krit\u00e9rium, s\u00fa pri\u0165ahovan\u00e9 do ur\u010denej oblasti a zvy\u0161n\u00e9 uzly s\u00fa od nej odpudzovan\u00e9. Upravovanie rozlo\u017eenia grafov silovo-riaden\u00fdch algoritmov pomocou magnetov bolo implementovan\u00e9 vo vizualiza\u010dnom n\u00e1stroji MagnetViz . Okrem vy\u0161\u0161ie pop\u00edsan\u00fdch pou\u017eit\u00ed magnetov, MagnetViz umo\u017e\u0148uje pou\u017e\u00edva\u0165 aj hierarchie magnetov, kde dc\u00e9rske magnety m\u00f4\u017eu pri\u0165ahova\u0165 len ur\u010dit\u00fa podmno\u017einu uzlov svojho rodi\u010da. Na obr\u00e1zku 1 vid\u00edme graf rozlo\u017een\u00fd n\u00e1strojom MagnetViz pred pou\u017eit\u00edm magnetu a po pou\u017eit\u00ed magnetu spolu s geometrick\u00fdm ohrani\u010den\u00edm. Na\u013eavo je graf bez pou\u017eitia magnetu. Napravo vid\u00edme ten ist\u00fd graf spolu s magnetom a kruhom do ktor\u00e9ho magnet pri\u0165ahuje uzly.","title":"\ud83e\uddf2 Magnety"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/#technick\u00e1-dokument\u00e1cia","text":"Implement\u00e1cia v aktu\u00e1lnom stave zah\u0155\u0148a podporu v layoutova\u010di (Terra \u010das\u0165), obslu\u017en\u00e9 Lua funkcie v layout manageri a GraphCore. Ch\u00fdba podpora \u00faprav metauzlov tretieho druhum pre ktor\u00e9 je potrebn\u00e9 navrhn\u00fa\u0165 sp\u00f4sob definovania a prira\u010fovania podmienkov\u00fdch funkci\u00ed. V s\u00fabore 3dsoftvis_remake\\resources\\scripts\\module\\layouter\\algorithms\\terra\\fruchterman_reingold.t , na riadkoch 273 a\u017e 305 je \u010das\u0165 k magnetom. T\u00e1to \u010das\u0165 sl\u00fa\u017ei na vypo\u010d\u00edtanie pr\u00ed\u0165a\u017eliv\u00fdch a odpudiv\u00fdch s\u00edl medzi metauzlami a jednotliv\u00fdmi uzlami grafu a na preskupenie grafu. Na riadkoch 418 a\u017e 584 sa nach\u00e1dzaj\u00fa funkcie pre mana\u017ement metauzlov. Layoutova\u010d obsahuje pole metaNodes v ktorom sa ukladaj\u00fa metauzly a premenn\u00fa metaNodeCount . Pri prid\u00e1van\u00ed a odoberan\u00ed metauzlov sa pole realokuje na men\u0161ie alebo v\u00e4\u010d\u0161ie a pr\u00edslu\u0161ne sa zmen\u00ed aj hodnota premennej. Metauzly sa kedysi nach\u00e1dzali priamo v grafe, teraz s\u00fa u\u017e oddelen\u00e9 v tomto poli. Implement\u00e1cia je roben\u00e1 pod\u013ea vzoru obmedzova\u010dov . Implement\u00e1ciu prid\u00e1vania obmedzova\u010dov m\u00f4\u017eeme vidie\u0165 v s\u00fabore 3dsoftvis_remake\\resources\\scripts\\module\\layouter\\layout_manager.lua . Z tohto s\u00faboru sa n\u00e1sledne vol\u00e1 funkcia s implementovan\u00fdm algoritmom na layoutovanie - v na\u0161om pr\u00edpade u\u017e spom\u00ednan\u00fd fruchterman_reingold.t , ke\u010f\u017ee v tomto je spraven\u00e1 predpr\u00edprava na magnety. V s\u00fabore layout_manager.lua sa zavol\u00e1 funkcia runLayouting() , ktor\u00e1 na viacero krokov nakoniec v s\u00fabore fruchterman_reingold.t spust\u00ed funkciu calculateLayout() , ktor\u00e1 u\u017e zabezpe\u010duje samotn\u00e9 layoutovanie. Funkcie na prid\u00e1vanie a upravovanie obmedzova\u010dov s\u00fa volan\u00e9 zo s\u00faboru 3dsoftvis_remake\\Projects\\3DSoftviz\\CSProjects\\GraphCore\\LayoutManager.cs od riadku 139 a pre magnety od riadku 322. Zo C# s\u00faboru sa Lua funkcie volaj\u00fa cez C++ wrapper LuaInterface pomocou funkcie DoString() .","title":"Technick\u00e1 dokument\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/#zhrnutie","text":"\u010co bolo doposia\u013e implementovan\u00e9 layoutovanie metauzlov (magnetov) - Terra prid\u00e1vanie a upravovanie magnetov - Lua prid\u00e1vanie a upravovanie magnetov - C# \u010co bude treba implementova\u0165 v bud\u00facnosti metauzly tretieho druhu prid\u00e1vanie a upravovanie magnetov - Terra, Lua, C# interakcia s pou\u017e\u00edvate\u013eom - Unity testy","title":"Zhrnutie"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/#testy","text":"Testy pre t\u00fato funkcionalitu zatia\u013e neexistuj\u00fa, preto sa zatia\u013e sna\u017e\u00edme spravi\u0165 aspo\u0148 high-level n\u00e1vrh testov.","title":"Testy"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/magnety/#high-level-n\u00e1vrh-testov","text":"Test na po\u010det metauzlov - \u010di sed\u00ed premenn\u00e1 metaNodesCount s re\u00e1lnym po\u010dtom metauzlov v poli Test na fixnos\u0165 metauzlov - ke\u010f\u017ee metauzly maj\u00fa ma\u0165 fixn\u00e9 poz\u00edcie, prid\u00e1me do sc\u00e9ny zop\u00e1r magnetov, prejdeme zop\u00e1r iter\u00e1ciami layoutovania a skontrolujeme, \u010di je ka\u017ed\u00fd z magnetov naozaj na tej poz\u00edcii, kam sme ho umiestnili Test na vzdialenos\u0165 od prv\u00e9ho druhu magnetu - vytvor\u00edme magnet, ktor\u00fd bude spojen\u00fd s jedn\u00fdm uzlom grafu, vypo\u010d\u00edtame ich vzdialenos\u0165 vzdu\u0161nou \u010diarou, takisto si n\u00e1hodne vyberieme zop\u00e1r \u010fal\u0161\u00edch uzlov v grafe a vypo\u010d\u00edtame ich vzdialenos\u0165 - po prelayoutovan\u00ed by sa mala vzdialenos\u0165 uzla spojen\u00e9ho s magnetom od magnetu zmen\u0161i\u0165 a vzdialenos\u0165 ostatn\u00fdch n\u00e1hodne vybran\u00fdch uzlov od magnetu by sa nemala zmen\u0161i\u0165 (to znamen\u00e1, \u017ee ostane rovnak\u00e1, alebo sa zv\u00e4\u010d\u0161\u00ed) Test na vzdialenos\u0165 od druh\u00e9ho druhu magnetu - analogicky k testu na prv\u00fd druh magnetu sprav\u00edme test aj na tento druh magnetu Test na vzdialenos\u0165 od tretieho druhu magnetu - analogicky k testu na prv\u00fd druh magnetu sprav\u00edme test aj na tento druh magnetu","title":"High-level n\u00e1vrh testov"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/","text":"\u26d3\ufe0f Obmedzova\u010de a gizm\u00e1 \u00b6 V\u0161eobecn\u00fd opis (motiv\u00e1cia) \u00b6 Nat\u00edvne funkcie, ktor\u00e9 sa nach\u00e1dzaj\u00fa v Leap core moduloch pre Unity, poskytuj\u00fa jednoduch\u00fa interakciu rukami, ako napr\u00edklad uchopenie alebo \u0165ahanie objektov, av\u0161ak t\u00e1to funkcionalita je pomerne obmedzen\u00e1. Taktie\u017e tieto moduly \u010dasto nesta\u010dia \u010do sa t\u00fdka presnosti, hlavne v pr\u00edpade tak\u00fdchto rozsiahlych grafov, s ak\u00fdmi v tomto projekte pracujeme. Chceme docieli\u0165 aby pou\u017e\u00edvate\u013e mohol pohodlne a intuit\u00edvne pracova\u0165 s grafom, pr\u00edpadne v bud\u00facnosti s grafmi, pri\u010dom cel\u00e1 interakcia bude zalo\u017een\u00e1 na gest\u00e1ch. Pou\u017e\u00edvate\u013e taktie\u017e potrebuje v ka\u017edom momente pozna\u0165 s ak\u00fdm uzlom, \u010das\u0165ou grafu alebo cel\u00fdm grafom aktu\u00e1lne pracuje. Pr\u00e1ve tu prich\u00e1dzaj\u00fa do \u00favahy gizm\u00e1 a obmedzova\u010de, ktor\u00e9 s\u00fa v projekte implementovan\u00e9. Gizmo je jednoduch\u00fd kv\u00e1der, ktor\u00fd sa zobraz\u00ed okolo objektu v grafe a poskytuje pou\u017e\u00edvate\u013eovi mo\u017enos\u0165 vykon\u00e1va\u0165 nad dan\u00fdm objektom (alebo skupinou objektov) r\u00f4zne transform\u00e1cie ako napr\u00edklad pres\u00favanie, rot\u00e1ciu, \u0161k\u00e1lovanie. Obmedzova\u010d je objekt, ktor\u00fd pom\u00e1ha vybra\u0165 skupinu objektov a re-layoutova\u0165 (reorganizova\u0165) ich. K dispoz\u00edcii s\u00fa aktu\u00e1lne 4 typy a to gu\u013ea, gu\u013eov\u00fd bod, kocka a doska. Gizm\u00e1 - bli\u017e\u0161ia \u0161pecifik\u00e1cia \u00b6 Aktu\u00e1lne je v assetoch pre Unity mo\u017en\u00e9 n\u00e1js\u0165 tak\u00e9, ktor\u00e9 podobn\u00fa funkcionalitu poskytuj\u00fa pre v\u00e4\u010d\u0161inu typov objektov, tieto rie\u0161enia sa v\u00e4\u010d\u0161inou spoliehaj\u00fa na shadery, ktor\u00e9 tieto gizm\u00e1 vykresluj\u00fa po\u010das post-processingu, teda potom, \u010do bola cel\u00e1 sc\u00e9na u\u017e d\u00e1vno vykreslen\u00e1. Toto je dobr\u00e9 v pr\u00edpade ovl\u00e1dania my\u0161ou, nako\u013eko my\u0161 bude v\u017edy vykres\u013eovan\u00e1 nad v\u0161etk\u00fdm ostatn\u00fdm. V na\u0161om pr\u00edpade je to v\u0161ak nepou\u017eite\u013en\u00e9, nako\u013eko ruky s\u00fa fyzicky pr\u00edtomn\u00e9 v samotnej sc\u00e9ne a m\u00f4\u017eu interagova\u0165 iba s in\u00fdmi objektami v sc\u00e9ne. V jednoduchosti to znamen\u00e1 to, \u017ee tieto gizm\u00e1 by boli v\u017edy renderovan\u00e9 nad rukami, \u010do by jednozna\u010dne pokazilo ak\u00fako\u013evek simul\u00e1ciu h\u013abky n\u00e1\u0161ho priestoru pre pou\u017e\u00edvate\u013ea. Z poh\u013eadu funkcionality s\u00fa aktu\u00e1lne implementovan\u00e9 dva typy giziem. Gizmo, ktor\u00e9 dok\u00e1\u017ee objektom pohybova\u0165 a rotova\u0165 a gizmo, ktor\u00e9 dok\u00e1\u017ee dan\u00fd objekt \u0161k\u00e1lova\u0165. Gizmo na h\u00fdbanie a rot\u00e1ciu objektu \u00b6 Tento typ gizma je zobrazen\u00fd v pr\u00edpade pribl\u00ed\u017eenia sa rukou k interagovate\u013en\u00e9mu objektu. Vizu\u00e1lne sa zobraz\u00ed ako skupina bielych hr\u00e1n v tvare kocky okolo dan\u00e9ho objektu. Po zobrazen\u00ed vieme jeho uchopen\u00edm objekt rotova\u0165 alebo pres\u00fava\u0165. V pr\u00edpade, \u017ee je v bl\u00edzkosti ruky viacero objektov, gizmo sa zobraz\u00ed okolo najbli\u017e\u0161ieho z nich. Ved\u013ea akt\u00edvneho gizma sa zobrazuje UI element, ktor\u00fd je zobrazen\u00fd na obr\u00e1zku ni\u017e\u0161ie. Po\u010das toho ako pou\u017e\u00edvate\u013e prech\u00e1dza cez menu, algoritmus na zobrazovanie gizma je pozastaven\u00fd, aby nedo\u0161lo k tomu, \u017ee ke\u010f pou\u017e\u00edvate\u013e prekro\u010d\u00ed minim\u00e1lnu vzdialenos\u0165 od elementu, potrebn\u00fa pre zobrazenie gizma, samotn\u00e9 gizmo a jeho UI zmizn\u00fa. Samotn\u00e1 kocka gizma je predstavovan\u00e1 skupinou \u00fazkych blokov, ktor\u00e9 s\u00fa zoskupen\u00e9 pod jedn\u00fdm pr\u00e1zdnym elementom, aby bolo mo\u017en\u00e9 ich automaticky \u0161k\u00e1lova\u0165 naraz ako jeden objekt. Rovnako je tomu tak aj v pr\u00edpade gizma pre \u0161k\u00e1lovanie. Layoutovanie grafu je po\u010das transform\u00e1cie objektu prostredn\u00edctvom gizma pozastaven\u00e9, aby sme predi\u0161li zbyto\u010dne n\u00e1ro\u010dn\u00fdm oper\u00e1ci\u00e1m. Gizmo na \u0161k\u00e1lovanie objektu \u00b6 Tento typ gizma umo\u017e\u0148uje \u0161k\u00e1lova\u0165 objekt po r\u00f4znych kombin\u00e1ci\u00e1ch os\u00ed. Pri pou\u017e\u00edvan\u00ed tohto gizma sa okolo objektu zobraz\u00ed 26 ovl\u00e1dac\u00edch kociek, ktor\u00e9 spolu formuj\u00fa cel\u00fa kocku. Uchopen\u00edm a \u0165ahan\u00edm t\u00fdchto kociek je mo\u017en\u00e9 dan\u00fd objekt \u0161k\u00e1lova\u0165. UI \u00b6 Ke\u010f je gizmo akt\u00edvne, zobraz\u00ed sa pri \u0148om samostatn\u00e9 UI, ktor\u00e9 pon\u00faka pou\u017e\u00edvate\u013eovi akcie, s\u00favisiace s dan\u00fdm gizmom. Tie s\u00fa selekcia, deselekcia a odstr\u00e1nenie. Taktie\u017e je mo\u017en\u00e9 prostredn\u00edctvom tohto rozhrania zmeni\u0165 typ gizma. Toto rozhranie sa zobraz\u00ed v\u017edy na bode na hrane gizma, ktor\u00e1 ja k pou\u017e\u00edvate\u013eovej ruke najbli\u017e\u0161ie. Ke\u010f je pou\u017e\u00edvate\u013eova ruka v bl\u00edzkosti tohto rozhrania, jeho pres\u00favanie sa pozastav\u00ed, aby mohol pou\u017e\u00edvate\u013e s UI pracova\u0165 a neuskakovalo pred t\u00fdm pod\u013ea pohybu jeho ruky. (vi\u010f Mura s. 44) Obmedzova\u010de \u2013 bli\u017e\u0161ia \u0161pecifik\u00e1cia \u00b6 Aktu\u00e1lne s\u00fa teda implementovan\u00e9 4 typy obmedzova\u010dov a to: gu\u013ea (sphere) gu\u013eov\u00fd bod (sphere point) kocka (box/cube) doska (plane) Potrebn\u00e9 je poznamena\u0165, \u017ee gu\u013eov\u00fd bod je v skuto\u010dnosti gu\u013ea v malej ve\u013ekosti, \u010do znamen\u00e1, \u017ee v nej nie je miesto pre rozlo\u017eenie objektov, tak\u017ee pri pou\u017eit\u00ed bud\u00fa cez seba. To je dobr\u00e9 v pr\u00edpade, \u017ee potrebujeme zoskupi\u0165 nejak\u00e9 mno\u017estvo objektov bez toho, aby sme ich nesk\u00f4r chceli sk\u00fama\u0165. Obmedzova\u010d m\u00f4\u017ee ma\u0165 3 m\u00f3dy. Prv\u00fdm je negat\u00edvny m\u00f3d, kedy sa objekty vn\u00fatri obmedzova\u010da, dot\u00fdkaj\u00face sa okraja prilepia na okraj zvn\u00fatra. Druh\u00fd m\u00f3d je tak\u00fd, \u017ee s\u00fa tieto objekty v polovici preseknut\u00e9 hranou a teda polovica je vo vn\u00fatri a polovica vonku. Tret\u00ed je pozit\u00edvny m\u00f3d, kedy s\u00fa tieto objekty prilepen\u00e9 na hrane zvonka. Najlep\u0161ie je to mo\u017en\u00e9 pozorova\u0165 na obr\u00e1zku ni\u017e\u0161ie. Technick\u00e1 dokument\u00e1cia \u00b6 Gizm\u00e1 \u00b6 Na nasleduj\u00facom diagrame tried sa nach\u00e1dza \u0161trukt\u00fara prie\u010dinka, v ktorom s\u00fa implementovan\u00e9 gizm\u00e1 (3DSoftviz\\UnityProject\\Assets\\Scripts\\Gizmo) V pr\u00edpade, \u017ee chceme aby bolo mo\u017en\u00e9 s objektom interagova\u0165 prostredn\u00edctvom gizma, mus\u00ed tento objekt implementova\u0165 interface IGizmoInteractable. Ten obsahuje dve met\u00f3dy: getBoundingBoxScale() \u2013 na z\u00e1klade Vector3 ur\u010d\u00ed ve\u013ekos\u0165 po\u017eadovan\u00e9ho gizma, aby bol cie\u013eov\u00fd objekt obalen\u00fd presne getSpawnDistance() \u2013 minim\u00e1lna vzdialenos\u0165 ruky od dan\u00e9ho objektu na to, aby sa gizmo zobrazilo GizmoSpawner skript je vlo\u017een\u00fd v Leap hand modeli. V tomto skripte sa prech\u00e1dzaj\u00fa v\u0161etky interagovate\u013en\u00e9 objekty v sc\u00e9ne a ur\u010d\u00ed najbli\u017e\u0161\u00ed k aktu\u00e1lnej poz\u00edcii ruky. T\u00fdmto sp\u00f4sobom sa docieli, \u017ee v jednom \u010dase sa m\u00f4\u017ee gizmo nach\u00e1dza\u0165 iba nad jedn\u00fdm objektom. GizmoBase skript je vlo\u017een\u00fd do pr\u00e1zdneho rodi\u010dovsk\u00e9ho objektu, v ktorom sa nach\u00e1dzaj\u00fa bloky pre vykreslenie kocky. Tento skript obsluhuje v\u00e4\u010d\u0161inu logiky t\u00fdkaj\u00facej sa giziem. Z\u00e1rove\u0148 si pam\u00e4t\u00e1 cie\u013eov\u00fd objekt (napr\u00edklad uzol) a aktualizuje jeho poz\u00edciu pod\u013ea poz\u00edcie gizma. InteractionBehavior je komponent pripojen\u00fd na kocku gizma a zabezpe\u010duje uchopenie a pohyb pomocou Leap ruky. setNodePosition() je funkcia na vrstve LuaInterface, ktor\u00fa je potrebn\u00e9 zavola\u0165 po skon\u010den\u00ed pos\u00favania objektu pomocou gizma. Obmedzova\u010de \u00b6 Na nasleduj\u00facom diagrame je mo\u017en\u00e9 vidie\u0165 \u0161trukt\u00faru prie\u010dinka RestrictionObjects v Unity projekte (3DSoftviz\\UnityProject\\Assets\\Scripts\\RestrictionObjects) Na druhom diagrame je mo\u017en\u00e9 vidie\u0165 \u0161trukt\u00faru prie\u010dinka Restrictions v GraphCore projekte (3DSoftviz\\CSProjects\\GraphCore\\Restrictions). Testy \u00b6 Testy sa k tejto \u010dasti funkcionality projektu aktu\u00e1lne nenach\u00e1dzaj\u00fa. Je teda potrebn\u00e9 nejak\u00e9 navrhn\u00fa\u0165 a doimplementova\u0165 a n\u00e1sledne bud\u00fa vlo\u017een\u00e9 do tejto dokument\u00e1cie.","title":"\u26d3\ufe0f Obmedzova\u010de a gizm\u00e1"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#-obmedzova\u010de-a-gizm\u00e1","text":"","title":"\u26d3\ufe0f Obmedzova\u010de a gizm\u00e1"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#v\u0161eobecn\u00fd-opis-motiv\u00e1cia","text":"Nat\u00edvne funkcie, ktor\u00e9 sa nach\u00e1dzaj\u00fa v Leap core moduloch pre Unity, poskytuj\u00fa jednoduch\u00fa interakciu rukami, ako napr\u00edklad uchopenie alebo \u0165ahanie objektov, av\u0161ak t\u00e1to funkcionalita je pomerne obmedzen\u00e1. Taktie\u017e tieto moduly \u010dasto nesta\u010dia \u010do sa t\u00fdka presnosti, hlavne v pr\u00edpade tak\u00fdchto rozsiahlych grafov, s ak\u00fdmi v tomto projekte pracujeme. Chceme docieli\u0165 aby pou\u017e\u00edvate\u013e mohol pohodlne a intuit\u00edvne pracova\u0165 s grafom, pr\u00edpadne v bud\u00facnosti s grafmi, pri\u010dom cel\u00e1 interakcia bude zalo\u017een\u00e1 na gest\u00e1ch. Pou\u017e\u00edvate\u013e taktie\u017e potrebuje v ka\u017edom momente pozna\u0165 s ak\u00fdm uzlom, \u010das\u0165ou grafu alebo cel\u00fdm grafom aktu\u00e1lne pracuje. Pr\u00e1ve tu prich\u00e1dzaj\u00fa do \u00favahy gizm\u00e1 a obmedzova\u010de, ktor\u00e9 s\u00fa v projekte implementovan\u00e9. Gizmo je jednoduch\u00fd kv\u00e1der, ktor\u00fd sa zobraz\u00ed okolo objektu v grafe a poskytuje pou\u017e\u00edvate\u013eovi mo\u017enos\u0165 vykon\u00e1va\u0165 nad dan\u00fdm objektom (alebo skupinou objektov) r\u00f4zne transform\u00e1cie ako napr\u00edklad pres\u00favanie, rot\u00e1ciu, \u0161k\u00e1lovanie. Obmedzova\u010d je objekt, ktor\u00fd pom\u00e1ha vybra\u0165 skupinu objektov a re-layoutova\u0165 (reorganizova\u0165) ich. K dispoz\u00edcii s\u00fa aktu\u00e1lne 4 typy a to gu\u013ea, gu\u013eov\u00fd bod, kocka a doska.","title":"V\u0161eobecn\u00fd opis (motiv\u00e1cia)"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#gizm\u00e1---bli\u017e\u0161ia-\u0161pecifik\u00e1cia","text":"Aktu\u00e1lne je v assetoch pre Unity mo\u017en\u00e9 n\u00e1js\u0165 tak\u00e9, ktor\u00e9 podobn\u00fa funkcionalitu poskytuj\u00fa pre v\u00e4\u010d\u0161inu typov objektov, tieto rie\u0161enia sa v\u00e4\u010d\u0161inou spoliehaj\u00fa na shadery, ktor\u00e9 tieto gizm\u00e1 vykresluj\u00fa po\u010das post-processingu, teda potom, \u010do bola cel\u00e1 sc\u00e9na u\u017e d\u00e1vno vykreslen\u00e1. Toto je dobr\u00e9 v pr\u00edpade ovl\u00e1dania my\u0161ou, nako\u013eko my\u0161 bude v\u017edy vykres\u013eovan\u00e1 nad v\u0161etk\u00fdm ostatn\u00fdm. V na\u0161om pr\u00edpade je to v\u0161ak nepou\u017eite\u013en\u00e9, nako\u013eko ruky s\u00fa fyzicky pr\u00edtomn\u00e9 v samotnej sc\u00e9ne a m\u00f4\u017eu interagova\u0165 iba s in\u00fdmi objektami v sc\u00e9ne. V jednoduchosti to znamen\u00e1 to, \u017ee tieto gizm\u00e1 by boli v\u017edy renderovan\u00e9 nad rukami, \u010do by jednozna\u010dne pokazilo ak\u00fako\u013evek simul\u00e1ciu h\u013abky n\u00e1\u0161ho priestoru pre pou\u017e\u00edvate\u013ea. Z poh\u013eadu funkcionality s\u00fa aktu\u00e1lne implementovan\u00e9 dva typy giziem. Gizmo, ktor\u00e9 dok\u00e1\u017ee objektom pohybova\u0165 a rotova\u0165 a gizmo, ktor\u00e9 dok\u00e1\u017ee dan\u00fd objekt \u0161k\u00e1lova\u0165.","title":"Gizm\u00e1 - bli\u017e\u0161ia \u0161pecifik\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#gizmo-na-h\u00fdbanie-a-rot\u00e1ciu-objektu","text":"Tento typ gizma je zobrazen\u00fd v pr\u00edpade pribl\u00ed\u017eenia sa rukou k interagovate\u013en\u00e9mu objektu. Vizu\u00e1lne sa zobraz\u00ed ako skupina bielych hr\u00e1n v tvare kocky okolo dan\u00e9ho objektu. Po zobrazen\u00ed vieme jeho uchopen\u00edm objekt rotova\u0165 alebo pres\u00fava\u0165. V pr\u00edpade, \u017ee je v bl\u00edzkosti ruky viacero objektov, gizmo sa zobraz\u00ed okolo najbli\u017e\u0161ieho z nich. Ved\u013ea akt\u00edvneho gizma sa zobrazuje UI element, ktor\u00fd je zobrazen\u00fd na obr\u00e1zku ni\u017e\u0161ie. Po\u010das toho ako pou\u017e\u00edvate\u013e prech\u00e1dza cez menu, algoritmus na zobrazovanie gizma je pozastaven\u00fd, aby nedo\u0161lo k tomu, \u017ee ke\u010f pou\u017e\u00edvate\u013e prekro\u010d\u00ed minim\u00e1lnu vzdialenos\u0165 od elementu, potrebn\u00fa pre zobrazenie gizma, samotn\u00e9 gizmo a jeho UI zmizn\u00fa. Samotn\u00e1 kocka gizma je predstavovan\u00e1 skupinou \u00fazkych blokov, ktor\u00e9 s\u00fa zoskupen\u00e9 pod jedn\u00fdm pr\u00e1zdnym elementom, aby bolo mo\u017en\u00e9 ich automaticky \u0161k\u00e1lova\u0165 naraz ako jeden objekt. Rovnako je tomu tak aj v pr\u00edpade gizma pre \u0161k\u00e1lovanie. Layoutovanie grafu je po\u010das transform\u00e1cie objektu prostredn\u00edctvom gizma pozastaven\u00e9, aby sme predi\u0161li zbyto\u010dne n\u00e1ro\u010dn\u00fdm oper\u00e1ci\u00e1m.","title":"Gizmo na h\u00fdbanie a rot\u00e1ciu objektu"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#gizmo-na-\u0161k\u00e1lovanie-objektu","text":"Tento typ gizma umo\u017e\u0148uje \u0161k\u00e1lova\u0165 objekt po r\u00f4znych kombin\u00e1ci\u00e1ch os\u00ed. Pri pou\u017e\u00edvan\u00ed tohto gizma sa okolo objektu zobraz\u00ed 26 ovl\u00e1dac\u00edch kociek, ktor\u00e9 spolu formuj\u00fa cel\u00fa kocku. Uchopen\u00edm a \u0165ahan\u00edm t\u00fdchto kociek je mo\u017en\u00e9 dan\u00fd objekt \u0161k\u00e1lova\u0165.","title":"Gizmo na \u0161k\u00e1lovanie objektu"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#ui","text":"Ke\u010f je gizmo akt\u00edvne, zobraz\u00ed sa pri \u0148om samostatn\u00e9 UI, ktor\u00e9 pon\u00faka pou\u017e\u00edvate\u013eovi akcie, s\u00favisiace s dan\u00fdm gizmom. Tie s\u00fa selekcia, deselekcia a odstr\u00e1nenie. Taktie\u017e je mo\u017en\u00e9 prostredn\u00edctvom tohto rozhrania zmeni\u0165 typ gizma. Toto rozhranie sa zobraz\u00ed v\u017edy na bode na hrane gizma, ktor\u00e1 ja k pou\u017e\u00edvate\u013eovej ruke najbli\u017e\u0161ie. Ke\u010f je pou\u017e\u00edvate\u013eova ruka v bl\u00edzkosti tohto rozhrania, jeho pres\u00favanie sa pozastav\u00ed, aby mohol pou\u017e\u00edvate\u013e s UI pracova\u0165 a neuskakovalo pred t\u00fdm pod\u013ea pohybu jeho ruky. (vi\u010f Mura s. 44)","title":"UI"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#obmedzova\u010de--bli\u017e\u0161ia-\u0161pecifik\u00e1cia","text":"Aktu\u00e1lne s\u00fa teda implementovan\u00e9 4 typy obmedzova\u010dov a to: gu\u013ea (sphere) gu\u013eov\u00fd bod (sphere point) kocka (box/cube) doska (plane) Potrebn\u00e9 je poznamena\u0165, \u017ee gu\u013eov\u00fd bod je v skuto\u010dnosti gu\u013ea v malej ve\u013ekosti, \u010do znamen\u00e1, \u017ee v nej nie je miesto pre rozlo\u017eenie objektov, tak\u017ee pri pou\u017eit\u00ed bud\u00fa cez seba. To je dobr\u00e9 v pr\u00edpade, \u017ee potrebujeme zoskupi\u0165 nejak\u00e9 mno\u017estvo objektov bez toho, aby sme ich nesk\u00f4r chceli sk\u00fama\u0165. Obmedzova\u010d m\u00f4\u017ee ma\u0165 3 m\u00f3dy. Prv\u00fdm je negat\u00edvny m\u00f3d, kedy sa objekty vn\u00fatri obmedzova\u010da, dot\u00fdkaj\u00face sa okraja prilepia na okraj zvn\u00fatra. Druh\u00fd m\u00f3d je tak\u00fd, \u017ee s\u00fa tieto objekty v polovici preseknut\u00e9 hranou a teda polovica je vo vn\u00fatri a polovica vonku. Tret\u00ed je pozit\u00edvny m\u00f3d, kedy s\u00fa tieto objekty prilepen\u00e9 na hrane zvonka. Najlep\u0161ie je to mo\u017en\u00e9 pozorova\u0165 na obr\u00e1zku ni\u017e\u0161ie.","title":"Obmedzova\u010de \u2013 bli\u017e\u0161ia \u0161pecifik\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#technick\u00e1-dokument\u00e1cia","text":"","title":"Technick\u00e1 dokument\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#gizm\u00e1","text":"Na nasleduj\u00facom diagrame tried sa nach\u00e1dza \u0161trukt\u00fara prie\u010dinka, v ktorom s\u00fa implementovan\u00e9 gizm\u00e1 (3DSoftviz\\UnityProject\\Assets\\Scripts\\Gizmo) V pr\u00edpade, \u017ee chceme aby bolo mo\u017en\u00e9 s objektom interagova\u0165 prostredn\u00edctvom gizma, mus\u00ed tento objekt implementova\u0165 interface IGizmoInteractable. Ten obsahuje dve met\u00f3dy: getBoundingBoxScale() \u2013 na z\u00e1klade Vector3 ur\u010d\u00ed ve\u013ekos\u0165 po\u017eadovan\u00e9ho gizma, aby bol cie\u013eov\u00fd objekt obalen\u00fd presne getSpawnDistance() \u2013 minim\u00e1lna vzdialenos\u0165 ruky od dan\u00e9ho objektu na to, aby sa gizmo zobrazilo GizmoSpawner skript je vlo\u017een\u00fd v Leap hand modeli. V tomto skripte sa prech\u00e1dzaj\u00fa v\u0161etky interagovate\u013en\u00e9 objekty v sc\u00e9ne a ur\u010d\u00ed najbli\u017e\u0161\u00ed k aktu\u00e1lnej poz\u00edcii ruky. T\u00fdmto sp\u00f4sobom sa docieli, \u017ee v jednom \u010dase sa m\u00f4\u017ee gizmo nach\u00e1dza\u0165 iba nad jedn\u00fdm objektom. GizmoBase skript je vlo\u017een\u00fd do pr\u00e1zdneho rodi\u010dovsk\u00e9ho objektu, v ktorom sa nach\u00e1dzaj\u00fa bloky pre vykreslenie kocky. Tento skript obsluhuje v\u00e4\u010d\u0161inu logiky t\u00fdkaj\u00facej sa giziem. Z\u00e1rove\u0148 si pam\u00e4t\u00e1 cie\u013eov\u00fd objekt (napr\u00edklad uzol) a aktualizuje jeho poz\u00edciu pod\u013ea poz\u00edcie gizma. InteractionBehavior je komponent pripojen\u00fd na kocku gizma a zabezpe\u010duje uchopenie a pohyb pomocou Leap ruky. setNodePosition() je funkcia na vrstve LuaInterface, ktor\u00fa je potrebn\u00e9 zavola\u0165 po skon\u010den\u00ed pos\u00favania objektu pomocou gizma.","title":"Gizm\u00e1"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#obmedzova\u010de","text":"Na nasleduj\u00facom diagrame je mo\u017en\u00e9 vidie\u0165 \u0161trukt\u00faru prie\u010dinka RestrictionObjects v Unity projekte (3DSoftviz\\UnityProject\\Assets\\Scripts\\RestrictionObjects) Na druhom diagrame je mo\u017en\u00e9 vidie\u0165 \u0161trukt\u00faru prie\u010dinka Restrictions v GraphCore projekte (3DSoftviz\\CSProjects\\GraphCore\\Restrictions).","title":"Obmedzova\u010de"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/obmedzovace/#testy","text":"Testy sa k tejto \u010dasti funkcionality projektu aktu\u00e1lne nenach\u00e1dzaj\u00fa. Je teda potrebn\u00e9 nejak\u00e9 navrhn\u00fa\u0165 a doimplementova\u0165 a n\u00e1sledne bud\u00fa vlo\u017een\u00e9 do tejto dokument\u00e1cie.","title":"Testy"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/","text":"\ud83d\udcca UML diagramy \u00b6 Motiv\u00e1cia \u00b6 Pou\u017e\u00edvate\u013e programu by mal ma\u0165 mo\u017enos\u0165 zobrazi\u0165 si r\u00f4zne metriky a UML diagramy analyzovan\u00e9ho k\u00f3du. Dva z\u00e1kladn\u00e9 diagramy, ktor\u00e9 chceme generova\u0165 s\u00fa Class diagram a Sequence diagram. N\u00e1vod na pou\u017eitie \u00b6 na\u010d\u00edtame graf moonscript projektu ( n\u00e1vod ) my\u0161ou ozna\u010d\u00edme triedu (\u010derven\u00e1) alebo met\u00f3du (zelen\u00e1) stla\u010d\u00edme kl\u00e1vesu 5 Technick\u00e1 dokument\u00e1cia \u00b6 V aktu\u00e1lnom stave je mo\u017en\u00e9 generova\u0165 Class diagram a Sequence diagram pre Moonscript k\u00f3dy. Implement\u00e1cia je realizovan\u00e1 v module luameg a v lua \u010dasti 3D Softvizu ( App/main.lua a softviz/graph_handler ). Luameg \u00b6 Modul luameg.plantuml exportuje pr\u00edslu\u0161n\u00e9 funkcie pre generovanie Class a Sequence diagramov bu\u010f v plantuml txt alebo priamo svg. Pri generovan\u00ed rekurz\u00edvne preh\u013ead\u00e1va graf od zvolen\u00e9ho uzla a generuje plantuml textov\u00fd s\u00fabor. N\u00e1sledne je spusten\u00fd plantuml.jar s t\u00fdmto textov\u00fdm s\u00faborom na vstupe a vygeneruje svg s\u00fabor. Obsah svg s\u00faboru je na\u010d\u00edtan\u00fd do premennej, s\u00fabory odstr\u00e1nen\u00e9 a hodota navr\u00e1ten\u00e1. Pre zobrazenie grafu s\u00fa generovan\u00e9 uzly method_sequenceDiagram a class_ClassDiagram . Tieto uzly sl\u00fa\u017eia pre layoutovanie, aby boli vhodne umiestnen\u00e9 v priestore. Lua \u010das\u0165 3DSoftVizu \u00b6 V App/main.lua s\u00fa dve funkcie pre generovanie Class a Sequence diagramov. Ako argument maj\u00fa id grafu a id uzla. Ak je tento uzol typu method_sequenceDiagram alebo class_ClassDiagram , vyh\u013ead\u00e1 sa k nim prisl\u00fachaj\u00faci class / method uzol. Nasleduje volanie rovnomennej funkcie v graph_handler -i, v ktorom je referencia na graf. Unity \u00b6 Unity obsahuje webov\u00fd prehliada\u010d ZFBrowser , v ktorom sa UML diagramy zobrazuj\u00fa. Hlavn\u00e1 trieda, ktor\u00e1 obsluhuje tento prehliada\u010d je BrowsersManager , ktor\u00e1 vyh\u013ead\u00e1va vy\u0161\u0161ie spom\u00ednan\u00e9 layoutovacie uzly a pre \u0148e in\u0161tanciuje pr\u00edslu\u0161n\u00e9 prehliada\u010de. Prehliada\u010de s\u00fa spo\u010diatku skryt\u00e9, zobrazia sa po ozna\u010den\u00ed pr\u00edslu\u0161neho uzla a stla\u010den\u00ed \u010d\u00edselnej kl\u00e1vesy 1 a\u017e 5, pre UML diagramy to je pr\u00e1ve kl\u00e1vesa 5. Ka\u017ed\u00fd typ prehliada\u010da m\u00e1 svoj 'skript', ktor\u00fd obsluhuje svoju in\u0161tanciu ZFBrowser -a a prefabu. UmlBrowserScript pri aktiv\u00e1cii (zobrazen\u00ed) prehliada\u010da spust\u00ed funkciu generovania diagramu v svg form\u00e1te a string posunie do prehliada\u010da. S\u00favisiace s\u00fabory \u00b6 UnityProject/Assets/Scripts/Browser/UmlBrowserScript.cs UnityProject/Assets/Scripts/Browser/BrowsersManager.cs UnityProject/BrowserAssets/ resources/scripts/app/main.lua resources/scripts/module/softviz/graph_handler.lua","title":"\ud83d\udcca UML diagramy"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#-uml-diagramy","text":"","title":"\ud83d\udcca UML diagramy"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#motiv\u00e1cia","text":"Pou\u017e\u00edvate\u013e programu by mal ma\u0165 mo\u017enos\u0165 zobrazi\u0165 si r\u00f4zne metriky a UML diagramy analyzovan\u00e9ho k\u00f3du. Dva z\u00e1kladn\u00e9 diagramy, ktor\u00e9 chceme generova\u0165 s\u00fa Class diagram a Sequence diagram.","title":"Motiv\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#n\u00e1vod-na-pou\u017eitie","text":"na\u010d\u00edtame graf moonscript projektu ( n\u00e1vod ) my\u0161ou ozna\u010d\u00edme triedu (\u010derven\u00e1) alebo met\u00f3du (zelen\u00e1) stla\u010d\u00edme kl\u00e1vesu 5","title":"N\u00e1vod na pou\u017eitie"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#technick\u00e1-dokument\u00e1cia","text":"V aktu\u00e1lnom stave je mo\u017en\u00e9 generova\u0165 Class diagram a Sequence diagram pre Moonscript k\u00f3dy. Implement\u00e1cia je realizovan\u00e1 v module luameg a v lua \u010dasti 3D Softvizu ( App/main.lua a softviz/graph_handler ).","title":"Technick\u00e1 dokument\u00e1cia"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#luameg","text":"Modul luameg.plantuml exportuje pr\u00edslu\u0161n\u00e9 funkcie pre generovanie Class a Sequence diagramov bu\u010f v plantuml txt alebo priamo svg. Pri generovan\u00ed rekurz\u00edvne preh\u013ead\u00e1va graf od zvolen\u00e9ho uzla a generuje plantuml textov\u00fd s\u00fabor. N\u00e1sledne je spusten\u00fd plantuml.jar s t\u00fdmto textov\u00fdm s\u00faborom na vstupe a vygeneruje svg s\u00fabor. Obsah svg s\u00faboru je na\u010d\u00edtan\u00fd do premennej, s\u00fabory odstr\u00e1nen\u00e9 a hodota navr\u00e1ten\u00e1. Pre zobrazenie grafu s\u00fa generovan\u00e9 uzly method_sequenceDiagram a class_ClassDiagram . Tieto uzly sl\u00fa\u017eia pre layoutovanie, aby boli vhodne umiestnen\u00e9 v priestore.","title":"Luameg"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#lua-\u010das\u0165-3dsoftvizu","text":"V App/main.lua s\u00fa dve funkcie pre generovanie Class a Sequence diagramov. Ako argument maj\u00fa id grafu a id uzla. Ak je tento uzol typu method_sequenceDiagram alebo class_ClassDiagram , vyh\u013ead\u00e1 sa k nim prisl\u00fachaj\u00faci class / method uzol. Nasleduje volanie rovnomennej funkcie v graph_handler -i, v ktorom je referencia na graf.","title":"Lua \u010das\u0165 3DSoftVizu"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#unity","text":"Unity obsahuje webov\u00fd prehliada\u010d ZFBrowser , v ktorom sa UML diagramy zobrazuj\u00fa. Hlavn\u00e1 trieda, ktor\u00e1 obsluhuje tento prehliada\u010d je BrowsersManager , ktor\u00e1 vyh\u013ead\u00e1va vy\u0161\u0161ie spom\u00ednan\u00e9 layoutovacie uzly a pre \u0148e in\u0161tanciuje pr\u00edslu\u0161n\u00e9 prehliada\u010de. Prehliada\u010de s\u00fa spo\u010diatku skryt\u00e9, zobrazia sa po ozna\u010den\u00ed pr\u00edslu\u0161neho uzla a stla\u010den\u00ed \u010d\u00edselnej kl\u00e1vesy 1 a\u017e 5, pre UML diagramy to je pr\u00e1ve kl\u00e1vesa 5. Ka\u017ed\u00fd typ prehliada\u010da m\u00e1 svoj 'skript', ktor\u00fd obsluhuje svoju in\u0161tanciu ZFBrowser -a a prefabu. UmlBrowserScript pri aktiv\u00e1cii (zobrazen\u00ed) prehliada\u010da spust\u00ed funkciu generovania diagramu v svg form\u00e1te a string posunie do prehliada\u010da.","title":"Unity"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/uml_diagramy/#s\u00favisiace-s\u00fabory","text":"UnityProject/Assets/Scripts/Browser/UmlBrowserScript.cs UnityProject/Assets/Scripts/Browser/BrowsersManager.cs UnityProject/BrowserAssets/ resources/scripts/app/main.lua resources/scripts/module/softviz/graph_handler.lua","title":"S\u00favisiace s\u00fabory"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_lua3Dsoftviz/","text":"Lua v 3DSoftViz \u00b6 Hlavn\u00fdm Lua s\u00faborom na interakciu s vy\u0161\u0161\u00edmi vrstvami a pr\u00e1cu s grafom je s\u00fabor resources/scripts/app/main.lua . V tomto s\u00fabore sa nach\u00e1dza funkcia loadGraph() , ktor\u00e1 je volan\u00e1 z vy\u0161\u0161\u00edch vrstiev, a sl\u00fa\u017ei na na\u010d\u00edtanie grafu. Parametre funkcie m\u00f4\u017eeme vidie\u0165 ni\u017e\u0161ie. Ide preva\u017ene o \u0161pecifik\u00e1ciu grafu a konfigur\u00e1ciu, v akej sa m\u00e1 graf na\u010d\u00edta\u0165. Vo funkcii loadGraph() si m\u00f4\u017eeme v\u0161imn\u00fa\u0165 vytvorenie dvoch objektov - layoutFactory a graphHandler , ktor\u00e9 si pop\u00ed\u0161eme v \u010fal\u0161ej \u010dasti. Funkcia loadGraph() prid\u00e1 do po\u013ea loadedGraphs graphHandler s pr\u00edslu\u0161nou konfigur\u00e1ciou. function loadGraph ( path , extractor , algorithm , buildingLayouter , functionMode , variableMode ) local algorithm = algorithm local optionalSetup = { buildingLayouterType = buildingLayouter , functionMode = functionMode , variableMode = variableMode } local factory = layoutFactory . new ( algorithm , optionalSetup ) local graphHandler = graph_handler . new () if extractor == 'EvoGraph' then graphHandler : extractEvoGraph ( graphManager : findFirstGraph (), graphManager : findLastGraph (), factory ) else graphHandler : extractGraph ( path , extractor , factory ) end loadedGraphs [ inc ()] = graphHandler end resources/scripts/module/softviz/graph_handler.lua je modul, ktor\u00fd sl\u00fa\u017ei na pr\u00e1cu s grafom pri na\u010d\u00edtavan\u00ed. Funkcia extranctGraph() , ktor\u00fa m\u00f4\u017eeme vidie\u0165 ni\u017e\u0161ie je volan\u00e1 pri prid\u00e1van\u00ed graphHandleru do vy\u0161\u0161ie spom\u00ednan\u00e9ho po\u013ea grafov. T\u00e1to funkcia na vstupe prijme cestu ku grafu, extraktor grafu a tzv. layoutFactory , ktor\u00fa si pop\u00ed\u0161eme ni\u017e\u0161ie. Toto s\u00fa v\u0161etko parametre konfigur\u00e1cie, ktor\u00e9 sa nastavuj\u00fa v Unity \u010dasti a sem sa pre\u0161\u00edria cez jednotliv\u00e9 vrstvy pomocou volan\u00ed funkci\u00ed. V tejto funkcii sa vol\u00e1 funkcia z modulu Projects/LuaDependencies/luadb/src/luadb/extraction/extractor.lua , v ktorej prebieha samotn\u00e1 extrakcia a na\u010d\u00edtavanie grafu. Nach\u00e1dzaj\u00fa sa tu funkcie, ktor\u00e9 zistia n\u00e1zvy funkci\u00ed v na\u010d\u00edtavanom grafe, ich volania, volania modulov, glob\u00e1lne volania a r\u00f4zne in\u00e9 parametre zdrojov\u00e9ho k\u00f3du. Tieto n\u00e1sledne poprep\u00e1jaj\u00fa do grafu. Nakoniec je zavolan\u00e1 funkcia loadFromLuadbGraph() , ktor\u00fa si pop\u00ed\u0161eme v \u010fal\u0161ej \u010dasti. function pGraphHandler : extractGraph ( absolutePath , graphPicker , layoutFactory ) self . layoutFactory = layoutFactory local luadbGraph = {} utils . logger : setLevel ( utils . logging . INFO ) utils . logger : info ( \"Started extration\" ) if ( graphPicker == \"FunctionCallGraph\" ) then luadbGraph = artifactsExtractor . extract ( absolutePath , self . astMan ) elseif ( graphPicker == \"ModuleGraph\" ) then luadbGraph = moduleExtractor . extract ( absolutePath , self . astMan ) elseif ( graphPicker == \"MooscriptGraph\" ) then luadbGraph = moonscriptExtractor . getGraphProject ( absolutePath , self . astMan ) else utils . logger : info ( \"graphPicker set to unknown value\" ) end self : loadFromLuadbGraph ( luadbGraph ) end Vo funkcii loadFromLuadbGraph() je volan\u00e1 funkcia addGraph() z modulu Projects/LuaDependencies/luadb/src/luadb/manager/graph/manager.lua , ktor\u00e1 sl\u00fa\u017ei na jednoduch\u0161ie mana\u017eovanie grafu. T\u00e1to funkcia vytvor\u00ed z na\u010d\u00edtan\u00e9ho grafu dvoji\u010dku graphId - graph , ktor\u00e1 je reprezentovan\u00e1 objektom GraphNode . N\u00e1sledne prebehne vo funkcii initializeGraph() inicializ\u00e1cia grafu, kde sa jednotliv\u00fdm vrcholom a hran\u00e1m nastavia n\u00e1zvy a in\u00e9 parametre. Ako posledn\u00e1 sa zavol\u00e1 funkcia layoutManager:initialize() modulu resources/scripts/module/layouter/layout_manager.lua , ktor\u00fa si op\u00ed\u0161eme ni\u017e\u0161ie. function pGraphHandler : loadFromLuadbGraph ( luadbGraph ) graphManager : addGraph ( luadbGraph ) self . graph = luadbGraph self : initializeGraph () self . layoutManager = layoutManager . new ( self . graph , self . layoutFactory ) self . layoutManager : initialize () utils . logger : info ( \"Extraction successfully finished\" ) self . layoutManager : updateVisualMapping ( luadbGraph . modified_nodes ) end Poslednou d\u00f4le\u017eitou funkciou je spom\u00ednan\u00e1 funkcia initialize() z modulu resources/scripts/module/layout_manager.lua , ktor\u00e1 grafu nastav\u00ed parametre potrebn\u00e9 na spr\u00e1vny beh programu. Nastavuje v prvom rade obmedzenia, \u010falej nastavuje layoutova\u010d na z\u00e1klade po\u017eadovan\u00e9ho layoutovacieho algoritmu a aktualizuje uzly grafu. function pLayoutManager : initialize () utils . logger : info ( \"LayoutManager::Initialize\" ) if self . currentAlgorithm ~= nil then self . currentAlgorithm : terminate () self . currentAlgorithm = nil end if ( self . restrictionManager == nil ) then self . restrictionManager = RestrictionManager . new () end self . currentAlgorithm = self . layoutFactory : getLayouter ( self . graph , self . restrictionManager ) self . currentAlgorithm : initialize () self : updateNodes () self . restrictionManager : createRestriction ( DefaultRestriction , restrictions . Default ()) self : setRestrictionToAllNodes ( DefaultRestriction ) end Po vykonan\u00ed t\u00fdchto funkci\u00ed s\u00fa v poli loadedGraphs v s\u00fabore main.lua na\u010d\u00edtan\u00e9 grafy, ku ktor\u00fdm sa d\u00e1 pristupova\u0165 cez id grafu. Po tejto prvotnej inicializ\u00e1cii vedia vy\u0161\u0161ie vrstvy projektu pristupova\u0165 ku po\u013eu a vykon\u00e1va\u0165 nad n\u00edm oper\u00e1cie, ako napr\u00edklad getGraph() , getLayoutManager() , setNodeColor() , a in\u00e9.","title":"Lua v 3DSoftViz"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_lua3Dsoftviz/#lua-v-3dsoftviz","text":"Hlavn\u00fdm Lua s\u00faborom na interakciu s vy\u0161\u0161\u00edmi vrstvami a pr\u00e1cu s grafom je s\u00fabor resources/scripts/app/main.lua . V tomto s\u00fabore sa nach\u00e1dza funkcia loadGraph() , ktor\u00e1 je volan\u00e1 z vy\u0161\u0161\u00edch vrstiev, a sl\u00fa\u017ei na na\u010d\u00edtanie grafu. Parametre funkcie m\u00f4\u017eeme vidie\u0165 ni\u017e\u0161ie. Ide preva\u017ene o \u0161pecifik\u00e1ciu grafu a konfigur\u00e1ciu, v akej sa m\u00e1 graf na\u010d\u00edta\u0165. Vo funkcii loadGraph() si m\u00f4\u017eeme v\u0161imn\u00fa\u0165 vytvorenie dvoch objektov - layoutFactory a graphHandler , ktor\u00e9 si pop\u00ed\u0161eme v \u010fal\u0161ej \u010dasti. Funkcia loadGraph() prid\u00e1 do po\u013ea loadedGraphs graphHandler s pr\u00edslu\u0161nou konfigur\u00e1ciou. function loadGraph ( path , extractor , algorithm , buildingLayouter , functionMode , variableMode ) local algorithm = algorithm local optionalSetup = { buildingLayouterType = buildingLayouter , functionMode = functionMode , variableMode = variableMode } local factory = layoutFactory . new ( algorithm , optionalSetup ) local graphHandler = graph_handler . new () if extractor == 'EvoGraph' then graphHandler : extractEvoGraph ( graphManager : findFirstGraph (), graphManager : findLastGraph (), factory ) else graphHandler : extractGraph ( path , extractor , factory ) end loadedGraphs [ inc ()] = graphHandler end resources/scripts/module/softviz/graph_handler.lua je modul, ktor\u00fd sl\u00fa\u017ei na pr\u00e1cu s grafom pri na\u010d\u00edtavan\u00ed. Funkcia extranctGraph() , ktor\u00fa m\u00f4\u017eeme vidie\u0165 ni\u017e\u0161ie je volan\u00e1 pri prid\u00e1van\u00ed graphHandleru do vy\u0161\u0161ie spom\u00ednan\u00e9ho po\u013ea grafov. T\u00e1to funkcia na vstupe prijme cestu ku grafu, extraktor grafu a tzv. layoutFactory , ktor\u00fa si pop\u00ed\u0161eme ni\u017e\u0161ie. Toto s\u00fa v\u0161etko parametre konfigur\u00e1cie, ktor\u00e9 sa nastavuj\u00fa v Unity \u010dasti a sem sa pre\u0161\u00edria cez jednotliv\u00e9 vrstvy pomocou volan\u00ed funkci\u00ed. V tejto funkcii sa vol\u00e1 funkcia z modulu Projects/LuaDependencies/luadb/src/luadb/extraction/extractor.lua , v ktorej prebieha samotn\u00e1 extrakcia a na\u010d\u00edtavanie grafu. Nach\u00e1dzaj\u00fa sa tu funkcie, ktor\u00e9 zistia n\u00e1zvy funkci\u00ed v na\u010d\u00edtavanom grafe, ich volania, volania modulov, glob\u00e1lne volania a r\u00f4zne in\u00e9 parametre zdrojov\u00e9ho k\u00f3du. Tieto n\u00e1sledne poprep\u00e1jaj\u00fa do grafu. Nakoniec je zavolan\u00e1 funkcia loadFromLuadbGraph() , ktor\u00fa si pop\u00ed\u0161eme v \u010fal\u0161ej \u010dasti. function pGraphHandler : extractGraph ( absolutePath , graphPicker , layoutFactory ) self . layoutFactory = layoutFactory local luadbGraph = {} utils . logger : setLevel ( utils . logging . INFO ) utils . logger : info ( \"Started extration\" ) if ( graphPicker == \"FunctionCallGraph\" ) then luadbGraph = artifactsExtractor . extract ( absolutePath , self . astMan ) elseif ( graphPicker == \"ModuleGraph\" ) then luadbGraph = moduleExtractor . extract ( absolutePath , self . astMan ) elseif ( graphPicker == \"MooscriptGraph\" ) then luadbGraph = moonscriptExtractor . getGraphProject ( absolutePath , self . astMan ) else utils . logger : info ( \"graphPicker set to unknown value\" ) end self : loadFromLuadbGraph ( luadbGraph ) end Vo funkcii loadFromLuadbGraph() je volan\u00e1 funkcia addGraph() z modulu Projects/LuaDependencies/luadb/src/luadb/manager/graph/manager.lua , ktor\u00e1 sl\u00fa\u017ei na jednoduch\u0161ie mana\u017eovanie grafu. T\u00e1to funkcia vytvor\u00ed z na\u010d\u00edtan\u00e9ho grafu dvoji\u010dku graphId - graph , ktor\u00e1 je reprezentovan\u00e1 objektom GraphNode . N\u00e1sledne prebehne vo funkcii initializeGraph() inicializ\u00e1cia grafu, kde sa jednotliv\u00fdm vrcholom a hran\u00e1m nastavia n\u00e1zvy a in\u00e9 parametre. Ako posledn\u00e1 sa zavol\u00e1 funkcia layoutManager:initialize() modulu resources/scripts/module/layouter/layout_manager.lua , ktor\u00fa si op\u00ed\u0161eme ni\u017e\u0161ie. function pGraphHandler : loadFromLuadbGraph ( luadbGraph ) graphManager : addGraph ( luadbGraph ) self . graph = luadbGraph self : initializeGraph () self . layoutManager = layoutManager . new ( self . graph , self . layoutFactory ) self . layoutManager : initialize () utils . logger : info ( \"Extraction successfully finished\" ) self . layoutManager : updateVisualMapping ( luadbGraph . modified_nodes ) end Poslednou d\u00f4le\u017eitou funkciou je spom\u00ednan\u00e1 funkcia initialize() z modulu resources/scripts/module/layout_manager.lua , ktor\u00e1 grafu nastav\u00ed parametre potrebn\u00e9 na spr\u00e1vny beh programu. Nastavuje v prvom rade obmedzenia, \u010falej nastavuje layoutova\u010d na z\u00e1klade po\u017eadovan\u00e9ho layoutovacieho algoritmu a aktualizuje uzly grafu. function pLayoutManager : initialize () utils . logger : info ( \"LayoutManager::Initialize\" ) if self . currentAlgorithm ~= nil then self . currentAlgorithm : terminate () self . currentAlgorithm = nil end if ( self . restrictionManager == nil ) then self . restrictionManager = RestrictionManager . new () end self . currentAlgorithm = self . layoutFactory : getLayouter ( self . graph , self . restrictionManager ) self . currentAlgorithm : initialize () self : updateNodes () self . restrictionManager : createRestriction ( DefaultRestriction , restrictions . Default ()) self : setRestrictionToAllNodes ( DefaultRestriction ) end Po vykonan\u00ed t\u00fdchto funkci\u00ed s\u00fa v poli loadedGraphs v s\u00fabore main.lua na\u010d\u00edtan\u00e9 grafy, ku ktor\u00fdm sa d\u00e1 pristupova\u0165 cez id grafu. Po tejto prvotnej inicializ\u00e1cii vedia vy\u0161\u0161ie vrstvy projektu pristupova\u0165 ku po\u013eu a vykon\u00e1va\u0165 nad n\u00edm oper\u00e1cie, ako napr\u00edklad getGraph() , getLayoutManager() , setNodeColor() , a in\u00e9.","title":"Lua v 3DSoftViz"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luadb/","text":"LuaDB \u00b6 Logika priamo s\u00favisej\u00faca s tvorbou grafu je rozdelen\u00e1 v s\u00faboroch nach\u00e1dzaj\u00facich sa v dvoch prie\u010dinkoch a to src/luadb/extraction/* a src/luadb/hypergraph/* . Samotn\u00e9 hrany, uzly, ich v\u00fdskyty a graf s\u00fa definovan\u00e9 v jednlotliv\u00fdch .lua s\u00faboroch v prie\u010dinku src/luadb/hypergraph/ , ktor\u00e9 nes\u00fa rovnak\u00e9 n\u00e1zvy ako ako to, \u010do definuj\u00fa. (tj. edge, node, incidence a graph) S\u00fa v nich definovan\u00e9 nielen samotn\u00e9 objekty a ich kon\u0161truktory, ale i z\u00e1kladn\u00e9 oper\u00e1cie priamo s\u00favisej\u00face s nimi, ako napr\u00edklad funkcie na pridanie hr\u00e1n, uzlov a podobne. Napr\u00edklad k\u00f3d ni\u017e\u0161ie je mo\u017en\u00e9 zavola\u0165 nad hranou a funkcia vracia inform\u00e1ciu o tom, \u010di ide o orientovan\u00fa hranu. function pEdge : isOriented () return self . orientation and self . orientation == \"Oriented\" and true or false ; end Okrem toho obsahuj\u00fa funkcie aj na vyh\u013eadanie dan\u00fdch objektov pod\u013ea zadan\u00e9ho argumentu, ktor\u00fdm s\u00fa napr\u00edklad meno alebo typ. V\u00e4\u010d\u0161ina tak\u00fdchto funkci\u00ed sa nach\u00e1dza v s\u00fabore graph.lua . Napr\u00edklad funkcia ni\u017e\u0161ie zavolan\u00e1 nad ur\u010dit\u00fdm grafom s argumentom typ vr\u00e1ti v\u0161etky uzly v danom grafe dan\u00e9ho typu. -- get all nodes with selected type function pGraph : findNodesByType ( type ) local occurrences = {} for i , node in pairs ( self . nodes ) do if node . meta . type and ( node . meta . type == type ) then table.insert ( occurrences , node ) end end return occurrences end V prie\u010dinku src/luadb/extraction sa extrahuje graf z lua s\u00faborov a to n\u00e1sledovne. Najsk\u00f4r je nutn\u00e9 z\u00edska\u0165 lua s\u00fabory zo zadanej cesty. T\u00e1to funkcionalita sa nach\u00e1dza v s\u00fabore luadb/extraction/filestree/extractor.lua . Najsk\u00f4r sa na\u010d\u00edta cesta, skontroluje sa, \u010di je dan\u00e1 cesta string a z nej sa n\u00e1sledne vystrihne posledn\u00e1 \u010das\u0165 - meno prie\u010dinku. Ak ide o \u00faplne prv\u00e9 volanie funkcie, vytvor\u00fd sa root uzol. V \u010fal\u0161ej funkcii sa cyklom rekurz\u00edvne preh\u013ead\u00e1vaj\u00fa s\u00fabory dan\u00e9ho prie\u010dinka, pri\u010dom ak s\u00fabor v prie\u010dinku je prie\u010dinok, tak sa do mno\u017einy lua-uzlov v grafe prid\u00e1 uzol typu prie\u010dinok (directory) a preh\u013ead\u00e1vanie sa pos\u00fava hlb\u0161ie Ak s\u00fabor nebol prie\u010dinok tak sa e\u0161te over\u00ed, \u010di ide o .lua s\u00fabor a ak \u00e1no prid\u00e1 sa do mno\u017einy lua-uzlov v grafe s typom s\u00fabor (file). Ako posledn\u00e9 sa vytvor\u00ed hrana medzi s\u00faborom a jeho rodi\u010dom. Pri prvo\u00farov\u0148ovom volan\u00ed je to novovytvoren\u00fd root, \u010di\u017ee rodi\u010dovk\u00fd repozit\u00e1r. V pr\u00edpade, \u017ee u\u017e bola zavolan\u00e1 funkcia rekurz\u00edvne, ako argument jej bol poslan\u00fd aktu\u00e1lne iterovan\u00fd uzol (s\u00fabor), tak je hrane priraden\u00fd ako rodi\u010d repozit\u00e1r s ktor\u00fdm bola funkcia volan\u00e1. V poslednom kroku sa do grafu prid\u00e1 uzol a jeho hrana. local function extractFilesTree ( graph , path , parent ) -- root node if not parent then local newNode = hypergraph . node . new () newNode . data . name = getNameFromPath ( path , \"/\" ) newNode . data . path = path newNode . meta = newNode . meta or {} newNode . meta . type = \"directory\" graph : addNode ( newNode ) parent = newNode end for file in lfs . dir ( path ) do if file ~= \".\" and file ~= \"..\" and not utils . isHidden ( file ) then local fullPath = path .. '/' .. file local attr = lfs . attributes ( fullPath ) assert ( type ( attr ) == \"table\" ) -- new node local newNode = hypergraph . node . new () newNode . meta = newNode . meta or {} if attr . mode == \"directory\" then newNode . data . name = file newNode . data . path = fullPath newNode . meta . type = \"directory\" -- recursive call extractFilesTree ( graph , fullPath , newNode ) else newNode . data . name = file newNode . data . path = fullPath newNode . meta . type = \"file\" graph . luaFileNodes = graph . luaFileNodes or {} if utils . isLuaFile ( file ) then table.insert ( graph . luaFileNodes , newNode ) end end -- new edge local newEdge = hypergraph . edge . new () newEdge . label = \"Subfile\" newEdge : addSource ( parent ) newEdge : addTarget ( newNode ) newEdge : setAsOriented () graph : addNode ( newNode ) graph : addEdge ( newEdge ) end end end S\u00fabor luadb/extraction/functioncalls/extractor.lua obsahuje funkcie, ktor\u00e9 extrahuj\u00fa funkcie a volania, pri\u010dom ich delia na glob\u00e1lne a modulov\u00e9. Ako prv\u00e9 sa z\u00edskaj\u00fa v\u0161etky funkcie z dan\u00e9ho stromu, ktor\u00e9 sa potom v cykle prejd\u00fa a pre ka\u017ed\u00fa funkciu sa vytvor\u00ed uzol s typom funkcia a ulo\u017eia sa takisto inform\u00e1cie ako meno, \u010di cesta. N\u00e1sledne je nutn\u00e9 vytvori\u0165 hrany, ktor\u00e9 bud\u00fa tieto uzly sp\u00e1ja\u0165. Tu sa sa z\u00edskaj\u00fa v\u0161etky volania funkci\u00ed z abstraktn\u00e9ho syntaktick\u00e9ho stromu Listuje sa medzi volaniami, pri\u010dom ka\u017ed\u00e1 funkcia m\u00e1 (m\u00f4\u017ee ma\u0165) viacero volan\u00ed, ktor\u00e9 je tie\u017e nutn\u00e9 prelistova\u0165 Pre ka\u017edn\u00e9 volanie funkcie sa vytvor\u00ed hrana, pri\u010dom do zdroja a cie\u013eu sa priradia uzly, ktor\u00e9 sa sa zistia pomocou met\u00f3dy uzlu (hypergraph/node.lua) findByName , ktor\u00e1 vracia tabu\u013eku uzlov. (v tomto pr\u00edpdade uzlov funkcii, ked\u017ee tie sa do nej posielaj\u00fa) Ak hrana (volanie) nevol\u00e1 nijak\u00fa funkciu, tak je roztrieden\u00e1 pod\u013ea toho, \u010di je glob\u00e1lna alebo modulov\u00e1 do pr\u00edslu\u0161n\u00fdch pol\u00ed v grafe. (graph.moduleCalls alebo graph.globalCalls) Nov\u00e1 hrana sa nastav\u00ed ako orientovan\u00e1 a je pridan\u00e1 do grafu. Funkcia extract, ktor\u00e1 vol\u00e1 zvy\u0161n\u00e9 funkcie, vracia hrany(volania funkci\u00ed) a uzly(funkcie). local function extractFunctionCalls ( AST , graph , nodes ) local edges = {} local functions = ast . getFunctions ( AST ) local functionsCalls = ast . getFunctionsCalls ( AST ) for calledFunction , functionCalls in pairs ( functionsCalls ) do for index , call in pairs ( functionCalls ) do local newEdge = hypergraph . edge . new () newEdge . label = \"FunctionCall\" newEdge . meta = newEdge . meta or {} newEdge . meta . calleeFunction = getCalleeFunctionName ( call ) newEdge . meta . calledFunction = calledFunction newEdge . data . text = call . text newEdge . data . position = call . position newEdge . data . tag = call . tag newEdge : addSource ( hypergraph . node . findByName ( nodes , newEdge . meta . calleeFunction )) newEdge : addTarget ( hypergraph . node . findByName ( nodes , calledFunction )) -- function's declaration not found if utils . isEmpty ( newEdge . to ) then logger : debug ( 'found undeclared function ' .. calledFunction ) addGlobalCall ( graph , newEdge , call , calledFunction ) end newEdge : setAsOriented () graph : addEdge ( newEdge ) table.insert ( edges , newEdge ) end end return edges end Tret\u00edm s\u00faborom, ktor\u00fd rie\u0161i extrakciu uzlov a hr\u00e1n v luaDB module je s\u00fabor priamo v prie\u010dinku luadb/extraction a to extraction.lua . Ako prv\u00e1 sa vol\u00e1 funkcia getFilesTree(graph, sourceDirectory) zo s\u00faboru luadb/extraction/filestree/extractor.lua , ktor\u00e1 je pop\u00edsan\u00e1 v prvej \u010dasti dokumentu V tejto chv\u00edli m\u00e1me uzly typu file, ktor\u00e9 potrebujeme preh\u013eada\u0165 a z\u00edska\u0165 z nich uzly typu function a to za pomoci funkcie getFunctionCalls(graph, luaFileNodes). V tejto funkcii sa listuj\u00fa v\u0161etky s\u00faborov\u00e9 uzly Pre ka\u017ed\u00fd uzol sa zavol\u00e1 funkcionalita zo s\u00faboru src/luadb/extraction/functioncalls/extractor.lua pop\u00edsanom vy\u0161\u0161ie, tak\u017ee v tomto bode u\u017e m\u00e1me aj funkcie a volania funkci\u00ed. Pre ka\u017ed\u00fd uzol prirad\u00edme do functionNodes uzly funkci\u00ed a do functionCalls hrany volan\u00ed funkci\u00ed z\u00edskan\u00e9 v kroku vy\u0161\u0161ie. N\u00e1sledne ka\u017ed\u00fd uzol funkcie napoj\u00edm novovytvorenou hranou na pr\u00edslu\u0161n\u00fd uzol s\u00faboru (takto viem, ktor\u00e9 funkcie patrie ktor\u00e9mu s\u00faboru) for j,functionNode in pairs(luaFileNode.functionNodes) do local connection = hypergraph.edge.new() connection.label = \"FunctionDeclaration\" connection:addSource(luaFileNode) connection:addTarget(functionNode) graph:addEdge(connection) end Takisto preiterujem aj v\u0161etky volania funkci\u00ed a ak maj\u00fa nastaven\u00fd zdroj tak t\u00fato hodnotu nahrad\u00edme uzlom aktu\u00e1lneho s\u00faboru. Predt\u00fdm bol nastaven\u00fd pomocou met\u00f3dy findByName a teda nabral hodnotu tabu\u013eky uzlov funkci\u00ed, teda funkcia, ktor\u00e1 tento uzol (funkciu) volala poch\u00e1dzala z tohto s\u00faboru. for k,functionCallEdge in pairs(luaFileNode.functionCalls) do if utils.isEmpty(functionCallEdge.from) then functionCallEdge.label = \"FunctionCall\" functionCallEdge:addSource(luaFileNode) end end Ako bolo spom\u00ednan\u00e9 pri opise s\u00faboru src/luadb/extraction/functioncalls/extractor.lua volania funkci\u00ed, ktor\u00e9 nemali cie\u013eov\u00fa funkciu, (nemali target/to), \u010di\u017ee nevolali in\u00fa funkciu, boli roztrieden\u00e9 do dvoch skup\u00edn na glob\u00e1lne a modulov\u00e9. V tomto s\u00fabore sa napoja na graf aj tieto hrany a to vo funkci\u00e1ch connectModuleCalls(graph) a assignGlobalCalls(graph). connectModuleCalls(graph) V tejto funkci\u00ed sa napoja na graf modulov\u00e9 funkcie. Prelistuj\u00fa sa v\u0161etky modulov\u00e9 volania pri\u010dom pre v\u0161etky volania sa : z\u00edska n\u00e1zov modulu a cesta k nemu prelistuj\u00fa v\u0161etky s\u00faborov\u00e9 uzly a h\u013ead\u00e1 sa tak\u00fd, ktor\u00fd m\u00e1 rovnak\u00fa cestu ako je cesta k modulu a z\u00e1rove\u0148 \u010di vo funkci\u00e1ch dan\u00e9ho s\u00faborov\u00e9ho uzlu existuje funkcia, ktor\u00e1 m\u00e1 rovnak\u00fd n\u00e1zov ako dan\u00e9 modulov\u00e9 volania (teda sa pozrie, \u010di a, existuje s\u00fabor z ktor\u00e9ho bola funkcia volan\u00e1, b, \u010di v tom s\u00fabore existuje funkcia, ktor\u00e1 bola volan\u00e1) ak \u00e1no s\u00fa tieto uzly funkcii pridan\u00e9 do pomocn\u00e9ho po\u013ea for i,luaFileNode in pairs(luaFileNodes) do if luaFileNode.data.path:find(modulePath) and getFunctionWithName(luaFileNode.functionNodes, moduleFunctionCall) ~= nil then functionNodes = luaFileNode.functionNodes end end Ak tak\u00e1to funkcia (uzol) neexistuje ani jedna, tak sa zaregistruje glob\u00e1lne volanie, funkcionalita bude pop\u00edsan\u00e1 ni\u017e\u0161ie. if utils.isEmpty(functionNodes) then registerGlobalModule(graph, moduleName, moduleFunctionCall) functionNodes = getGlobalModuleFunctions(graph, moduleName) end Nakoniec sa preiteruj\u00fa v\u0161etky hrany volania a priradia sa k cie\u013eov\u00e9mu uzlu. for j,moduleFunctionCallEdge in pairs(edges) do -- add target connection for each module function call moduleFunctionCallEdge:addTarget(functionNode) end Tu je mo\u017eno na mieste si pripomen\u00fa\u0165, ako vyzer\u00e1 jedna polo\u017eka v tejto iter\u00e1cii, teda ako vyzer\u00e1 \"key => value\" a to tak, \u017ee znovu zobraz\u00edme riadok, k\u010fe sa do teraz iterovan\u00fdch polo\u017eiek prid\u00e1val nov\u00fd prvok. table.insert(graph.moduleCalls[calledFunction], newEdge) calledFunction je v tomto pr\u00edpade meno funkcie, ktor\u00e9 je k\u013e\u00fa\u010dom v poli moduleCalls . assignGlobalCalls(graph) V tejto funkci\u00ed sa napoja na graf glob\u00e1lne funkcie. Preiteruj\u00fa sa v\u0161etky glob\u00e1lne volania(hrany), pri\u010dom pre ka\u017ed\u00e9 sa: skontroluje, \u010di po rozdelen\u00ed utils.split(globalFunctionCall, \"%.\") je vzniknut\u00e9 pole ve\u013ekosti 2 if table.getn(parts) == 2 then . Toto indikuje, \u017ee ide o zlo\u017een\u00e9 volanie (napr. table.insert() ) Registruje sa dan\u00fd modul ( table ) vo funkcii registerGlobalModule(graph, moduleName, moduleFunctionCall) . Vytvoria sa uzly pre modul a pre funkciu ( insert ) z dan\u00e9ho modulu, takisto sa vytvor\u00ed hrana medzi nimi, ktor\u00e1 m\u00e1 label FunctionDeclaration . Oba uzly aj hrana medzi nimi s\u00fa pridan\u00e9 do grafu. ak podmienka vy\u0161\u0161ie nebola vyhodnoten\u00e1 ako true ide o glob\u00e1lnu funkciu, napr\u00edklad pair() alebo print() . Vytvor\u00ed sa nov\u00fd uzol typu globalFunction a prid\u00e1 sa do grafu. N\u00e1sledne sa prelistuj\u00fa v\u0161etky hrany pre dan\u00fa funkciu (table.insert(graph.globalCalls[calledFunction], newEdge) hrany) a aktu\u00e1lna funkcia (node) sa prid\u00e1 ako ich Target, teda atrib\u00fat to .","title":"LuaDB"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luadb/#luadb","text":"Logika priamo s\u00favisej\u00faca s tvorbou grafu je rozdelen\u00e1 v s\u00faboroch nach\u00e1dzaj\u00facich sa v dvoch prie\u010dinkoch a to src/luadb/extraction/* a src/luadb/hypergraph/* . Samotn\u00e9 hrany, uzly, ich v\u00fdskyty a graf s\u00fa definovan\u00e9 v jednlotliv\u00fdch .lua s\u00faboroch v prie\u010dinku src/luadb/hypergraph/ , ktor\u00e9 nes\u00fa rovnak\u00e9 n\u00e1zvy ako ako to, \u010do definuj\u00fa. (tj. edge, node, incidence a graph) S\u00fa v nich definovan\u00e9 nielen samotn\u00e9 objekty a ich kon\u0161truktory, ale i z\u00e1kladn\u00e9 oper\u00e1cie priamo s\u00favisej\u00face s nimi, ako napr\u00edklad funkcie na pridanie hr\u00e1n, uzlov a podobne. Napr\u00edklad k\u00f3d ni\u017e\u0161ie je mo\u017en\u00e9 zavola\u0165 nad hranou a funkcia vracia inform\u00e1ciu o tom, \u010di ide o orientovan\u00fa hranu. function pEdge : isOriented () return self . orientation and self . orientation == \"Oriented\" and true or false ; end Okrem toho obsahuj\u00fa funkcie aj na vyh\u013eadanie dan\u00fdch objektov pod\u013ea zadan\u00e9ho argumentu, ktor\u00fdm s\u00fa napr\u00edklad meno alebo typ. V\u00e4\u010d\u0161ina tak\u00fdchto funkci\u00ed sa nach\u00e1dza v s\u00fabore graph.lua . Napr\u00edklad funkcia ni\u017e\u0161ie zavolan\u00e1 nad ur\u010dit\u00fdm grafom s argumentom typ vr\u00e1ti v\u0161etky uzly v danom grafe dan\u00e9ho typu. -- get all nodes with selected type function pGraph : findNodesByType ( type ) local occurrences = {} for i , node in pairs ( self . nodes ) do if node . meta . type and ( node . meta . type == type ) then table.insert ( occurrences , node ) end end return occurrences end V prie\u010dinku src/luadb/extraction sa extrahuje graf z lua s\u00faborov a to n\u00e1sledovne. Najsk\u00f4r je nutn\u00e9 z\u00edska\u0165 lua s\u00fabory zo zadanej cesty. T\u00e1to funkcionalita sa nach\u00e1dza v s\u00fabore luadb/extraction/filestree/extractor.lua . Najsk\u00f4r sa na\u010d\u00edta cesta, skontroluje sa, \u010di je dan\u00e1 cesta string a z nej sa n\u00e1sledne vystrihne posledn\u00e1 \u010das\u0165 - meno prie\u010dinku. Ak ide o \u00faplne prv\u00e9 volanie funkcie, vytvor\u00fd sa root uzol. V \u010fal\u0161ej funkcii sa cyklom rekurz\u00edvne preh\u013ead\u00e1vaj\u00fa s\u00fabory dan\u00e9ho prie\u010dinka, pri\u010dom ak s\u00fabor v prie\u010dinku je prie\u010dinok, tak sa do mno\u017einy lua-uzlov v grafe prid\u00e1 uzol typu prie\u010dinok (directory) a preh\u013ead\u00e1vanie sa pos\u00fava hlb\u0161ie Ak s\u00fabor nebol prie\u010dinok tak sa e\u0161te over\u00ed, \u010di ide o .lua s\u00fabor a ak \u00e1no prid\u00e1 sa do mno\u017einy lua-uzlov v grafe s typom s\u00fabor (file). Ako posledn\u00e9 sa vytvor\u00ed hrana medzi s\u00faborom a jeho rodi\u010dom. Pri prvo\u00farov\u0148ovom volan\u00ed je to novovytvoren\u00fd root, \u010di\u017ee rodi\u010dovk\u00fd repozit\u00e1r. V pr\u00edpade, \u017ee u\u017e bola zavolan\u00e1 funkcia rekurz\u00edvne, ako argument jej bol poslan\u00fd aktu\u00e1lne iterovan\u00fd uzol (s\u00fabor), tak je hrane priraden\u00fd ako rodi\u010d repozit\u00e1r s ktor\u00fdm bola funkcia volan\u00e1. V poslednom kroku sa do grafu prid\u00e1 uzol a jeho hrana. local function extractFilesTree ( graph , path , parent ) -- root node if not parent then local newNode = hypergraph . node . new () newNode . data . name = getNameFromPath ( path , \"/\" ) newNode . data . path = path newNode . meta = newNode . meta or {} newNode . meta . type = \"directory\" graph : addNode ( newNode ) parent = newNode end for file in lfs . dir ( path ) do if file ~= \".\" and file ~= \"..\" and not utils . isHidden ( file ) then local fullPath = path .. '/' .. file local attr = lfs . attributes ( fullPath ) assert ( type ( attr ) == \"table\" ) -- new node local newNode = hypergraph . node . new () newNode . meta = newNode . meta or {} if attr . mode == \"directory\" then newNode . data . name = file newNode . data . path = fullPath newNode . meta . type = \"directory\" -- recursive call extractFilesTree ( graph , fullPath , newNode ) else newNode . data . name = file newNode . data . path = fullPath newNode . meta . type = \"file\" graph . luaFileNodes = graph . luaFileNodes or {} if utils . isLuaFile ( file ) then table.insert ( graph . luaFileNodes , newNode ) end end -- new edge local newEdge = hypergraph . edge . new () newEdge . label = \"Subfile\" newEdge : addSource ( parent ) newEdge : addTarget ( newNode ) newEdge : setAsOriented () graph : addNode ( newNode ) graph : addEdge ( newEdge ) end end end S\u00fabor luadb/extraction/functioncalls/extractor.lua obsahuje funkcie, ktor\u00e9 extrahuj\u00fa funkcie a volania, pri\u010dom ich delia na glob\u00e1lne a modulov\u00e9. Ako prv\u00e9 sa z\u00edskaj\u00fa v\u0161etky funkcie z dan\u00e9ho stromu, ktor\u00e9 sa potom v cykle prejd\u00fa a pre ka\u017ed\u00fa funkciu sa vytvor\u00ed uzol s typom funkcia a ulo\u017eia sa takisto inform\u00e1cie ako meno, \u010di cesta. N\u00e1sledne je nutn\u00e9 vytvori\u0165 hrany, ktor\u00e9 bud\u00fa tieto uzly sp\u00e1ja\u0165. Tu sa sa z\u00edskaj\u00fa v\u0161etky volania funkci\u00ed z abstraktn\u00e9ho syntaktick\u00e9ho stromu Listuje sa medzi volaniami, pri\u010dom ka\u017ed\u00e1 funkcia m\u00e1 (m\u00f4\u017ee ma\u0165) viacero volan\u00ed, ktor\u00e9 je tie\u017e nutn\u00e9 prelistova\u0165 Pre ka\u017edn\u00e9 volanie funkcie sa vytvor\u00ed hrana, pri\u010dom do zdroja a cie\u013eu sa priradia uzly, ktor\u00e9 sa sa zistia pomocou met\u00f3dy uzlu (hypergraph/node.lua) findByName , ktor\u00e1 vracia tabu\u013eku uzlov. (v tomto pr\u00edpdade uzlov funkcii, ked\u017ee tie sa do nej posielaj\u00fa) Ak hrana (volanie) nevol\u00e1 nijak\u00fa funkciu, tak je roztrieden\u00e1 pod\u013ea toho, \u010di je glob\u00e1lna alebo modulov\u00e1 do pr\u00edslu\u0161n\u00fdch pol\u00ed v grafe. (graph.moduleCalls alebo graph.globalCalls) Nov\u00e1 hrana sa nastav\u00ed ako orientovan\u00e1 a je pridan\u00e1 do grafu. Funkcia extract, ktor\u00e1 vol\u00e1 zvy\u0161n\u00e9 funkcie, vracia hrany(volania funkci\u00ed) a uzly(funkcie). local function extractFunctionCalls ( AST , graph , nodes ) local edges = {} local functions = ast . getFunctions ( AST ) local functionsCalls = ast . getFunctionsCalls ( AST ) for calledFunction , functionCalls in pairs ( functionsCalls ) do for index , call in pairs ( functionCalls ) do local newEdge = hypergraph . edge . new () newEdge . label = \"FunctionCall\" newEdge . meta = newEdge . meta or {} newEdge . meta . calleeFunction = getCalleeFunctionName ( call ) newEdge . meta . calledFunction = calledFunction newEdge . data . text = call . text newEdge . data . position = call . position newEdge . data . tag = call . tag newEdge : addSource ( hypergraph . node . findByName ( nodes , newEdge . meta . calleeFunction )) newEdge : addTarget ( hypergraph . node . findByName ( nodes , calledFunction )) -- function's declaration not found if utils . isEmpty ( newEdge . to ) then logger : debug ( 'found undeclared function ' .. calledFunction ) addGlobalCall ( graph , newEdge , call , calledFunction ) end newEdge : setAsOriented () graph : addEdge ( newEdge ) table.insert ( edges , newEdge ) end end return edges end Tret\u00edm s\u00faborom, ktor\u00fd rie\u0161i extrakciu uzlov a hr\u00e1n v luaDB module je s\u00fabor priamo v prie\u010dinku luadb/extraction a to extraction.lua . Ako prv\u00e1 sa vol\u00e1 funkcia getFilesTree(graph, sourceDirectory) zo s\u00faboru luadb/extraction/filestree/extractor.lua , ktor\u00e1 je pop\u00edsan\u00e1 v prvej \u010dasti dokumentu V tejto chv\u00edli m\u00e1me uzly typu file, ktor\u00e9 potrebujeme preh\u013eada\u0165 a z\u00edska\u0165 z nich uzly typu function a to za pomoci funkcie getFunctionCalls(graph, luaFileNodes). V tejto funkcii sa listuj\u00fa v\u0161etky s\u00faborov\u00e9 uzly Pre ka\u017ed\u00fd uzol sa zavol\u00e1 funkcionalita zo s\u00faboru src/luadb/extraction/functioncalls/extractor.lua pop\u00edsanom vy\u0161\u0161ie, tak\u017ee v tomto bode u\u017e m\u00e1me aj funkcie a volania funkci\u00ed. Pre ka\u017ed\u00fd uzol prirad\u00edme do functionNodes uzly funkci\u00ed a do functionCalls hrany volan\u00ed funkci\u00ed z\u00edskan\u00e9 v kroku vy\u0161\u0161ie. N\u00e1sledne ka\u017ed\u00fd uzol funkcie napoj\u00edm novovytvorenou hranou na pr\u00edslu\u0161n\u00fd uzol s\u00faboru (takto viem, ktor\u00e9 funkcie patrie ktor\u00e9mu s\u00faboru) for j,functionNode in pairs(luaFileNode.functionNodes) do local connection = hypergraph.edge.new() connection.label = \"FunctionDeclaration\" connection:addSource(luaFileNode) connection:addTarget(functionNode) graph:addEdge(connection) end Takisto preiterujem aj v\u0161etky volania funkci\u00ed a ak maj\u00fa nastaven\u00fd zdroj tak t\u00fato hodnotu nahrad\u00edme uzlom aktu\u00e1lneho s\u00faboru. Predt\u00fdm bol nastaven\u00fd pomocou met\u00f3dy findByName a teda nabral hodnotu tabu\u013eky uzlov funkci\u00ed, teda funkcia, ktor\u00e1 tento uzol (funkciu) volala poch\u00e1dzala z tohto s\u00faboru. for k,functionCallEdge in pairs(luaFileNode.functionCalls) do if utils.isEmpty(functionCallEdge.from) then functionCallEdge.label = \"FunctionCall\" functionCallEdge:addSource(luaFileNode) end end Ako bolo spom\u00ednan\u00e9 pri opise s\u00faboru src/luadb/extraction/functioncalls/extractor.lua volania funkci\u00ed, ktor\u00e9 nemali cie\u013eov\u00fa funkciu, (nemali target/to), \u010di\u017ee nevolali in\u00fa funkciu, boli roztrieden\u00e9 do dvoch skup\u00edn na glob\u00e1lne a modulov\u00e9. V tomto s\u00fabore sa napoja na graf aj tieto hrany a to vo funkci\u00e1ch connectModuleCalls(graph) a assignGlobalCalls(graph). connectModuleCalls(graph) V tejto funkci\u00ed sa napoja na graf modulov\u00e9 funkcie. Prelistuj\u00fa sa v\u0161etky modulov\u00e9 volania pri\u010dom pre v\u0161etky volania sa : z\u00edska n\u00e1zov modulu a cesta k nemu prelistuj\u00fa v\u0161etky s\u00faborov\u00e9 uzly a h\u013ead\u00e1 sa tak\u00fd, ktor\u00fd m\u00e1 rovnak\u00fa cestu ako je cesta k modulu a z\u00e1rove\u0148 \u010di vo funkci\u00e1ch dan\u00e9ho s\u00faborov\u00e9ho uzlu existuje funkcia, ktor\u00e1 m\u00e1 rovnak\u00fd n\u00e1zov ako dan\u00e9 modulov\u00e9 volania (teda sa pozrie, \u010di a, existuje s\u00fabor z ktor\u00e9ho bola funkcia volan\u00e1, b, \u010di v tom s\u00fabore existuje funkcia, ktor\u00e1 bola volan\u00e1) ak \u00e1no s\u00fa tieto uzly funkcii pridan\u00e9 do pomocn\u00e9ho po\u013ea for i,luaFileNode in pairs(luaFileNodes) do if luaFileNode.data.path:find(modulePath) and getFunctionWithName(luaFileNode.functionNodes, moduleFunctionCall) ~= nil then functionNodes = luaFileNode.functionNodes end end Ak tak\u00e1to funkcia (uzol) neexistuje ani jedna, tak sa zaregistruje glob\u00e1lne volanie, funkcionalita bude pop\u00edsan\u00e1 ni\u017e\u0161ie. if utils.isEmpty(functionNodes) then registerGlobalModule(graph, moduleName, moduleFunctionCall) functionNodes = getGlobalModuleFunctions(graph, moduleName) end Nakoniec sa preiteruj\u00fa v\u0161etky hrany volania a priradia sa k cie\u013eov\u00e9mu uzlu. for j,moduleFunctionCallEdge in pairs(edges) do -- add target connection for each module function call moduleFunctionCallEdge:addTarget(functionNode) end Tu je mo\u017eno na mieste si pripomen\u00fa\u0165, ako vyzer\u00e1 jedna polo\u017eka v tejto iter\u00e1cii, teda ako vyzer\u00e1 \"key => value\" a to tak, \u017ee znovu zobraz\u00edme riadok, k\u010fe sa do teraz iterovan\u00fdch polo\u017eiek prid\u00e1val nov\u00fd prvok. table.insert(graph.moduleCalls[calledFunction], newEdge) calledFunction je v tomto pr\u00edpade meno funkcie, ktor\u00e9 je k\u013e\u00fa\u010dom v poli moduleCalls . assignGlobalCalls(graph) V tejto funkci\u00ed sa napoja na graf glob\u00e1lne funkcie. Preiteruj\u00fa sa v\u0161etky glob\u00e1lne volania(hrany), pri\u010dom pre ka\u017ed\u00e9 sa: skontroluje, \u010di po rozdelen\u00ed utils.split(globalFunctionCall, \"%.\") je vzniknut\u00e9 pole ve\u013ekosti 2 if table.getn(parts) == 2 then . Toto indikuje, \u017ee ide o zlo\u017een\u00e9 volanie (napr. table.insert() ) Registruje sa dan\u00fd modul ( table ) vo funkcii registerGlobalModule(graph, moduleName, moduleFunctionCall) . Vytvoria sa uzly pre modul a pre funkciu ( insert ) z dan\u00e9ho modulu, takisto sa vytvor\u00ed hrana medzi nimi, ktor\u00e1 m\u00e1 label FunctionDeclaration . Oba uzly aj hrana medzi nimi s\u00fa pridan\u00e9 do grafu. ak podmienka vy\u0161\u0161ie nebola vyhodnoten\u00e1 ako true ide o glob\u00e1lnu funkciu, napr\u00edklad pair() alebo print() . Vytvor\u00ed sa nov\u00fd uzol typu globalFunction a prid\u00e1 sa do grafu. N\u00e1sledne sa prelistuj\u00fa v\u0161etky hrany pre dan\u00fa funkciu (table.insert(graph.globalCalls[calledFunction], newEdge) hrany) a aktu\u00e1lna funkcia (node) sa prid\u00e1 ako ich Target, teda atrib\u00fat to .","title":"LuaDB"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/","text":"Luametrics \u00b6 V prie\u010dinku luametrics/src/hypergraph sa nach\u00e1dzaj\u00fa s\u00fabory zodpovedn\u00e9 za vyh\u013ead\u00e1vanie a uchov\u00e1- vanie vz\u0165ahov v s\u00fabore do hypergrafovej d\u00e1tovej \u0161trukt\u00fary. Tu je taktie\u017e vyu\u017eit\u00e1 lua kni\u017enica hypergraph . Podobne ako v LuaDB, objekty pre hrany, uzly a v\u00fdskyty s\u00fa definovan\u00e9 v rovnomenn\u00fdch s\u00faboroch, pri\u010dom v s\u00fabore graph.lua je definovan\u00fd hypergraf a funkcie nad n\u00edm, ako pridanie alebo vymazanie hr\u00e1n/uzlov. Metriky \u00b6 Najv\u00fdznamenj\u0161ie \u00falohu v module LuaMetrics s\u00fa s\u00fabory obsiahnut\u00e9 v prie\u010dinku luametrics/src/metrics/capture , kde sa po\u010d\u00edtaj\u00fa jednotliv\u00e9 metriky. V tomto prie\u010dinku sa nach\u00e1dza 11 s\u00faborov, komplexnej\u0161ie metriky sa po\u010d\u00edtaj\u00fa v 5-och, ostatn\u00e9 sl\u00fa\u017eia na anal\u00fdzu, rozdelenie k\u00f3du alebo na \u010diastkov\u00e9 metriky. (napr. na bloky, \u010do je pou\u017e\u00edvan\u00e9 pri zv\u00fdraz\u0148ovan\u00ed \u010dast\u00ed k\u00f3du alebo pri po\u010d\u00edtan\u00ed metriky toku inform\u00e1cii pre funkciu). LOC.lua \u00b6 V tomto s\u00fabore sa po\u010d\u00edta z\u00e1kladn\u00e1 metrika, ktorou je po\u010det riadkov k\u00f3du. Ke\u010f\u017ee funkcia doMetrics() nie je volan\u00e1 rekurz\u00edvne, metriky s\u00fa po\u010d\u00edtan\u00e9 len pre priamych potomkov uzlu for key, value in pairs(children) do . Konkr\u00e9tne sa pre jednotliv\u00e9 uzly po\u010d\u00edtaj\u00fa riadky pod\u013ea podmienok, ktor\u00e9 na z\u00e1klade tagu kontroluj\u00fa o ak\u00fd typ riadku ide. \u010ci\u017ee je pre jeden uzol po\u010d\u00edtan\u00fd nielen z\u00e1kladn\u00fd po\u010det riadkov (bez podmienok, ak nov\u00fd riadok +1), ale aj po\u010dt riadkov koment\u00e1rov, \u00faplne pr\u00e1dznych riakov, po\u010det nepr\u00e1zdnych riadkov a po\u010det riadkov obsauj\u00facich vykonate\u013en\u00fd k\u00f3d. Ka\u017ed\u00e9 po\u010dt\u00eddalo je vnoren\u00e9 do inej podmienky. Tieto v\u00fdsledky s\u00fa zap\u00edsan\u00e9 v tabu\u013eke pre node.metrics.moduleDefinitions[exec].LOC. addCount ( LOC , 'lines' , value . metrics . LOC . lines ) addCount ( LOC , 'lines_comment' , value . metrics . LOC . lines_comment ) addCount ( LOC , 'lines_blank' , value . metrics . LOC . lines_blank ) addCount ( LOC , 'lines_nonempty' , value . metrics . LOC . lines_nonempty ) addCount ( LOC , 'lines_code' , value . metrics . LOC . lines_code ) infoflow.lua \u00b6 V tomto s\u00fabore je po\u010d\u00edtan\u00e1 metrika toku inform\u00e1ci\u00ed pre funkciu. Pri v\u00fdpo\u010dte tohto druhu metriky je potrebn\u00e9 analyzova\u0165 vz\u0165ahy danej funkcie k d\u00e1tam na jej vstupe, pri jej v\u00fdstupe a vz\u0165ah k d\u00e1tam s ktor\u00fdmi funkcia pracuje. V tomto s\u00fabore s\u00fa vyu\u017e\u00edvan\u00e9 v\u00fdstupy zo s\u00faboru block.lua Na uk\u00e1\u017eke ni\u017e\u0161ie sa do uzlu zapisuje, \u010di ide o premenn\u00fa, z ktorej sa \u010d\u00edta alebo do ktorej sa zapisuje, t\u00e1to inform\u00e1cia je d\u00f4le\u017eit\u00e1 pri v\u00fdpo\u010dte metriky toku inform\u00e1ci\u00ed. local function newVariable ( node , text , secondary_nodes , isRead ) if ( locals_stack [ text ] == nil ) then -- if variable was not defined before - it belongs to the 'remotes' variables addItemToArray ( remotes_stack , text , node ) addItemToHighlightArray ( highlight_remote , node , secondary_nodes ) if ( isRead ) then -- variable is read from node . isRead = true else -- write node . isWritten = true end else table.insert ( locals_stack [ text ], node ) -- the variable is local - table was defined before -- insert it into the table (table holds froup of nodes corresponding to the variable with the same text) addItemToHighlightArray ( highlight_local , node , secondary_nodes ) end if ( moduleMetrics ) then table.insert ( moduleMetrics . variables , node ) end end Na riadku 2 je zv\u00fdraznen\u00e9 priradenia konkr\u00e9tnej metriky na pr\u00edslu\u0161n\u00e9 miesto infoflow.information_flow v abstraktnom syntaktickom strome funkcii. Je vypo\u010d\u00edtan\u00e1 pod\u013ea vz\u0165ahu pre vyv\u00e1\u017een\u00fd tok inform\u00e1cii infoflow = po\u010det_premmen\u00fdch_do_kt_sa_zapisuje \u2217 (po\u010det_premmen\u00fdch_z_kt_sa_\u010d\u00edta + pocet_v\u00fdstupov_z_funkcie) 2 V metrics sa takisto uchov\u00e1vaj\u00fa aj v\u0161etky po\u010d\u00edtadl\u00e1 vyu\u017eit\u00e9 na v\u00fdpo\u010det metr\u00edk. Komplexita rozhrania je vypo\u010d\u00edtan\u00e1 ako ako s\u00fa\u010det argumentov a return statementov. funcAST . metrics . infoflow = {} funcAST . metrics . infoflow . information_flow = ( # v_in * ( # v_out + return_counter )) ^ 2 funcAST . metrics . infoflow . arguments_in = in_counter funcAST . metrics . infoflow . arguments_out = return_counter funcAST . metrics . infoflow . interface_complexity = in_counter + return_counter funcAST . metrics . infoflow . used_nodes = usedNodes cyclomatic.lua \u00b6 V tomto module je vyu\u017eit\u00fd v\u00fdstup z modulu statements.lua , ktor\u00fd do metr\u00edk zap\u00ed\u0161e zoznam pr\u00edkazov spolu s jeho po\u010detnos\u0165ou. Metriky s\u00fa postupne spo\u010d\u00edtavan\u00e9 prid\u00e1van\u00edm \u010diasto\u010dn\u00fdch zlo\u017eitost\u00ed volan\u00edm pomocnej funkcie. local function add ( node , name , count ) count = count or 0 if ( not node . metrics ) then node . metrics = {} end if ( not node . metrics . cyclomatic ) then node . metrics . cyclomatic = {} end if ( node . metrics . cyclomatic [ name ]) then node . metrics . cyclomatic [ name ] = node . metrics . cyclomatic [ name ] + count else node . metrics . cyclomatic [ name ] = count end end Argumentami s\u00fa uzol (funkcia), meno ('decisions','decisions_all','conditions','conditions_all') a samotn\u00e1 \"zlo\u017eitos\u0165\" (v\u00e4\u010d\u0161inou 1, niekedy po\u010det v\u00fdskytov if_else v pr\u00edpade v\u00fdrazu za\u010d\u00ednaj\u00facim if. Horn\u00e9 a doln\u00e9 ohrani\u010denie pre uzol je zap\u00edsan\u00e9 vo funkci\u00e1ch setUpperBound a setLowerBound . halstead.lua \u00b6 V tomto s\u00fabore sa do metr\u00edk zap\u00edsaj\u00fa tzv. Halsteadove metriky. if ( node . metrics == nil ) then node . metrics = {} end if ( node . metrics . halstead == nil ) then node . metrics . halstead = {} end calculateHalstead ( node . metrics . halstead , operators , operands ) ... metricsHalstead . operators = operators metricsHalstead . operands = operands metricsHalstead . number_of_operators = number_of_operators metricsHalstead . number_of_operands = number_of_operands metricsHalstead . unique_operands = unique_operands metricsHalstead . unique_operators = unique_operators metricsHalstead . LTH = number_of_operators + number_of_operands metricsHalstead . VOC = unique_operands + unique_operators metricsHalstead . DIF = ( unique_operators / 2 ) * ( number_of_operands / unique_operands ) metricsHalstead . VOL = metricsHalstead . LTH * ( math.log ( metricsHalstead . VOC ) / math.log ( 2 ) ) metricsHalstead . EFF = metricsHalstead . DIF * metricsHalstead . VOL metricsHalstead . BUG = metricsHalstead . VOL / 3000 metricsHalstead . time = metricsHalstead . EFF / 18 T\u00e1to metrika uklad\u00e1 oper\u00e1tory, operandy a zapisuje do metr\u00edk nielen tieto zoznamy, ale i ich po\u010detnosti, po\u010detnosti unik\u00e1tnych operandov a oper\u00e1torov. Tieto \u00fadaje \u010falej vyu\u017e\u00edva na po\u010d\u00edtanie halsteadov\u00fdch metr\u00edk dosaden\u00edm do pr\u00edslu\u0161n\u00fdch vz\u0165ahov. Podobne ako pri LOC aj tieto metriky sa po\u010d\u00edtaj\u00fa nielen pre funkcie, ale aj pre moduly. document_metrics.lua \u00b6 V tomto s\u00fabore sa po\u010d\u00edtaj\u00fa metriky dokument\u00e1cie, teda koment\u00e1rov v k\u00f3de. Do metr\u00edk sa zapisuj\u00fa metriky ako po\u010det zdokumentovan\u00fdch a po\u010det nezdokumentovan\u00fdch funkci\u00ed/tabuliek a pomer t\u00fdchto mno\u017e\u00edn. \u010eal\u0161ou metrikou s\u00fa po\u010dty informat\u00edvnych koment\u00e1rov rozdelen\u00fdch pod\u013ea druhu. COMMENT = function ( data ) data . parsed = comments . Parse ( data . text ) if ( data . parsed and data . parsed . style == \"custom\" ) then if ( data . parsed . type == \"todo\" ) then table.insert ( TODOs , data ) end if ( data . parsed . type == \"bug\" ) then table.insert ( BUGs , data ) end if ( data . parsed . type == \"question\" ) then table.insert ( QUESTIONs , data ) end if ( data . parsed . type == \"fixme\" ) then table.insert ( FIXMEs , data ) end if ( data . parsed . type == \"how\" ) then table.insert ( HOWs , data ) end if ( data . parsed . type == \"info\" ) then table.insert ( INFOs , data ) end end return data Po\u010dty zdokumentovan\u00fdch rsp. nezdokumentovan\u00fdch funkcii sa po\u010d\u00edta pomocou jednoduch\u00fdch cyklov ako je vidie\u0165 ni\u017e\u0161ie. if ( data . metrics . functionDefinitions ~= nil ) then for k , v in pairs ( data . metrics . functionDefinitions ) do if ( v . documented == 1 ) then data . metrics . documentMetrics . documentedFunctionsCounter = data . metrics . documentMetrics . documentedFunctionsCounter + 1 else data . metrics . documentMetrics . nondocumentedFunctionsCounter = data . metrics . documentMetrics . nondocumentedFunctionsCounter + 1 end end end","title":"Luametrics"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#luametrics","text":"V prie\u010dinku luametrics/src/hypergraph sa nach\u00e1dzaj\u00fa s\u00fabory zodpovedn\u00e9 za vyh\u013ead\u00e1vanie a uchov\u00e1- vanie vz\u0165ahov v s\u00fabore do hypergrafovej d\u00e1tovej \u0161trukt\u00fary. Tu je taktie\u017e vyu\u017eit\u00e1 lua kni\u017enica hypergraph . Podobne ako v LuaDB, objekty pre hrany, uzly a v\u00fdskyty s\u00fa definovan\u00e9 v rovnomenn\u00fdch s\u00faboroch, pri\u010dom v s\u00fabore graph.lua je definovan\u00fd hypergraf a funkcie nad n\u00edm, ako pridanie alebo vymazanie hr\u00e1n/uzlov.","title":"Luametrics"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#metriky","text":"Najv\u00fdznamenj\u0161ie \u00falohu v module LuaMetrics s\u00fa s\u00fabory obsiahnut\u00e9 v prie\u010dinku luametrics/src/metrics/capture , kde sa po\u010d\u00edtaj\u00fa jednotliv\u00e9 metriky. V tomto prie\u010dinku sa nach\u00e1dza 11 s\u00faborov, komplexnej\u0161ie metriky sa po\u010d\u00edtaj\u00fa v 5-och, ostatn\u00e9 sl\u00fa\u017eia na anal\u00fdzu, rozdelenie k\u00f3du alebo na \u010diastkov\u00e9 metriky. (napr. na bloky, \u010do je pou\u017e\u00edvan\u00e9 pri zv\u00fdraz\u0148ovan\u00ed \u010dast\u00ed k\u00f3du alebo pri po\u010d\u00edtan\u00ed metriky toku inform\u00e1cii pre funkciu).","title":"Metriky"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#loclua","text":"V tomto s\u00fabore sa po\u010d\u00edta z\u00e1kladn\u00e1 metrika, ktorou je po\u010det riadkov k\u00f3du. Ke\u010f\u017ee funkcia doMetrics() nie je volan\u00e1 rekurz\u00edvne, metriky s\u00fa po\u010d\u00edtan\u00e9 len pre priamych potomkov uzlu for key, value in pairs(children) do . Konkr\u00e9tne sa pre jednotliv\u00e9 uzly po\u010d\u00edtaj\u00fa riadky pod\u013ea podmienok, ktor\u00e9 na z\u00e1klade tagu kontroluj\u00fa o ak\u00fd typ riadku ide. \u010ci\u017ee je pre jeden uzol po\u010d\u00edtan\u00fd nielen z\u00e1kladn\u00fd po\u010det riadkov (bez podmienok, ak nov\u00fd riadok +1), ale aj po\u010dt riadkov koment\u00e1rov, \u00faplne pr\u00e1dznych riakov, po\u010det nepr\u00e1zdnych riadkov a po\u010det riadkov obsauj\u00facich vykonate\u013en\u00fd k\u00f3d. Ka\u017ed\u00e9 po\u010dt\u00eddalo je vnoren\u00e9 do inej podmienky. Tieto v\u00fdsledky s\u00fa zap\u00edsan\u00e9 v tabu\u013eke pre node.metrics.moduleDefinitions[exec].LOC. addCount ( LOC , 'lines' , value . metrics . LOC . lines ) addCount ( LOC , 'lines_comment' , value . metrics . LOC . lines_comment ) addCount ( LOC , 'lines_blank' , value . metrics . LOC . lines_blank ) addCount ( LOC , 'lines_nonempty' , value . metrics . LOC . lines_nonempty ) addCount ( LOC , 'lines_code' , value . metrics . LOC . lines_code )","title":"LOC.lua"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#infoflowlua","text":"V tomto s\u00fabore je po\u010d\u00edtan\u00e1 metrika toku inform\u00e1ci\u00ed pre funkciu. Pri v\u00fdpo\u010dte tohto druhu metriky je potrebn\u00e9 analyzova\u0165 vz\u0165ahy danej funkcie k d\u00e1tam na jej vstupe, pri jej v\u00fdstupe a vz\u0165ah k d\u00e1tam s ktor\u00fdmi funkcia pracuje. V tomto s\u00fabore s\u00fa vyu\u017e\u00edvan\u00e9 v\u00fdstupy zo s\u00faboru block.lua Na uk\u00e1\u017eke ni\u017e\u0161ie sa do uzlu zapisuje, \u010di ide o premenn\u00fa, z ktorej sa \u010d\u00edta alebo do ktorej sa zapisuje, t\u00e1to inform\u00e1cia je d\u00f4le\u017eit\u00e1 pri v\u00fdpo\u010dte metriky toku inform\u00e1ci\u00ed. local function newVariable ( node , text , secondary_nodes , isRead ) if ( locals_stack [ text ] == nil ) then -- if variable was not defined before - it belongs to the 'remotes' variables addItemToArray ( remotes_stack , text , node ) addItemToHighlightArray ( highlight_remote , node , secondary_nodes ) if ( isRead ) then -- variable is read from node . isRead = true else -- write node . isWritten = true end else table.insert ( locals_stack [ text ], node ) -- the variable is local - table was defined before -- insert it into the table (table holds froup of nodes corresponding to the variable with the same text) addItemToHighlightArray ( highlight_local , node , secondary_nodes ) end if ( moduleMetrics ) then table.insert ( moduleMetrics . variables , node ) end end Na riadku 2 je zv\u00fdraznen\u00e9 priradenia konkr\u00e9tnej metriky na pr\u00edslu\u0161n\u00e9 miesto infoflow.information_flow v abstraktnom syntaktickom strome funkcii. Je vypo\u010d\u00edtan\u00e1 pod\u013ea vz\u0165ahu pre vyv\u00e1\u017een\u00fd tok inform\u00e1cii infoflow = po\u010det_premmen\u00fdch_do_kt_sa_zapisuje \u2217 (po\u010det_premmen\u00fdch_z_kt_sa_\u010d\u00edta + pocet_v\u00fdstupov_z_funkcie) 2 V metrics sa takisto uchov\u00e1vaj\u00fa aj v\u0161etky po\u010d\u00edtadl\u00e1 vyu\u017eit\u00e9 na v\u00fdpo\u010det metr\u00edk. Komplexita rozhrania je vypo\u010d\u00edtan\u00e1 ako ako s\u00fa\u010det argumentov a return statementov. funcAST . metrics . infoflow = {} funcAST . metrics . infoflow . information_flow = ( # v_in * ( # v_out + return_counter )) ^ 2 funcAST . metrics . infoflow . arguments_in = in_counter funcAST . metrics . infoflow . arguments_out = return_counter funcAST . metrics . infoflow . interface_complexity = in_counter + return_counter funcAST . metrics . infoflow . used_nodes = usedNodes","title":"infoflow.lua"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#cyclomaticlua","text":"V tomto module je vyu\u017eit\u00fd v\u00fdstup z modulu statements.lua , ktor\u00fd do metr\u00edk zap\u00ed\u0161e zoznam pr\u00edkazov spolu s jeho po\u010detnos\u0165ou. Metriky s\u00fa postupne spo\u010d\u00edtavan\u00e9 prid\u00e1van\u00edm \u010diasto\u010dn\u00fdch zlo\u017eitost\u00ed volan\u00edm pomocnej funkcie. local function add ( node , name , count ) count = count or 0 if ( not node . metrics ) then node . metrics = {} end if ( not node . metrics . cyclomatic ) then node . metrics . cyclomatic = {} end if ( node . metrics . cyclomatic [ name ]) then node . metrics . cyclomatic [ name ] = node . metrics . cyclomatic [ name ] + count else node . metrics . cyclomatic [ name ] = count end end Argumentami s\u00fa uzol (funkcia), meno ('decisions','decisions_all','conditions','conditions_all') a samotn\u00e1 \"zlo\u017eitos\u0165\" (v\u00e4\u010d\u0161inou 1, niekedy po\u010det v\u00fdskytov if_else v pr\u00edpade v\u00fdrazu za\u010d\u00ednaj\u00facim if. Horn\u00e9 a doln\u00e9 ohrani\u010denie pre uzol je zap\u00edsan\u00e9 vo funkci\u00e1ch setUpperBound a setLowerBound .","title":"cyclomatic.lua"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#halsteadlua","text":"V tomto s\u00fabore sa do metr\u00edk zap\u00edsaj\u00fa tzv. Halsteadove metriky. if ( node . metrics == nil ) then node . metrics = {} end if ( node . metrics . halstead == nil ) then node . metrics . halstead = {} end calculateHalstead ( node . metrics . halstead , operators , operands ) ... metricsHalstead . operators = operators metricsHalstead . operands = operands metricsHalstead . number_of_operators = number_of_operators metricsHalstead . number_of_operands = number_of_operands metricsHalstead . unique_operands = unique_operands metricsHalstead . unique_operators = unique_operators metricsHalstead . LTH = number_of_operators + number_of_operands metricsHalstead . VOC = unique_operands + unique_operators metricsHalstead . DIF = ( unique_operators / 2 ) * ( number_of_operands / unique_operands ) metricsHalstead . VOL = metricsHalstead . LTH * ( math.log ( metricsHalstead . VOC ) / math.log ( 2 ) ) metricsHalstead . EFF = metricsHalstead . DIF * metricsHalstead . VOL metricsHalstead . BUG = metricsHalstead . VOL / 3000 metricsHalstead . time = metricsHalstead . EFF / 18 T\u00e1to metrika uklad\u00e1 oper\u00e1tory, operandy a zapisuje do metr\u00edk nielen tieto zoznamy, ale i ich po\u010detnosti, po\u010detnosti unik\u00e1tnych operandov a oper\u00e1torov. Tieto \u00fadaje \u010falej vyu\u017e\u00edva na po\u010d\u00edtanie halsteadov\u00fdch metr\u00edk dosaden\u00edm do pr\u00edslu\u0161n\u00fdch vz\u0165ahov. Podobne ako pri LOC aj tieto metriky sa po\u010d\u00edtaj\u00fa nielen pre funkcie, ale aj pre moduly.","title":"halstead.lua"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_luametrics/#document_metricslua","text":"V tomto s\u00fabore sa po\u010d\u00edtaj\u00fa metriky dokument\u00e1cie, teda koment\u00e1rov v k\u00f3de. Do metr\u00edk sa zapisuj\u00fa metriky ako po\u010det zdokumentovan\u00fdch a po\u010det nezdokumentovan\u00fdch funkci\u00ed/tabuliek a pomer t\u00fdchto mno\u017e\u00edn. \u010eal\u0161ou metrikou s\u00fa po\u010dty informat\u00edvnych koment\u00e1rov rozdelen\u00fdch pod\u013ea druhu. COMMENT = function ( data ) data . parsed = comments . Parse ( data . text ) if ( data . parsed and data . parsed . style == \"custom\" ) then if ( data . parsed . type == \"todo\" ) then table.insert ( TODOs , data ) end if ( data . parsed . type == \"bug\" ) then table.insert ( BUGs , data ) end if ( data . parsed . type == \"question\" ) then table.insert ( QUESTIONs , data ) end if ( data . parsed . type == \"fixme\" ) then table.insert ( FIXMEs , data ) end if ( data . parsed . type == \"how\" ) then table.insert ( HOWs , data ) end if ( data . parsed . type == \"info\" ) then table.insert ( INFOs , data ) end end return data Po\u010dty zdokumentovan\u00fdch rsp. nezdokumentovan\u00fdch funkcii sa po\u010d\u00edta pomocou jednoduch\u00fdch cyklov ako je vidie\u0165 ni\u017e\u0161ie. if ( data . metrics . functionDefinitions ~= nil ) then for k , v in pairs ( data . metrics . functionDefinitions ) do if ( v . documented == 1 ) then data . metrics . documentMetrics . documentedFunctionsCounter = data . metrics . documentMetrics . documentedFunctionsCounter + 1 else data . metrics . documentMetrics . nondocumentedFunctionsCounter = data . metrics . documentMetrics . nondocumentedFunctionsCounter + 1 end end end","title":"document_metrics.lua"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_unity/","text":"Unity \u00b6 Cel\u00e1 logika na\u010d\u00edtavania grafu v Unity sa za\u010d\u00edna v triede GraphLoader . Tento objekt sa nach\u00e1dza v sc\u00e9ne v Unity a pri na\u010d\u00edtan\u00ed sc\u00e9ny, sa podobne ako pri ostatn\u00fdch objektoch, ktor\u00e9 dedia od triedy MonoBehaviour, zavol\u00e1 funkcia Awake() . V tejto met\u00f3de sa najprv do listu konfigur\u00e1ci\u00ed, zap\u00ed\u0161e jedna alebo viacero konfigur\u00e1ci\u00ed, ktor\u00e9 zabezpe\u010duj\u00fa ak\u00fd graf sa na\u010d\u00edta, kde je ulo\u017een\u00fd, ak\u00fd algoritmus sa pou\u017eije a \u010fal\u0161ie in\u00e9 nastavite\u013en\u00e9 parametre. Configurations . Add ( new GraphConfiguration { Algorithm = LayoutAlgorithmsEnum . FruchtermanReingold , Path = $ \"{Application.streamingAssetsPath}/LuaScripts/Modules/say\" , GraphExtractor = GraphExtractor . ModuleGraph , OptionalParameters = new OptionalParameters { BuildingLayout = BuildingLayoutAlgorithmEnum . RowAlgorithm , FunctionType = FunctionTypeEnum . Cyclomatic , VariableType = VariableTypeEnum . None } }); \u010ealej sa tu zavol\u00e1 funkcia InvokeRepeating() , ktor\u00e1 zabezpe\u010duje aktualizovanie grafu ka\u017ed\u00fdch X sek\u00fand. Tu sa po\u0161l\u00fa tri parametre. Prv\u00fdm je n\u00e1zov funkcie, ktor\u00e1 sa m\u00e1 opakova\u0165, druh\u00fdm je \u010das, kedy sa funkcia prv\u00fd kr\u00e1t zavol\u00e1 a tret\u00edm je \u010dasov\u00fd interval medzi jednotliv\u00fdmi volaniami. V na\u0161om pr\u00edpade funkcia, ktor\u00e1 sa bude vola\u0165 opakovane, nesie n\u00e1zov UpdateGraph a taktie\u017e sa nach\u00e1dza v triede GraphLoader . InvokeRepeating ( nameof ( GraphLoader . UpdateGraph ), GraphLoader . UpdateTimeInitialDelayTime , GraphLoader . UpdateTimeRepeatingTime ); Samotn\u00e9 na\u010d\u00edtanie grafu sa uskuto\u010dn\u00ed zavolan\u00edm funckie LoadAllGraphs na objekte GraphManager . GraphManager je trieda, ktor\u00e1 sa nach\u00e1dza v module GraphCore a ako parameter sa tu po\u0161le zoznam s konfigur\u00e1ciami. GraphManager . LoadAllGraphs ( Configurations ); V tejto funkcii sa postupne prejd\u00fa jednotliv\u00e9 konfigur\u00e1cie a prostredn\u00edctvom LuaInterface.Instance.DoString() sa zavol\u00e1 met\u00f3da loadGraph() s konkr\u00e9tnou konfigur\u00e1ciou. N\u00e1sledne sa na novovytvorenom objekte LuaGraph zavol\u00e1 funkcia LoadGraph() , ktor\u00e1 na vstupe prijme index grafu. public void LoadAllGraphs ( List < GraphConfiguration > configurations ) { for ( var i = 0 ; i < configurations . Count ; ++ i ) { var configuration = configurations [ i ]; LuaInterface . Instance . DoString ( $ \"loadGraph({configuration.ToLuaTable()})\" ); var luaGraph = new LuaGraph (); luaGraph . LoadGraph ( i ); Graphs . Add ( new Graph ( luaGraph , configuration )); } } V tejto funkcii sa zavol\u00e1 met\u00f3da LuaGraphLoadGraph() , ktor\u00e1 vyvol\u00e1 met\u00f3du loadGraph() v module LuaGraph . N\u00e1sledne sa tu volaj\u00fa funkcie LoadNodes() , LoadEdges() a LoadIncidences() , ktor\u00e9 do pr\u00edslu\u0161n\u00fdch listov na\u010d\u00edtaj\u00fa objekty z Lua a namapuj\u00fa ich na tie, s ktor\u00fdmi sa pracuje v r\u00e1mci C#. V t\u00fdchto funkci\u00e1ch sa ka\u017ed\u00e9mu objektu prirad\u00ed iba Id a Label . public void LoadGraph ( int graphId ) { GraphId = graphId ; LuaGraphLoadGraph ( NativeObject , graphId ); Nodes = LoadNodes (); Edges = LoadEdges (); Incidences = LoadIncidences (); } protected IList < LuaNode > LoadNodes () { return MarshallingUtils . ReadArray < LuaNodeDTO , LuaNode >( LuaGraphGetNodesSize ( NativeObject ), a => LuaGraphGetNodes ( NativeObject , a ), a => MapNode ( a )) . ToList (); } private unsafe LuaNode MapNode ( IntPtr node ) { var nodeDTO = *( LuaNodeDTO *) node ; return new LuaNode ( nodeDTO . NativeLuaNode ) { Id = nodeDTO . Id , Label = MarshallingUtils . ReadString ( nodeDTO . Label ) ?? UnknownLabel }; } N\u00e1sledne sa na\u010d\u00edtan\u00fd objekt LuaGraph pretransformuje na objekt Graph a ten sa prid\u00e1 do listu grafov. V kon\u0161truktore objektu Graph sa nainicializuj\u00fa potrebn\u00e9 hodnoty a n\u00e1sledne sa zavol\u00e1 funkcia InitializeGraph() . public Graph ( LuaGraph luaGraph , GraphConfiguration configuration ) { LuaGraph = luaGraph ; LayoutManager = new LayoutManager ( LuaGraph . GraphId ); LayoutFactory = new LayoutFactory ( LuaGraph . GraphId ); Nodes = new ObservableCollection < Node >(); Edges = new ObservableCollection < Edge >(); luaNodesMapping = new List < Tuple < LuaNode , Node >>(); luaEdgesMapping = new List < Tuple < LuaEdge , Edge >>(); CurrentConfiguration = configuration ; InitializeGraph (); } V tejto funkcii sa op\u00e4\u0165 pretransformuj\u00fa jednotliv\u00e9 LuaObjekty na tie, potrebn\u00e9 pre \u010fal\u0161iu pr\u00e1cu. LuaNode -> Node , LuaEdge -> Edge . List s LuaIndices sa nevyu\u017e\u00edva. protected void InitializeGraph () { var luaNodes = LuaGraph . Nodes ; var luaEdges = LuaGraph . Edges ; var luaIncidences = LuaGraph . Incidences ; foreach ( var luaNode in luaNodes ) { var node = GraphObjectFactory . CreateNodeFromLuaNode ( luaNode ); if (! IsFiltered ( luaNode )) { Nodes . Add ( node ); } luaNodesMapping . Add (( luaNode , node ). ToTuple ()); } foreach ( var luaEdge in luaEdges ) { var sourceNodeId = luaEdge . Data . SourceId ; var destinationNodeId = luaEdge . Data . DestinationId ; var edge = GraphObjectFactory . CreateEdgeFromLuaEdge ( luaEdge , AllCreatedNodes . First ( node => node . Id == sourceNodeId ), AllCreatedNodes . First ( node => node . Id == destinationNodeId )); AllCreatedEdges . Add ( edge ); if (! edge . IsFiltered && IsVisible ( luaEdge )) { Edges . Add ( edge ); } luaEdgesMapping . Add (( luaEdge , edge ). ToTuple ()); } RecreateHierarchy (); } V nasleduj\u00facich funkci\u00e1ch je mo\u017en\u00e9 vidie\u0165, ak\u00e9 d\u00e1ta si jednotliv\u00e9 objekty uchov\u00e1vaj\u00fa. public static Node CreateNodeFromLuaNode ( LuaNode luaNode ) { return new Node { LuaNode = luaNode , Id = luaNode . Id , Label = luaNode . Label , Type = luaNode . RawData . GetString ( \"type\" ), Position = luaNode . Data . Position , Size = luaNode . Data . Size , IsFiltered = ( int ) luaNode . RawData . GetFloat ( \"filtered.value\" , true ) == 1 , // Fix this Color = luaNode . Data . Color , Shape = luaNode . Data . Shape , Flag = luaNode . Data . Flag , IsFixed = luaNode . Data . Layouter . GetBool ( \"isFixed\" ), EvolutionData = luaNode . Data . Evolution , }; } public static Edge CreateEdgeFromLuaEdge ( LuaEdge luaEdge , Node sourceNode , Node destinationNode ) { return new Edge { LuaEdge = luaEdge , Id = luaEdge . Id , SourceNode = sourceNode , DestinationNode = destinationNode , Label = luaEdge . Label , Flag = luaEdge . Data . Flag , Color = luaEdge . Data . Color , IsFiltered = sourceNode . IsFiltered || destinationNode . IsFiltered , }; } Poslednou met\u00f3dou, ktor\u00e1 sa vol\u00e1 vo funkcii InitializeGraph() je met\u00f3da RecreateHierarchy() , ktor\u00e1 zabezpe\u010duje to, aby sa pod\u013ea jednotliv\u00fdch hr\u00e1n vytvorili dvojice uzlov, ktor\u00e9 tieto hranu sp\u00e1jaj\u00fa. private void RecreateHierarchy () { Hierarchy = new List < Tuple < Node , Node >>(); foreach ( var edge in LuaGraph . Edges ) { if ( IsParent ( edge ) && ! IsFiltered ( edge )) { var sourceNode = Nodes . FirstOrDefault ( x => x . Id == edge . Data . SourceId ); var destinatioNode = Nodes . FirstOrDefault ( x => x . Id == edge . Data . DestinationId ); Hierarchy . Add ( new Tuple < Node , Node >( sourceNode , destinatioNode )); } } } T\u00fdmto sme prebehli cel\u00fa GraphCore vrstvu a m\u00f4\u017eeme sa vr\u00e1ti\u0165 do funkcie Awake() v triede GraphLoader . Tu n\u00e1m ostala e\u0161te jedna funkcia a to CreateGraphs() . T\u00e1 zabezpe\u010duje vytvorenie jednotliv\u00fdch objektov z pr\u00edslu\u0161n\u00e9ho prefabu pre graf. Ka\u017ed\u00fd tak\u00fdto objekt mus\u00ed obsahova\u0165 komponent GraphUnity . Nad t\u00fdmto komponentom sa zavol\u00e1 met\u00f3da InitializeGraph() , ktor\u00e1 in\u0161tancuje v\u0161etky vidite\u013en\u00e9 uzly a hrany pod\u013ea pr\u00edslu\u0161n\u00fdch prefabov prostredn\u00edctvom met\u00f3d CreateNode() a CreateEdge() . public void InitializeGraph ( CoreGraph graph ) { BaseGraph = graph ; nodes = graph . Nodes ; edges = graph . Edges ; if ( nodes != null ) { nodes . CollectionChanged += OnNodesChanged ; foreach ( var node in nodes ) { if (! node . IsFiltered ) CreateNode ( node ); } } if ( edges != null ) { edges . CollectionChanged += OnEdgesChanged ; foreach ( var edge in edges ) { if (! edge . IsFiltered ) CreateEdge ( edge ); } } if ( graph . Hierarchy != null ) { foreach ( var link in graph . Hierarchy ) { var source = nodeScripts . FirstOrDefault ( a => a . Id == link . Item1 . Id ); var destination = nodeScripts . FirstOrDefault ( a => a . Id == link . Item2 . Id ); destination . gameObject . transform . SetParent ( source . gameObject . transform , true ); destination . gameObject . transform . localPosition = new Vector3 ( destination . BaseObject . Position . X , destination . BaseObject . Position . Y , destination . BaseObject . Position . Z ); destination . gameObject . transform . localScale = new Vector3 ( 1 , 1 , 1 ); } } } private GameObject CreateNode ( Node node ) { GameObject nodePrefab = ( GameObject ) Instantiate ( Resources . Load ( GraphUnity . NodePrefabPath ), gameObject . transform ); var nodeScript = nodePrefab . GetComponent < NodeUnity >(); nodeScript . BaseObject = node ; nodeScript . Mesh = NodeMesh ; nodeScript . tag = GameObjectTags . Node ; nodeScripts . Add ( nodeScript ); nodePrefab . transform . localPosition = new Vector3 ( node . Position . X , node . Position . Y , node . Position . Z ); node . PropertyChanged += nodeScript . OnNodeChanged ; return nodePrefab ; } private void CreateEdge ( Edge edge ) { var source = nodeScripts . FirstOrDefault ( a => a . Id == edge . SourceNode . Id ); var destination = nodeScripts . FirstOrDefault ( a => a . Id == edge . DestinationNode . Id ); GameObject edgePrefab = ( GameObject ) Instantiate ( Resources . Load ( GraphUnity . EdgePrefabPath ), gameObject . transform ); var edgeScript = edgePrefab . GetComponent < EdgeUnity >(); edgeScript . BaseObject = edge ; edgeScript . Mesh = EdgeMesh ; edgeScript . SourceNode = source ; edgeScript . DestinationNode = destination ; edgeScripts . Add ( edgeScript ); }","title":"Unity"},{"location":"dokumentacia_k_produktu/funkcionalita_systemu/generovanie_grafu/analyza_unity/#unity","text":"Cel\u00e1 logika na\u010d\u00edtavania grafu v Unity sa za\u010d\u00edna v triede GraphLoader . Tento objekt sa nach\u00e1dza v sc\u00e9ne v Unity a pri na\u010d\u00edtan\u00ed sc\u00e9ny, sa podobne ako pri ostatn\u00fdch objektoch, ktor\u00e9 dedia od triedy MonoBehaviour, zavol\u00e1 funkcia Awake() . V tejto met\u00f3de sa najprv do listu konfigur\u00e1ci\u00ed, zap\u00ed\u0161e jedna alebo viacero konfigur\u00e1ci\u00ed, ktor\u00e9 zabezpe\u010duj\u00fa ak\u00fd graf sa na\u010d\u00edta, kde je ulo\u017een\u00fd, ak\u00fd algoritmus sa pou\u017eije a \u010fal\u0161ie in\u00e9 nastavite\u013en\u00e9 parametre. Configurations . Add ( new GraphConfiguration { Algorithm = LayoutAlgorithmsEnum . FruchtermanReingold , Path = $ \"{Application.streamingAssetsPath}/LuaScripts/Modules/say\" , GraphExtractor = GraphExtractor . ModuleGraph , OptionalParameters = new OptionalParameters { BuildingLayout = BuildingLayoutAlgorithmEnum . RowAlgorithm , FunctionType = FunctionTypeEnum . Cyclomatic , VariableType = VariableTypeEnum . None } }); \u010ealej sa tu zavol\u00e1 funkcia InvokeRepeating() , ktor\u00e1 zabezpe\u010duje aktualizovanie grafu ka\u017ed\u00fdch X sek\u00fand. Tu sa po\u0161l\u00fa tri parametre. Prv\u00fdm je n\u00e1zov funkcie, ktor\u00e1 sa m\u00e1 opakova\u0165, druh\u00fdm je \u010das, kedy sa funkcia prv\u00fd kr\u00e1t zavol\u00e1 a tret\u00edm je \u010dasov\u00fd interval medzi jednotliv\u00fdmi volaniami. V na\u0161om pr\u00edpade funkcia, ktor\u00e1 sa bude vola\u0165 opakovane, nesie n\u00e1zov UpdateGraph a taktie\u017e sa nach\u00e1dza v triede GraphLoader . InvokeRepeating ( nameof ( GraphLoader . UpdateGraph ), GraphLoader . UpdateTimeInitialDelayTime , GraphLoader . UpdateTimeRepeatingTime ); Samotn\u00e9 na\u010d\u00edtanie grafu sa uskuto\u010dn\u00ed zavolan\u00edm funckie LoadAllGraphs na objekte GraphManager . GraphManager je trieda, ktor\u00e1 sa nach\u00e1dza v module GraphCore a ako parameter sa tu po\u0161le zoznam s konfigur\u00e1ciami. GraphManager . LoadAllGraphs ( Configurations ); V tejto funkcii sa postupne prejd\u00fa jednotliv\u00e9 konfigur\u00e1cie a prostredn\u00edctvom LuaInterface.Instance.DoString() sa zavol\u00e1 met\u00f3da loadGraph() s konkr\u00e9tnou konfigur\u00e1ciou. N\u00e1sledne sa na novovytvorenom objekte LuaGraph zavol\u00e1 funkcia LoadGraph() , ktor\u00e1 na vstupe prijme index grafu. public void LoadAllGraphs ( List < GraphConfiguration > configurations ) { for ( var i = 0 ; i < configurations . Count ; ++ i ) { var configuration = configurations [ i ]; LuaInterface . Instance . DoString ( $ \"loadGraph({configuration.ToLuaTable()})\" ); var luaGraph = new LuaGraph (); luaGraph . LoadGraph ( i ); Graphs . Add ( new Graph ( luaGraph , configuration )); } } V tejto funkcii sa zavol\u00e1 met\u00f3da LuaGraphLoadGraph() , ktor\u00e1 vyvol\u00e1 met\u00f3du loadGraph() v module LuaGraph . N\u00e1sledne sa tu volaj\u00fa funkcie LoadNodes() , LoadEdges() a LoadIncidences() , ktor\u00e9 do pr\u00edslu\u0161n\u00fdch listov na\u010d\u00edtaj\u00fa objekty z Lua a namapuj\u00fa ich na tie, s ktor\u00fdmi sa pracuje v r\u00e1mci C#. V t\u00fdchto funkci\u00e1ch sa ka\u017ed\u00e9mu objektu prirad\u00ed iba Id a Label . public void LoadGraph ( int graphId ) { GraphId = graphId ; LuaGraphLoadGraph ( NativeObject , graphId ); Nodes = LoadNodes (); Edges = LoadEdges (); Incidences = LoadIncidences (); } protected IList < LuaNode > LoadNodes () { return MarshallingUtils . ReadArray < LuaNodeDTO , LuaNode >( LuaGraphGetNodesSize ( NativeObject ), a => LuaGraphGetNodes ( NativeObject , a ), a => MapNode ( a )) . ToList (); } private unsafe LuaNode MapNode ( IntPtr node ) { var nodeDTO = *( LuaNodeDTO *) node ; return new LuaNode ( nodeDTO . NativeLuaNode ) { Id = nodeDTO . Id , Label = MarshallingUtils . ReadString ( nodeDTO . Label ) ?? UnknownLabel }; } N\u00e1sledne sa na\u010d\u00edtan\u00fd objekt LuaGraph pretransformuje na objekt Graph a ten sa prid\u00e1 do listu grafov. V kon\u0161truktore objektu Graph sa nainicializuj\u00fa potrebn\u00e9 hodnoty a n\u00e1sledne sa zavol\u00e1 funkcia InitializeGraph() . public Graph ( LuaGraph luaGraph , GraphConfiguration configuration ) { LuaGraph = luaGraph ; LayoutManager = new LayoutManager ( LuaGraph . GraphId ); LayoutFactory = new LayoutFactory ( LuaGraph . GraphId ); Nodes = new ObservableCollection < Node >(); Edges = new ObservableCollection < Edge >(); luaNodesMapping = new List < Tuple < LuaNode , Node >>(); luaEdgesMapping = new List < Tuple < LuaEdge , Edge >>(); CurrentConfiguration = configuration ; InitializeGraph (); } V tejto funkcii sa op\u00e4\u0165 pretransformuj\u00fa jednotliv\u00e9 LuaObjekty na tie, potrebn\u00e9 pre \u010fal\u0161iu pr\u00e1cu. LuaNode -> Node , LuaEdge -> Edge . List s LuaIndices sa nevyu\u017e\u00edva. protected void InitializeGraph () { var luaNodes = LuaGraph . Nodes ; var luaEdges = LuaGraph . Edges ; var luaIncidences = LuaGraph . Incidences ; foreach ( var luaNode in luaNodes ) { var node = GraphObjectFactory . CreateNodeFromLuaNode ( luaNode ); if (! IsFiltered ( luaNode )) { Nodes . Add ( node ); } luaNodesMapping . Add (( luaNode , node ). ToTuple ()); } foreach ( var luaEdge in luaEdges ) { var sourceNodeId = luaEdge . Data . SourceId ; var destinationNodeId = luaEdge . Data . DestinationId ; var edge = GraphObjectFactory . CreateEdgeFromLuaEdge ( luaEdge , AllCreatedNodes . First ( node => node . Id == sourceNodeId ), AllCreatedNodes . First ( node => node . Id == destinationNodeId )); AllCreatedEdges . Add ( edge ); if (! edge . IsFiltered && IsVisible ( luaEdge )) { Edges . Add ( edge ); } luaEdgesMapping . Add (( luaEdge , edge ). ToTuple ()); } RecreateHierarchy (); } V nasleduj\u00facich funkci\u00e1ch je mo\u017en\u00e9 vidie\u0165, ak\u00e9 d\u00e1ta si jednotliv\u00e9 objekty uchov\u00e1vaj\u00fa. public static Node CreateNodeFromLuaNode ( LuaNode luaNode ) { return new Node { LuaNode = luaNode , Id = luaNode . Id , Label = luaNode . Label , Type = luaNode . RawData . GetString ( \"type\" ), Position = luaNode . Data . Position , Size = luaNode . Data . Size , IsFiltered = ( int ) luaNode . RawData . GetFloat ( \"filtered.value\" , true ) == 1 , // Fix this Color = luaNode . Data . Color , Shape = luaNode . Data . Shape , Flag = luaNode . Data . Flag , IsFixed = luaNode . Data . Layouter . GetBool ( \"isFixed\" ), EvolutionData = luaNode . Data . Evolution , }; } public static Edge CreateEdgeFromLuaEdge ( LuaEdge luaEdge , Node sourceNode , Node destinationNode ) { return new Edge { LuaEdge = luaEdge , Id = luaEdge . Id , SourceNode = sourceNode , DestinationNode = destinationNode , Label = luaEdge . Label , Flag = luaEdge . Data . Flag , Color = luaEdge . Data . Color , IsFiltered = sourceNode . IsFiltered || destinationNode . IsFiltered , }; } Poslednou met\u00f3dou, ktor\u00e1 sa vol\u00e1 vo funkcii InitializeGraph() je met\u00f3da RecreateHierarchy() , ktor\u00e1 zabezpe\u010duje to, aby sa pod\u013ea jednotliv\u00fdch hr\u00e1n vytvorili dvojice uzlov, ktor\u00e9 tieto hranu sp\u00e1jaj\u00fa. private void RecreateHierarchy () { Hierarchy = new List < Tuple < Node , Node >>(); foreach ( var edge in LuaGraph . Edges ) { if ( IsParent ( edge ) && ! IsFiltered ( edge )) { var sourceNode = Nodes . FirstOrDefault ( x => x . Id == edge . Data . SourceId ); var destinatioNode = Nodes . FirstOrDefault ( x => x . Id == edge . Data . DestinationId ); Hierarchy . Add ( new Tuple < Node , Node >( sourceNode , destinatioNode )); } } } T\u00fdmto sme prebehli cel\u00fa GraphCore vrstvu a m\u00f4\u017eeme sa vr\u00e1ti\u0165 do funkcie Awake() v triede GraphLoader . Tu n\u00e1m ostala e\u0161te jedna funkcia a to CreateGraphs() . T\u00e1 zabezpe\u010duje vytvorenie jednotliv\u00fdch objektov z pr\u00edslu\u0161n\u00e9ho prefabu pre graf. Ka\u017ed\u00fd tak\u00fdto objekt mus\u00ed obsahova\u0165 komponent GraphUnity . Nad t\u00fdmto komponentom sa zavol\u00e1 met\u00f3da InitializeGraph() , ktor\u00e1 in\u0161tancuje v\u0161etky vidite\u013en\u00e9 uzly a hrany pod\u013ea pr\u00edslu\u0161n\u00fdch prefabov prostredn\u00edctvom met\u00f3d CreateNode() a CreateEdge() . public void InitializeGraph ( CoreGraph graph ) { BaseGraph = graph ; nodes = graph . Nodes ; edges = graph . Edges ; if ( nodes != null ) { nodes . CollectionChanged += OnNodesChanged ; foreach ( var node in nodes ) { if (! node . IsFiltered ) CreateNode ( node ); } } if ( edges != null ) { edges . CollectionChanged += OnEdgesChanged ; foreach ( var edge in edges ) { if (! edge . IsFiltered ) CreateEdge ( edge ); } } if ( graph . Hierarchy != null ) { foreach ( var link in graph . Hierarchy ) { var source = nodeScripts . FirstOrDefault ( a => a . Id == link . Item1 . Id ); var destination = nodeScripts . FirstOrDefault ( a => a . Id == link . Item2 . Id ); destination . gameObject . transform . SetParent ( source . gameObject . transform , true ); destination . gameObject . transform . localPosition = new Vector3 ( destination . BaseObject . Position . X , destination . BaseObject . Position . Y , destination . BaseObject . Position . Z ); destination . gameObject . transform . localScale = new Vector3 ( 1 , 1 , 1 ); } } } private GameObject CreateNode ( Node node ) { GameObject nodePrefab = ( GameObject ) Instantiate ( Resources . Load ( GraphUnity . NodePrefabPath ), gameObject . transform ); var nodeScript = nodePrefab . GetComponent < NodeUnity >(); nodeScript . BaseObject = node ; nodeScript . Mesh = NodeMesh ; nodeScript . tag = GameObjectTags . Node ; nodeScripts . Add ( nodeScript ); nodePrefab . transform . localPosition = new Vector3 ( node . Position . X , node . Position . Y , node . Position . Z ); node . PropertyChanged += nodeScript . OnNodeChanged ; return nodePrefab ; } private void CreateEdge ( Edge edge ) { var source = nodeScripts . FirstOrDefault ( a => a . Id == edge . SourceNode . Id ); var destination = nodeScripts . FirstOrDefault ( a => a . Id == edge . DestinationNode . Id ); GameObject edgePrefab = ( GameObject ) Instantiate ( Resources . Load ( GraphUnity . EdgePrefabPath ), gameObject . transform ); var edgeScript = edgePrefab . GetComponent < EdgeUnity >(); edgeScript . BaseObject = edge ; edgeScript . Mesh = EdgeMesh ; edgeScript . SourceNode = source ; edgeScript . DestinationNode = destination ; edgeScripts . Add ( edgeScript ); }","title":"Unity"},{"location":"dokumentacia_k_produktu/globalne_ciele_projektu/letny_semester/","text":"\u2600\ufe0f Letn\u00fd semester \u00b6 Po zimnom semestri sa n\u00e1m vykry\u0161talizovalo, v \u010dom s\u00fa jednotliv\u00ed \u010dlenovia t\u00edmu dobr\u00ed, a \u010do na tomto projekte radi robia. To, aby jednotliv\u00ed \u010dlenovia t\u00edmu robili na tom, \u010do ich bav\u00ed, sme vn\u00edmali ako k\u013e\u00fa\u010dov\u00e9 pre plynul\u00e9 fungovanie t\u00edmu a pre celkov\u00fa efektivitu a postup pr\u00e1c na projekte. V zimnom semestri sme si dali za cie\u013e sfunk\u010dni\u0165 projekt 3DSoftViz na platforme macOS. Tento cie\u013e sa n\u00e1m za cel\u00fd semester nepodarilo splni\u0165, preto sme ho posunuli v r\u00e1mci prior\u00edt na posledn\u00e9 miesto a teda sme sa tejto problematike u\u017e \u010falej nevenovali. Prvotn\u00fdm cie\u013eom bola podrobn\u00e1 anal\u00fdza toho ako vznik\u00e1 graf na jednotliv\u00fdch vrstv\u00e1ch. Anal\u00fdza bola teda sp\u00edsan\u00e1 pre Unity \u010das\u0165, LuaDb a LuaMetrics a tie\u017e Lua k\u00f3dy integrovan\u00e9 vr\u00e1mci Unity. V\u00fdsledky boli vlo\u017een\u00e9 do dokument\u00e1cie k produktu. Hlavn\u00fdm cie\u013eom pre Unity \u010das\u0165, bola implement\u00e1cia funkcionality magnetov, ktorej sme sa za\u010dali venova\u0165 u\u017e v zimnom semestri. Postupne bolo implementovan\u00fdch nieko\u013eko napl\u00e1novan\u00fdch \u00faloh zo zimn\u00e9ho semestra. Konkr\u00e9tne boli implementovan\u00e9 dva typy magnetov, s ktor\u00fdmi je mo\u017en\u00e9 interagova\u0165 nieko\u013ek\u00fdmi sp\u00f4sobmi, ako napr\u00edlad ich pres\u00fava\u0165, sp\u00e1ja\u0165 s uzlami, nastavova\u0165 ve\u013ekos\u0165 magnetick\u00e9ho pola, ozna\u010dova\u0165 ich, odstra\u0148ova\u0165 alebo skr\u00fdva\u0165. Napriek tomu, \u017ee spom\u00ednan\u00e1 funkcionalita je implementovan\u00e1 zatia\u013e iba pre Desktop sc\u00e9nu, vn\u00edmame to za \u00faspech, nako\u013eko je mo\u017en\u00e9 t\u00fato funkcionalitu do bud\u00facna pomerne jednoducho roz\u0161\u00edri\u0165 aj na VR alebo AR sc\u00e9nu. \u010eal\u0161\u00edm z hlavn\u00fdch cie\u013eov pre letn\u00fd semester, bolo generovanie UML diagramov z grafu a jeho jednotliv\u00fdch uzlov, priamo v programe 3DSoftViz. Potrebn\u00e9 bolo vyu\u017ei\u0165 n\u00e1stroj PlantUML, ktor\u00fd dok\u00e1\u017ee tieto diagramy generova\u0165. N\u00e1sledn\u00e9 v\u00fdstupy bolo potrebn\u00e9 zobrazova\u0165 v integrovan\u00fdch prehliada\u010doch, ktor\u00e9 sa zobrazuj\u00fa ved\u013ea grafu. T\u00fato funkcionalitu m\u00f4\u017eeme pova\u017eova\u0165 za viac-menej hotov\u00fa, a\u017e na p\u00e1r drobn\u00fdch ch\u00fdb sp\u00f4soben\u00fdch samotn\u00fdm n\u00e1strojom PlantUML. To vn\u00edmame ako ve\u013ek\u00fd \u00faspech. Pokra\u010dovali sme vylep\u0161en\u00edm testov pre jednotliv\u00e9 Lua repozit\u00e1re. Podarilo sa n\u00e1m vylep\u0161i\u0165 Busted testy v moduloch LuaGit, LuaMetrics, LuaMeg a taktie\u017e vylep\u0161i\u0165 test coverage. \u010ealej boli implementovan\u00e9 komplexnej\u0161ie testy v module LuaMetrics. Tie\u017e boli implementovan\u00e9 \u010fal\u0161ie testy do modulov LuaDb, LuaMetrics, LuaMeg a LuaGit pri\u010dom boli upravovan\u00e9 aj jednotliv\u00e9 CI image. Men\u0161\u00edm cie\u013eom bolo vysk\u00fasa\u0165, \u010di je mo\u017en\u00e9 v n\u00e1stroji 3DSoftViz na\u010d\u00edta\u0165 nielen Lua projekty, ale aj projekty v jazyku Moonscript. T\u00e1to funkcionalita bola odsk\u00fa\u0161an\u00e1 a bol sp\u00edsan\u00fd report do dokument\u00e1cie, ako nie\u010do podobn\u00e9 zreprodukova\u0165. Jedn\u00fdm z v\u00fdskumn\u00fdch cie\u013eov bolo n\u00e1js\u0165 vhodn\u00e9 IDE na pr\u00e1cu s Lua projektami. Na tejto \u00falohe sa podie\u013ealo nieko\u013eko \u010dlenov t\u00edmu a spolo\u010dn\u00fdmi silami identifikovali ZeroBrane studio ako najvhodnej\u0161\u00ed n\u00e1stroj. Bol sp\u00edsan\u00fd v\u00fdstup, ktor\u00fd pom\u00f4\u017ee bud\u00facim program\u00e1torom spr\u00e1vne si toto IDE nastavi\u0165 a pou\u017e\u00edva\u0165 ho, \u010do im u\u013eah\u010d\u00ed pr\u00e1cu s projektami v jazyku Lua. \u010eal\u0161\u00edm cie\u013eom, podobne ako v zimnom semestri, bolo vylep\u0161enie infra\u0161trukt\u00fary projektu. Tu bolo dokon\u010den\u00fdch nieko\u013eko d\u00f4le\u017eit\u00fdch \u00faloh ako napr\u00edklad pridanie logovania do jednotliv\u00fdch Lua modulov, vylep\u0161enie a \u00faprava niektor\u00fdch CI image-ov, modifik\u00e1cia CMakeLists niektor\u00fdch Lua modulov a mnoho \u010fal\u0161\u00edch \u00faloh. Op\u00e4\u0165 s\u00fa to v\u00fdznamn\u00e9 \u00falohy z h\u013eadiska celkov\u00e9ho vylep\u0161enia projektu. V r\u00e1mci tohto semestra sme sa tie\u017e chceli chv\u00ed\u013eu povenova\u0165 udr\u017eiavate\u013enosti k\u00f3du. V r\u00e1mci niektor\u00fdch Lua modulov bolo vykonan\u00fdch nieko\u013eko \u00faprav, ako napr\u00edklad odstr\u00e1nenie zbyto\u010dn\u00fdch pr\u00e1zdnych riadkov, eliminovanie warningov a podobne, \u010do sa m\u00f4\u017eu javi\u0165 ako mali\u010dkosti, no op\u00e4\u0165 to ve\u013emi prispelo k celkovej kvalite k\u00f3du a jeho preh\u013eadnosti. Na za\u010diatku letn\u00e9ho semestra ciele neboli definovan\u00e9 priamo. Vznikali a vyn\u00e1rali sa v priebehu semestra a z na\u0161ej strany sme pomerne spokojn\u00ed s t\u00fdm, ako sa n\u00e1m ich darilo plni\u0165. Ka\u017ed\u00fd \u010dlen t\u00edmu svojim \u00fasil\u00edm prispel k nejedn\u00e9mu cie\u013eu, \u010do sa tie\u017e jav\u00ed ako \u00faspe\u0161n\u00e1 t\u00edmov\u00e1 spolupr\u00e1ca.","title":"\u2600\ufe0f Letn\u00fd semester"},{"location":"dokumentacia_k_produktu/globalne_ciele_projektu/letny_semester/#-letn\u00fd-semester","text":"Po zimnom semestri sa n\u00e1m vykry\u0161talizovalo, v \u010dom s\u00fa jednotliv\u00ed \u010dlenovia t\u00edmu dobr\u00ed, a \u010do na tomto projekte radi robia. To, aby jednotliv\u00ed \u010dlenovia t\u00edmu robili na tom, \u010do ich bav\u00ed, sme vn\u00edmali ako k\u013e\u00fa\u010dov\u00e9 pre plynul\u00e9 fungovanie t\u00edmu a pre celkov\u00fa efektivitu a postup pr\u00e1c na projekte. V zimnom semestri sme si dali za cie\u013e sfunk\u010dni\u0165 projekt 3DSoftViz na platforme macOS. Tento cie\u013e sa n\u00e1m za cel\u00fd semester nepodarilo splni\u0165, preto sme ho posunuli v r\u00e1mci prior\u00edt na posledn\u00e9 miesto a teda sme sa tejto problematike u\u017e \u010falej nevenovali. Prvotn\u00fdm cie\u013eom bola podrobn\u00e1 anal\u00fdza toho ako vznik\u00e1 graf na jednotliv\u00fdch vrstv\u00e1ch. Anal\u00fdza bola teda sp\u00edsan\u00e1 pre Unity \u010das\u0165, LuaDb a LuaMetrics a tie\u017e Lua k\u00f3dy integrovan\u00e9 vr\u00e1mci Unity. V\u00fdsledky boli vlo\u017een\u00e9 do dokument\u00e1cie k produktu. Hlavn\u00fdm cie\u013eom pre Unity \u010das\u0165, bola implement\u00e1cia funkcionality magnetov, ktorej sme sa za\u010dali venova\u0165 u\u017e v zimnom semestri. Postupne bolo implementovan\u00fdch nieko\u013eko napl\u00e1novan\u00fdch \u00faloh zo zimn\u00e9ho semestra. Konkr\u00e9tne boli implementovan\u00e9 dva typy magnetov, s ktor\u00fdmi je mo\u017en\u00e9 interagova\u0165 nieko\u013ek\u00fdmi sp\u00f4sobmi, ako napr\u00edlad ich pres\u00fava\u0165, sp\u00e1ja\u0165 s uzlami, nastavova\u0165 ve\u013ekos\u0165 magnetick\u00e9ho pola, ozna\u010dova\u0165 ich, odstra\u0148ova\u0165 alebo skr\u00fdva\u0165. Napriek tomu, \u017ee spom\u00ednan\u00e1 funkcionalita je implementovan\u00e1 zatia\u013e iba pre Desktop sc\u00e9nu, vn\u00edmame to za \u00faspech, nako\u013eko je mo\u017en\u00e9 t\u00fato funkcionalitu do bud\u00facna pomerne jednoducho roz\u0161\u00edri\u0165 aj na VR alebo AR sc\u00e9nu. \u010eal\u0161\u00edm z hlavn\u00fdch cie\u013eov pre letn\u00fd semester, bolo generovanie UML diagramov z grafu a jeho jednotliv\u00fdch uzlov, priamo v programe 3DSoftViz. Potrebn\u00e9 bolo vyu\u017ei\u0165 n\u00e1stroj PlantUML, ktor\u00fd dok\u00e1\u017ee tieto diagramy generova\u0165. N\u00e1sledn\u00e9 v\u00fdstupy bolo potrebn\u00e9 zobrazova\u0165 v integrovan\u00fdch prehliada\u010doch, ktor\u00e9 sa zobrazuj\u00fa ved\u013ea grafu. T\u00fato funkcionalitu m\u00f4\u017eeme pova\u017eova\u0165 za viac-menej hotov\u00fa, a\u017e na p\u00e1r drobn\u00fdch ch\u00fdb sp\u00f4soben\u00fdch samotn\u00fdm n\u00e1strojom PlantUML. To vn\u00edmame ako ve\u013ek\u00fd \u00faspech. Pokra\u010dovali sme vylep\u0161en\u00edm testov pre jednotliv\u00e9 Lua repozit\u00e1re. Podarilo sa n\u00e1m vylep\u0161i\u0165 Busted testy v moduloch LuaGit, LuaMetrics, LuaMeg a taktie\u017e vylep\u0161i\u0165 test coverage. \u010ealej boli implementovan\u00e9 komplexnej\u0161ie testy v module LuaMetrics. Tie\u017e boli implementovan\u00e9 \u010fal\u0161ie testy do modulov LuaDb, LuaMetrics, LuaMeg a LuaGit pri\u010dom boli upravovan\u00e9 aj jednotliv\u00e9 CI image. Men\u0161\u00edm cie\u013eom bolo vysk\u00fasa\u0165, \u010di je mo\u017en\u00e9 v n\u00e1stroji 3DSoftViz na\u010d\u00edta\u0165 nielen Lua projekty, ale aj projekty v jazyku Moonscript. T\u00e1to funkcionalita bola odsk\u00fa\u0161an\u00e1 a bol sp\u00edsan\u00fd report do dokument\u00e1cie, ako nie\u010do podobn\u00e9 zreprodukova\u0165. Jedn\u00fdm z v\u00fdskumn\u00fdch cie\u013eov bolo n\u00e1js\u0165 vhodn\u00e9 IDE na pr\u00e1cu s Lua projektami. Na tejto \u00falohe sa podie\u013ealo nieko\u013eko \u010dlenov t\u00edmu a spolo\u010dn\u00fdmi silami identifikovali ZeroBrane studio ako najvhodnej\u0161\u00ed n\u00e1stroj. Bol sp\u00edsan\u00fd v\u00fdstup, ktor\u00fd pom\u00f4\u017ee bud\u00facim program\u00e1torom spr\u00e1vne si toto IDE nastavi\u0165 a pou\u017e\u00edva\u0165 ho, \u010do im u\u013eah\u010d\u00ed pr\u00e1cu s projektami v jazyku Lua. \u010eal\u0161\u00edm cie\u013eom, podobne ako v zimnom semestri, bolo vylep\u0161enie infra\u0161trukt\u00fary projektu. Tu bolo dokon\u010den\u00fdch nieko\u013eko d\u00f4le\u017eit\u00fdch \u00faloh ako napr\u00edklad pridanie logovania do jednotliv\u00fdch Lua modulov, vylep\u0161enie a \u00faprava niektor\u00fdch CI image-ov, modifik\u00e1cia CMakeLists niektor\u00fdch Lua modulov a mnoho \u010fal\u0161\u00edch \u00faloh. Op\u00e4\u0165 s\u00fa to v\u00fdznamn\u00e9 \u00falohy z h\u013eadiska celkov\u00e9ho vylep\u0161enia projektu. V r\u00e1mci tohto semestra sme sa tie\u017e chceli chv\u00ed\u013eu povenova\u0165 udr\u017eiavate\u013enosti k\u00f3du. V r\u00e1mci niektor\u00fdch Lua modulov bolo vykonan\u00fdch nieko\u013eko \u00faprav, ako napr\u00edklad odstr\u00e1nenie zbyto\u010dn\u00fdch pr\u00e1zdnych riadkov, eliminovanie warningov a podobne, \u010do sa m\u00f4\u017eu javi\u0165 ako mali\u010dkosti, no op\u00e4\u0165 to ve\u013emi prispelo k celkovej kvalite k\u00f3du a jeho preh\u013eadnosti. Na za\u010diatku letn\u00e9ho semestra ciele neboli definovan\u00e9 priamo. Vznikali a vyn\u00e1rali sa v priebehu semestra a z na\u0161ej strany sme pomerne spokojn\u00ed s t\u00fdm, ako sa n\u00e1m ich darilo plni\u0165. Ka\u017ed\u00fd \u010dlen t\u00edmu svojim \u00fasil\u00edm prispel k nejedn\u00e9mu cie\u013eu, \u010do sa tie\u017e jav\u00ed ako \u00faspe\u0161n\u00e1 t\u00edmov\u00e1 spolupr\u00e1ca.","title":"\u2600\ufe0f Letn\u00fd semester"},{"location":"dokumentacia_k_produktu/globalne_ciele_projektu/zimny_semester/","text":"\u2744\ufe0f Zimn\u00fd semester \u00b6 Nako\u013eko sa jedn\u00e1 o u\u017e zabehnut\u00fd a existuj\u00faci projekt, prvotn\u00fdm cie\u013eom na zimn\u00fdm semester bolo, d\u00f4kladne sa s n\u00edm zozn\u00e1mi\u0165. To sa n\u00e1m z ve\u013ekej \u010dasti aj podarilo. Spoznali sme jeho netrivi\u00e1lnu architekt\u00faru, ak\u00e1 funkcionalita implementovan\u00e1 u\u017e je a ak\u00e1 sa nach\u00e1dza v roadmape tohto projektu. Ve\u013ek\u00fdm cie\u013eom na zimn\u00fd semester bolo, sfunk\u010dnenie tohto projektu na platforme macOS. Tomu sa intenz\u00edvne venoval menovite \u010dlen t\u00edmu Ladislav Zemko spolu s ved\u00facim. Podarilo sa im pokori\u0165 nieko\u013eko prek\u00e1\u017eok, no napriek obrovskej vynalo\u017eenej n\u00e1mahe, ve\u013ea z nich ostalo e\u0161te neprelomen\u00fdch. Vzh\u013eadom na to, \u017ee tento cie\u013e vn\u00edmame cel\u00fd t\u00edm ako pomerne k\u013e\u00fa\u010dov\u00fd, najm\u00e4 aj pre bud\u00faci v\u00fdvoj, ver\u00edme, \u017ee u\u017e \u010doskoro sa ho podar\u00ed naplni\u0165. V r\u00e1mci pokusov o sfunk\u010dnenie tohto projektu na platformu macOS, bol implementovan\u00fd modul Luapower, ktor\u00fd sa zatia\u013e pou\u017e\u00edva iba na tejto platforme. Na platformu Windows ho \u017eia\u013e z d\u00f4vodu do\u010dasn\u00fdch probl\u00e9mov na strane tvorcov tohto modulu, nie je mo\u017en\u00e9 prida\u0165. \u010eal\u0161\u00edm z cie\u013eov, ktor\u00e9 sa podarilo pomerne r\u00fdchlo naplni\u0165, bolo automatick\u00e9 testovanie LuaRocks repozit\u00e1rov. T\u00e1to funkcionalita bola pomerne mal\u00e1, no za to ve\u013emi potrebn\u00e1 pre niektor\u00fdch bakal\u00e1rskych \u0161tudentov. Bol teda vytvoren\u00fd skript, ktor\u00fd spust\u00ed funkcionalitu modulu LuaDb nad v\u0161etk\u00fdmi existuj\u00facimi LuaRocks bal\u00edkmi. Conitinuous integration bol cie\u013e s\u00e1m o sebe. Bolo tu mno\u017estvo \u00faloh, ktor\u00e9 bolo treba implementova\u0165. Podarilo sa optimalizova\u0165 CI pre modul LuaInterface a taktie\u017e bolo vytvoren\u00e9 CI pre nasadzovanie webovej str\u00e1nky tohto projektu a tie\u017e pre generovanie dokument\u00e1cie. \u010eal\u0161ou funkcionalitou, ktor\u00e1 bola napl\u00e1novan\u00e1 bolo vylep\u0161enie interakcie s grafom a teda implement\u00e1cia ovl\u00e1dac\u00edch prvkov ak\u00fdmi s\u00fa magnety alebo obmedzova\u010de. Obmedzova\u010de v syst\u00e9me s ve\u013ekej \u010dasti implementovan\u00e9 u\u017e s\u00fa, no bolo by potrebn\u00e9 ich dokon\u010di\u0165 a vyladi\u0165. V r\u00e1mci tejto funkcionality bola uskuto\u010dnen\u00e1 anal\u00fdza aktu\u00e1lneho stavu. Tento cie\u013e sa pravdepodobne prenesie na neskor\u0161ie obdobie, nako\u013eko zatia\u013e nie je ve\u013ekou prioritou. Funkcionalita magnetov bola taktie\u017e zanalyzovan\u00e1, no narozdiel od obmedzova\u010dov, tu bolo doteraz implementovan\u00e9 zatia\u013e ve\u013emi m\u00e1lo. Preto sme sa tejto funkcionalite za\u010dali venova\u0165 a zop\u00e1r \u00faloh bolo aj dokon\u010den\u00fdch. Zbytok sa v\u0161ak pravdepodobne prenesie do nasleduj\u00faceho semestra. Nako\u013eko bol tento projekt pre v\u00fdvojov\u00fd t\u00edm nov\u00fd, cie\u013ee boli na za\u010diatku semestra stanoven\u00e9 viacmenej nepriamo. Na konci semestra m\u00f4\u017eeme v\u0161ak zhodnoti\u0165, \u017ee bolo implementovan\u00e9 primeran\u00e9 mno\u017estvo r\u00f4znorodej funkcionality, \u010do naplnilo o\u010dak\u00e1vania.","title":"\u2744\ufe0f Zimn\u00fd semester"},{"location":"dokumentacia_k_produktu/globalne_ciele_projektu/zimny_semester/#-zimn\u00fd-semester","text":"Nako\u013eko sa jedn\u00e1 o u\u017e zabehnut\u00fd a existuj\u00faci projekt, prvotn\u00fdm cie\u013eom na zimn\u00fdm semester bolo, d\u00f4kladne sa s n\u00edm zozn\u00e1mi\u0165. To sa n\u00e1m z ve\u013ekej \u010dasti aj podarilo. Spoznali sme jeho netrivi\u00e1lnu architekt\u00faru, ak\u00e1 funkcionalita implementovan\u00e1 u\u017e je a ak\u00e1 sa nach\u00e1dza v roadmape tohto projektu. Ve\u013ek\u00fdm cie\u013eom na zimn\u00fd semester bolo, sfunk\u010dnenie tohto projektu na platforme macOS. Tomu sa intenz\u00edvne venoval menovite \u010dlen t\u00edmu Ladislav Zemko spolu s ved\u00facim. Podarilo sa im pokori\u0165 nieko\u013eko prek\u00e1\u017eok, no napriek obrovskej vynalo\u017eenej n\u00e1mahe, ve\u013ea z nich ostalo e\u0161te neprelomen\u00fdch. Vzh\u013eadom na to, \u017ee tento cie\u013e vn\u00edmame cel\u00fd t\u00edm ako pomerne k\u013e\u00fa\u010dov\u00fd, najm\u00e4 aj pre bud\u00faci v\u00fdvoj, ver\u00edme, \u017ee u\u017e \u010doskoro sa ho podar\u00ed naplni\u0165. V r\u00e1mci pokusov o sfunk\u010dnenie tohto projektu na platformu macOS, bol implementovan\u00fd modul Luapower, ktor\u00fd sa zatia\u013e pou\u017e\u00edva iba na tejto platforme. Na platformu Windows ho \u017eia\u013e z d\u00f4vodu do\u010dasn\u00fdch probl\u00e9mov na strane tvorcov tohto modulu, nie je mo\u017en\u00e9 prida\u0165. \u010eal\u0161\u00edm z cie\u013eov, ktor\u00e9 sa podarilo pomerne r\u00fdchlo naplni\u0165, bolo automatick\u00e9 testovanie LuaRocks repozit\u00e1rov. T\u00e1to funkcionalita bola pomerne mal\u00e1, no za to ve\u013emi potrebn\u00e1 pre niektor\u00fdch bakal\u00e1rskych \u0161tudentov. Bol teda vytvoren\u00fd skript, ktor\u00fd spust\u00ed funkcionalitu modulu LuaDb nad v\u0161etk\u00fdmi existuj\u00facimi LuaRocks bal\u00edkmi. Conitinuous integration bol cie\u013e s\u00e1m o sebe. Bolo tu mno\u017estvo \u00faloh, ktor\u00e9 bolo treba implementova\u0165. Podarilo sa optimalizova\u0165 CI pre modul LuaInterface a taktie\u017e bolo vytvoren\u00e9 CI pre nasadzovanie webovej str\u00e1nky tohto projektu a tie\u017e pre generovanie dokument\u00e1cie. \u010eal\u0161ou funkcionalitou, ktor\u00e1 bola napl\u00e1novan\u00e1 bolo vylep\u0161enie interakcie s grafom a teda implement\u00e1cia ovl\u00e1dac\u00edch prvkov ak\u00fdmi s\u00fa magnety alebo obmedzova\u010de. Obmedzova\u010de v syst\u00e9me s ve\u013ekej \u010dasti implementovan\u00e9 u\u017e s\u00fa, no bolo by potrebn\u00e9 ich dokon\u010di\u0165 a vyladi\u0165. V r\u00e1mci tejto funkcionality bola uskuto\u010dnen\u00e1 anal\u00fdza aktu\u00e1lneho stavu. Tento cie\u013e sa pravdepodobne prenesie na neskor\u0161ie obdobie, nako\u013eko zatia\u013e nie je ve\u013ekou prioritou. Funkcionalita magnetov bola taktie\u017e zanalyzovan\u00e1, no narozdiel od obmedzova\u010dov, tu bolo doteraz implementovan\u00e9 zatia\u013e ve\u013emi m\u00e1lo. Preto sme sa tejto funkcionalite za\u010dali venova\u0165 a zop\u00e1r \u00faloh bolo aj dokon\u010den\u00fdch. Zbytok sa v\u0161ak pravdepodobne prenesie do nasleduj\u00faceho semestra. Nako\u013eko bol tento projekt pre v\u00fdvojov\u00fd t\u00edm nov\u00fd, cie\u013ee boli na za\u010diatku semestra stanoven\u00e9 viacmenej nepriamo. Na konci semestra m\u00f4\u017eeme v\u0161ak zhodnoti\u0165, \u017ee bolo implementovan\u00e9 primeran\u00e9 mno\u017estvo r\u00f4znorodej funkcionality, \u010do naplnilo o\u010dak\u00e1vania.","title":"\u2744\ufe0f Zimn\u00fd semester"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/","text":"3DSoftvis_Remake \u00b6 Build syst\u00e9m projektu 3DSoftvis_Remake je zlo\u017een\u00fd z ve\u013ek\u00e9ho mno\u017estva modulov, ktor\u00e9 do projektu vn\u00e1\u0161aj\u00fa zna\u010dn\u00fa mieru z\u00e1vislosti. T\u00fdm je komplexnos\u0165 cel\u00e9ho rie\u0161enia zv\u00fd\u0161en\u00e1. Z\u00e1rove\u0148 v\u0161ak umo\u017e\u0148uje modifikova\u0165 projekt na \u00farovni jednotliv\u00fdch modulov. Zlo\u017eitos\u0165 cel\u00e9ho rie\u0161enia spo\u010d\u00edva v prepojen\u00ed 3 programovac\u00edch jazykov (pokia\u013e nepo\u010d\u00edtame syntax CMake). V jazyku Lua s\u00fa reprezentovan\u00e9 jednotliv\u00e9 grafov\u00e9 \u0161trukt\u00fary. Unity, v ktorom je vytvoren\u00e1 prezen\u010dn\u00e1 \u010das\u0165 aplik\u00e1cie na svoju \u010dinnos\u0165 vyu\u017e\u00edva moduly, ktor\u00e9 s\u00fa vytvoren\u00e9 v jazyku C#. Aby v\u0161ak bolo mo\u017en\u00e9 zabezpe\u010di\u0165 komunik\u00e1ciu medzi jazykmi Lua a C#, je nevyhnutn\u00e9 pou\u017ei\u0165 jazyk C++, v ktorom s\u00fa implementovan\u00e9 moduly LuaInterface a LuaGraph . Build syst\u00e9m projektu mus\u00ed teda zabezpe\u010di\u0165 build jednotliv\u00fdch C++ modulov a aj C# modulov a n\u00e1sledne ich skop\u00edrova\u0165 do pr\u00edslu\u0161nej adres\u00e1rovej \u0161trukt\u00fary. V projekte Unity pou\u017e\u00edva C# moduly. C# moduly k svojej \u010dinnosti potrebuj\u00fa dynamick\u00e9 kni\u017enice vytvoren\u00e9 v C++ - LuaInterface a LuaGraph . C++ prostredn\u00edctvom kni\u017en\u00edc, bli\u017e\u0161ie \u0161pecifikovan\u00fdch pri obidvoch moduloch, dok\u00e1\u017ee komunikova\u0165 s jazykom Lua, pr\u00edpadne jeho nadstavbou - Terra. Testovanie C# modulov je realizovan\u00e9 prostredn\u00edctvom frameworku NUnit. Pokyny pre build projektu pre platformy MS Windows a macOS s\u00fa uveden\u00e9 v in\u0161tala\u010dnej pr\u00edru\u010dke. Prerekvizity \u00b6 Prerekvizity uv\u00e1dzame v in\u0161tala\u010dnej pr\u00edru\u010dke pre Windows a macOS . Prep\u00edna\u010de \u00b6 Pri zostavovan\u00ed projektu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov. BUILD_UNITY \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da bude zbuildovan\u00e1 aj Unity \u010das\u0165 projektu - je potrebn\u00e9 ma\u0165 Unity nain\u0161talovan\u00e9. BUILD_SOFTVIZ_MODULES_TESTS \u00b6 Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee bud\u00fa zbuildovan\u00e9 jednotkov\u00e9 testy C# modulov. RUN_IMPORTER_TEST \u00b6 S pou\u017eit\u00edm prep\u00edna\u010da d\u00f4jde k spusteniu testu importovania grafu prostredn\u00edctvom modulu Busted USE_TERRA_BINARIES \u00b6 Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra . Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : Terra (v pr\u00edpade implement\u00e1cie pre macOS je zahrnut\u00e1 v implement\u00e1cii Luapower) Lua (v pr\u00edpade implement\u00e1cie pre macOS je pou\u017eit\u00e1 implement\u00e1cia LuaJIT, ktor\u00e1 je s\u00fa\u010das\u0165ou bal\u00edka Luapower) LuaGraph - modul na pr\u00e1cu s grafov\u00fdmi \u0161trukt\u00farami (modul automaticky stiahne a zbuilduje aj modul LuaInterface - rozhranie medzi jazykmi C#, C++ a Lua) doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luafilesystem - s\u00faborov\u00fd syst\u00e9m pre jazyk Lua lualogging - API na logovanie v jazyku Lua StackTracePlus - modul poskytuje vylep\u0161en\u00fd StackTrace pre debug v jazyku Lua luasocket - sie\u0165ov\u00e1 podpora pre jazyk Lua mobdebug - vzdialen\u00fd debugger pre jazyk Lua luacov - analyz\u00e1tor pokrytia zdrojov\u00e9ho k\u00f3du luacheck - statick\u00fd analyz\u00e1tor jazyka Lua lua_cliargs - kni\u017enica na spracovanie command-line argumentov luasystem - platformovo nez\u00e1visl\u00e1 kni\u017enica na vykon\u00e1vanie syst\u00e9mov\u00fdch volan\u00ed dkjson - JSON modul pre jazyk Lua say - modul pre ukladanie mapovan\u00ed k\u013e\u00fa\u010d-hodnota luassert - roz\u0161\u00edren\u00fd testovac\u00ed modul lua-term - kni\u017enica pre pr\u00e1cu s termin\u00e1lom penlight - kni\u017enica poskytuje input data handling, funkcion\u00e1lne programovanie a spr\u00e1vu ciest OS mediator_lua - kni\u017enica na spr\u00e1vu udalost\u00ed (events) busted - framework pre testovanie luacomments - parser Lua koment\u00e1rov luameg - Moonscript parser luadb - modul na anal\u00fdzu hypergraph \u0161trukt\u00far luagit - modul pre jazyk Lua umo\u017e\u0148uj\u00faci pr\u00edstup ku Git repozit\u00e1rom","title":"3DSoftvis_Remake"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#3dsoftvis_remake","text":"Build syst\u00e9m projektu 3DSoftvis_Remake je zlo\u017een\u00fd z ve\u013ek\u00e9ho mno\u017estva modulov, ktor\u00e9 do projektu vn\u00e1\u0161aj\u00fa zna\u010dn\u00fa mieru z\u00e1vislosti. T\u00fdm je komplexnos\u0165 cel\u00e9ho rie\u0161enia zv\u00fd\u0161en\u00e1. Z\u00e1rove\u0148 v\u0161ak umo\u017e\u0148uje modifikova\u0165 projekt na \u00farovni jednotliv\u00fdch modulov. Zlo\u017eitos\u0165 cel\u00e9ho rie\u0161enia spo\u010d\u00edva v prepojen\u00ed 3 programovac\u00edch jazykov (pokia\u013e nepo\u010d\u00edtame syntax CMake). V jazyku Lua s\u00fa reprezentovan\u00e9 jednotliv\u00e9 grafov\u00e9 \u0161trukt\u00fary. Unity, v ktorom je vytvoren\u00e1 prezen\u010dn\u00e1 \u010das\u0165 aplik\u00e1cie na svoju \u010dinnos\u0165 vyu\u017e\u00edva moduly, ktor\u00e9 s\u00fa vytvoren\u00e9 v jazyku C#. Aby v\u0161ak bolo mo\u017en\u00e9 zabezpe\u010di\u0165 komunik\u00e1ciu medzi jazykmi Lua a C#, je nevyhnutn\u00e9 pou\u017ei\u0165 jazyk C++, v ktorom s\u00fa implementovan\u00e9 moduly LuaInterface a LuaGraph . Build syst\u00e9m projektu mus\u00ed teda zabezpe\u010di\u0165 build jednotliv\u00fdch C++ modulov a aj C# modulov a n\u00e1sledne ich skop\u00edrova\u0165 do pr\u00edslu\u0161nej adres\u00e1rovej \u0161trukt\u00fary. V projekte Unity pou\u017e\u00edva C# moduly. C# moduly k svojej \u010dinnosti potrebuj\u00fa dynamick\u00e9 kni\u017enice vytvoren\u00e9 v C++ - LuaInterface a LuaGraph . C++ prostredn\u00edctvom kni\u017en\u00edc, bli\u017e\u0161ie \u0161pecifikovan\u00fdch pri obidvoch moduloch, dok\u00e1\u017ee komunikova\u0165 s jazykom Lua, pr\u00edpadne jeho nadstavbou - Terra. Testovanie C# modulov je realizovan\u00e9 prostredn\u00edctvom frameworku NUnit. Pokyny pre build projektu pre platformy MS Windows a macOS s\u00fa uveden\u00e9 v in\u0161tala\u010dnej pr\u00edru\u010dke.","title":"3DSoftvis_Remake"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#prerekvizity","text":"Prerekvizity uv\u00e1dzame v in\u0161tala\u010dnej pr\u00edru\u010dke pre Windows a macOS .","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#prep\u00edna\u010de","text":"Pri zostavovan\u00ed projektu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov.","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#build_unity","text":"Pou\u017eit\u00edm prep\u00edna\u010da bude zbuildovan\u00e1 aj Unity \u010das\u0165 projektu - je potrebn\u00e9 ma\u0165 Unity nain\u0161talovan\u00e9.","title":"BUILD_UNITY"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#build_softviz_modules_tests","text":"Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee bud\u00fa zbuildovan\u00e9 jednotkov\u00e9 testy C# modulov.","title":"BUILD_SOFTVIZ_MODULES_TESTS"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#run_importer_test","text":"S pou\u017eit\u00edm prep\u00edna\u010da d\u00f4jde k spusteniu testu importovania grafu prostredn\u00edctvom modulu Busted","title":"RUN_IMPORTER_TEST"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#use_terra_binaries","text":"Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra .","title":"USE_TERRA_BINARIES"},{"location":"dokumentacia_k_produktu/infrastruktura/build/3dsoftvis_remake/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : Terra (v pr\u00edpade implement\u00e1cie pre macOS je zahrnut\u00e1 v implement\u00e1cii Luapower) Lua (v pr\u00edpade implement\u00e1cie pre macOS je pou\u017eit\u00e1 implement\u00e1cia LuaJIT, ktor\u00e1 je s\u00fa\u010das\u0165ou bal\u00edka Luapower) LuaGraph - modul na pr\u00e1cu s grafov\u00fdmi \u0161trukt\u00farami (modul automaticky stiahne a zbuilduje aj modul LuaInterface - rozhranie medzi jazykmi C#, C++ a Lua) doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luafilesystem - s\u00faborov\u00fd syst\u00e9m pre jazyk Lua lualogging - API na logovanie v jazyku Lua StackTracePlus - modul poskytuje vylep\u0161en\u00fd StackTrace pre debug v jazyku Lua luasocket - sie\u0165ov\u00e1 podpora pre jazyk Lua mobdebug - vzdialen\u00fd debugger pre jazyk Lua luacov - analyz\u00e1tor pokrytia zdrojov\u00e9ho k\u00f3du luacheck - statick\u00fd analyz\u00e1tor jazyka Lua lua_cliargs - kni\u017enica na spracovanie command-line argumentov luasystem - platformovo nez\u00e1visl\u00e1 kni\u017enica na vykon\u00e1vanie syst\u00e9mov\u00fdch volan\u00ed dkjson - JSON modul pre jazyk Lua say - modul pre ukladanie mapovan\u00ed k\u013e\u00fa\u010d-hodnota luassert - roz\u0161\u00edren\u00fd testovac\u00ed modul lua-term - kni\u017enica pre pr\u00e1cu s termin\u00e1lom penlight - kni\u017enica poskytuje input data handling, funkcion\u00e1lne programovanie a spr\u00e1vu ciest OS mediator_lua - kni\u017enica na spr\u00e1vu udalost\u00ed (events) busted - framework pre testovanie luacomments - parser Lua koment\u00e1rov luameg - Moonscript parser luadb - modul na anal\u00fdzu hypergraph \u0161trukt\u00far luagit - modul pre jazyk Lua umo\u017e\u0148uj\u00faci pr\u00edstup ku Git repozit\u00e1rom","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/build_system/","text":"Build system \u00b6 Build syst\u00e9mu je vykon\u00e1van\u00fd prostredn\u00edctvom n\u00e1stroja make , ktor\u00fd je zn\u00e1my z prostredia unixov\u00fdch opera\u010dn\u00fdch syst\u00e9mov. \u010eal\u0161ou mo\u017enou alternat\u00edvou je pou\u017eitie v\u00fdvojov\u00e9ho prostredia Visual Studio pre platformu MS Windows. Generovanie s\u00faborov potrebn\u00fdch pre build je vykonan\u00e9 n\u00e1strojom CMake , v ktorom je mo\u017en\u00e9 \u0161pecifikova\u0165, pre ktor\u00fd build syst\u00e9m maj\u00fa by\u0165 s\u00fabory ur\u010den\u00e9. Build syst\u00e9m 3DSoftviz_Remake je zlo\u017een\u00fd z build s\u00faborov pre jednotliv\u00e9 moduly, na vrchole ktor\u00fdch je build samotnej aplik\u00e1cie. Jednotliv\u00e9 repozit\u00e1re obsahuj\u00fa s\u00fabor s n\u00e1zvom CMakeLists.txt , ktor\u00fd obsahuje postupnos\u0165 krokov, ktor\u00e1 m\u00e1 by\u0165 vykonan\u00e1. Ide preva\u017ene o vytvorenie Makefile s\u00faborov, nastavenie premenn\u00fdch prostredia a taktie\u017e nastavenie pr\u00edznakov pre kompil\u00e1tor. V n\u00e1stroji CMake je mo\u017en\u00e9 definova\u0165 viacer\u00e9 z\u00e1vilosti. Najsk\u00f4r teda d\u00f4jde k buildu jednotliv\u00fdch modulov a a\u017e n\u00e1sledne C# modulov a Unity. V\u0161etky potrebn\u00e9 moduly s\u00fa n\u00e1strojom stiahnut\u00e9 z GitLab a GitHub repozit\u00e1rov. V pr\u00edpade, ak zlyha build niektor\u00e9ho z modulov, zlyh\u00e1 cel\u00fd build proces.","title":"Build system"},{"location":"dokumentacia_k_produktu/infrastruktura/build/build_system/#build-system","text":"Build syst\u00e9mu je vykon\u00e1van\u00fd prostredn\u00edctvom n\u00e1stroja make , ktor\u00fd je zn\u00e1my z prostredia unixov\u00fdch opera\u010dn\u00fdch syst\u00e9mov. \u010eal\u0161ou mo\u017enou alternat\u00edvou je pou\u017eitie v\u00fdvojov\u00e9ho prostredia Visual Studio pre platformu MS Windows. Generovanie s\u00faborov potrebn\u00fdch pre build je vykonan\u00e9 n\u00e1strojom CMake , v ktorom je mo\u017en\u00e9 \u0161pecifikova\u0165, pre ktor\u00fd build syst\u00e9m maj\u00fa by\u0165 s\u00fabory ur\u010den\u00e9. Build syst\u00e9m 3DSoftviz_Remake je zlo\u017een\u00fd z build s\u00faborov pre jednotliv\u00e9 moduly, na vrchole ktor\u00fdch je build samotnej aplik\u00e1cie. Jednotliv\u00e9 repozit\u00e1re obsahuj\u00fa s\u00fabor s n\u00e1zvom CMakeLists.txt , ktor\u00fd obsahuje postupnos\u0165 krokov, ktor\u00e1 m\u00e1 by\u0165 vykonan\u00e1. Ide preva\u017ene o vytvorenie Makefile s\u00faborov, nastavenie premenn\u00fdch prostredia a taktie\u017e nastavenie pr\u00edznakov pre kompil\u00e1tor. V n\u00e1stroji CMake je mo\u017en\u00e9 definova\u0165 viacer\u00e9 z\u00e1vilosti. Najsk\u00f4r teda d\u00f4jde k buildu jednotliv\u00fdch modulov a a\u017e n\u00e1sledne C# modulov a Unity. V\u0161etky potrebn\u00e9 moduly s\u00fa n\u00e1strojom stiahnut\u00e9 z GitLab a GitHub repozit\u00e1rov. V pr\u00edpade, ak zlyha build niektor\u00e9ho z modulov, zlyh\u00e1 cel\u00fd build proces.","title":"Build system"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cmake/","text":"CMake \u00b6 V r\u00e1mci cel\u00e9ho projektu je pou\u017eit\u00fd n\u00e1stroj CMake, ktor\u00fd v\u00fdrazne zjednodu\u0161uje zostavovanie, testovanie a bal\u00edkovanie projektu. Ka\u017ed\u00fd modul, ktor\u00fd vyu\u017e\u00edva CMake obsahuje konfigura\u010dn\u00fd s\u00fabor CMakeLists.txt . Na z\u00e1klade konfigura\u010dn\u00e9ho s\u00faboru je potom vytvoren\u00fd jeden alebo viacero Makefiles na Unix platform\u00e1ch, pr\u00edpadne projekt/workspace na platforme Windows. V\u00fdhod tohto rie\u0161enia je viacero, medzi hlavn\u00e9 patria : - podpora viacn\u00e1sobnej z\u00e1vislosti, - spolupr\u00e1ca s n\u00e1strojom Git, - mo\u017enos\u0165 defin\u00edcie makier, pr\u00edkazov a funkci\u00ed, - mo\u017enos\u0165 definova\u0165 poradie vykon\u00e1vania - z\u00e1vislos\u0165 pri kompil\u00e1cii a linkovan\u00ed. - mo\u017enos\u0165 parametrizova\u0165 spr\u00e1vanie - podpora multiplatformov\u00fdch rie\u0161en\u00ed Preh\u013ead z\u00e1kladn\u00fdch pr\u00edkazov \u00b6 set sl\u00fa\u017ei na nastavenie hodnoty premennej, option konfigurovate\u013en\u00fd prep\u00edna\u010d - umo\u017e\u0148uje interakt\u00edvne meni\u0165 parametre, add_library prid\u00e1 build target pre kni\u017enicu, ktor\u00e1 sa zostav\u00ed zo zdrojov\u00fdch s\u00faborov zadan\u00fdch ako parameter, add_dependencies prid\u00e1 z\u00e1vislos\u0165 pre target, \u010do tie\u017e znamen\u00e1, \u017ee z\u00e1vislos\u0165 mus\u00ed by\u0165 zostaven\u00e1 sk\u00f4r ako target, ktor\u00fd je od nej z\u00e1visl\u00fd, ExternalProject_Add umo\u017e\u0148uje prida\u0165 extern\u00fd projekt, \u010d\u00edm d\u00f4jde k vytvoreniu nov\u00e9ho target-u, set_target_properties pr\u00edkazom je mo\u017en\u00e9 meni\u0165 vlastnosti target-u, message umo\u017e\u0148uje vyp\u00edsa\u0165 spr\u00e1vu do konzoly, add_custom_command pr\u00edkazom je mo\u017en\u00e9 vytvori\u0165 vlastn\u00fd pr\u00edkaz, v ktorom je mo\u017en\u00e9 \u0161pecifikova\u0165 z\u00e1vislosti, command-line-pr\u00edkaz a spr\u00e1vu, ktor\u00e1 sa m\u00e1 vyp\u00edsa\u0165 do konzoly, add_custom_target prid\u00e1 target so zadan\u00fdm menom, ktor\u00fd vykon\u00e1 po\u017eadovan\u00e9 pr\u00edkazy, install pr\u00edkaz generuje in\u0161tala\u010dn\u00e9 pravidl\u00e1 pre projekt, na zdrojov\u00fd adres\u00e1r je mo\u017en\u00e9 aplikova\u0165 viacer\u00e9 pr\u00edkazy, z\u00e1kladn\u00e9 pou\u017eitie v projekte zah\u0155\u0148a kop\u00edrovanie s\u00faborov z\u00e1vislost\u00ed do adres\u00e1rovej \u0161trukt\u00fary projektu. CMake \u010falej podporuje \u0161tandardn\u00fa syntax pre vetvenie a cykly. Pozn\u00e1mky \u00b6 Pri vytv\u00e1ran\u00ed alebo modifik\u00e1cii CMakeLists.txt s\u00faborov treba dodr\u017eiava\u0165 Unix adres\u00e1rov\u00fa \u0161trukt\u00faru. kni\u017enice uchov\u00e1va\u0165 v adres\u00e1ri s n\u00e1zvom lib , hlavi\u010dkov\u00e9 s\u00fabory v adres\u00e1ri s n\u00e1zvom include , spustite\u013en\u00e9 s\u00fabory v adres\u00e1ri s n\u00e1zvom bin , ostatn\u00e9 s\u00fabory modulov (licence, readme) v adres\u00e1ri s n\u00e1zvom share . Adres\u00e1r s n\u00e1zvom cmake v kore\u0148ovom adres\u00e1ri repozit\u00e1ra obsahuje s\u00fabory ur\u010den\u00e9 na h\u013eadanie z\u00e1vislost\u00ed, ak\u00fdmi s\u00fa hlavi\u010dkov\u00e9 s\u00fabory, kni\u017enice, spustite\u013en\u00e9 s\u00fabory a pod. Spravidla je potrebn\u00e9 vytvori\u0165 tak\u00fdto s\u00fabor na \u00farovni jednotliv\u00fdch modulov. CMake umo\u017e\u0148uje \u010falej definova\u0165 mno\u017einu viacer\u00fdch mo\u017en\u00fdch n\u00e1zvov h\u013eadan\u00fdch s\u00faborov a ciest. Vyh\u013eadanie z\u00e1vislost\u00ed je potom potrebn\u00e9 explicitne zavola\u0165 v s\u00fabore CMakeLists.txt pr\u00edkazom find_package . Help","title":"CMake"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cmake/#cmake","text":"V r\u00e1mci cel\u00e9ho projektu je pou\u017eit\u00fd n\u00e1stroj CMake, ktor\u00fd v\u00fdrazne zjednodu\u0161uje zostavovanie, testovanie a bal\u00edkovanie projektu. Ka\u017ed\u00fd modul, ktor\u00fd vyu\u017e\u00edva CMake obsahuje konfigura\u010dn\u00fd s\u00fabor CMakeLists.txt . Na z\u00e1klade konfigura\u010dn\u00e9ho s\u00faboru je potom vytvoren\u00fd jeden alebo viacero Makefiles na Unix platform\u00e1ch, pr\u00edpadne projekt/workspace na platforme Windows. V\u00fdhod tohto rie\u0161enia je viacero, medzi hlavn\u00e9 patria : - podpora viacn\u00e1sobnej z\u00e1vislosti, - spolupr\u00e1ca s n\u00e1strojom Git, - mo\u017enos\u0165 defin\u00edcie makier, pr\u00edkazov a funkci\u00ed, - mo\u017enos\u0165 definova\u0165 poradie vykon\u00e1vania - z\u00e1vislos\u0165 pri kompil\u00e1cii a linkovan\u00ed. - mo\u017enos\u0165 parametrizova\u0165 spr\u00e1vanie - podpora multiplatformov\u00fdch rie\u0161en\u00ed","title":"CMake"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cmake/#preh\u013ead-z\u00e1kladn\u00fdch-pr\u00edkazov","text":"set sl\u00fa\u017ei na nastavenie hodnoty premennej, option konfigurovate\u013en\u00fd prep\u00edna\u010d - umo\u017e\u0148uje interakt\u00edvne meni\u0165 parametre, add_library prid\u00e1 build target pre kni\u017enicu, ktor\u00e1 sa zostav\u00ed zo zdrojov\u00fdch s\u00faborov zadan\u00fdch ako parameter, add_dependencies prid\u00e1 z\u00e1vislos\u0165 pre target, \u010do tie\u017e znamen\u00e1, \u017ee z\u00e1vislos\u0165 mus\u00ed by\u0165 zostaven\u00e1 sk\u00f4r ako target, ktor\u00fd je od nej z\u00e1visl\u00fd, ExternalProject_Add umo\u017e\u0148uje prida\u0165 extern\u00fd projekt, \u010d\u00edm d\u00f4jde k vytvoreniu nov\u00e9ho target-u, set_target_properties pr\u00edkazom je mo\u017en\u00e9 meni\u0165 vlastnosti target-u, message umo\u017e\u0148uje vyp\u00edsa\u0165 spr\u00e1vu do konzoly, add_custom_command pr\u00edkazom je mo\u017en\u00e9 vytvori\u0165 vlastn\u00fd pr\u00edkaz, v ktorom je mo\u017en\u00e9 \u0161pecifikova\u0165 z\u00e1vislosti, command-line-pr\u00edkaz a spr\u00e1vu, ktor\u00e1 sa m\u00e1 vyp\u00edsa\u0165 do konzoly, add_custom_target prid\u00e1 target so zadan\u00fdm menom, ktor\u00fd vykon\u00e1 po\u017eadovan\u00e9 pr\u00edkazy, install pr\u00edkaz generuje in\u0161tala\u010dn\u00e9 pravidl\u00e1 pre projekt, na zdrojov\u00fd adres\u00e1r je mo\u017en\u00e9 aplikova\u0165 viacer\u00e9 pr\u00edkazy, z\u00e1kladn\u00e9 pou\u017eitie v projekte zah\u0155\u0148a kop\u00edrovanie s\u00faborov z\u00e1vislost\u00ed do adres\u00e1rovej \u0161trukt\u00fary projektu. CMake \u010falej podporuje \u0161tandardn\u00fa syntax pre vetvenie a cykly.","title":"Preh\u013ead z\u00e1kladn\u00fdch pr\u00edkazov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cmake/#pozn\u00e1mky","text":"Pri vytv\u00e1ran\u00ed alebo modifik\u00e1cii CMakeLists.txt s\u00faborov treba dodr\u017eiava\u0165 Unix adres\u00e1rov\u00fa \u0161trukt\u00faru. kni\u017enice uchov\u00e1va\u0165 v adres\u00e1ri s n\u00e1zvom lib , hlavi\u010dkov\u00e9 s\u00fabory v adres\u00e1ri s n\u00e1zvom include , spustite\u013en\u00e9 s\u00fabory v adres\u00e1ri s n\u00e1zvom bin , ostatn\u00e9 s\u00fabory modulov (licence, readme) v adres\u00e1ri s n\u00e1zvom share . Adres\u00e1r s n\u00e1zvom cmake v kore\u0148ovom adres\u00e1ri repozit\u00e1ra obsahuje s\u00fabory ur\u010den\u00e9 na h\u013eadanie z\u00e1vislost\u00ed, ak\u00fdmi s\u00fa hlavi\u010dkov\u00e9 s\u00fabory, kni\u017enice, spustite\u013en\u00e9 s\u00fabory a pod. Spravidla je potrebn\u00e9 vytvori\u0165 tak\u00fdto s\u00fabor na \u00farovni jednotliv\u00fdch modulov. CMake umo\u017e\u0148uje \u010falej definova\u0165 mno\u017einu viacer\u00fdch mo\u017en\u00fdch n\u00e1zvov h\u013eadan\u00fdch s\u00faborov a ciest. Vyh\u013eadanie z\u00e1vislost\u00ed je potom potrebn\u00e9 explicitne zavola\u0165 v s\u00fabore CMakeLists.txt pr\u00edkazom find_package . Help","title":"Pozn\u00e1mky"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/","text":"LuaGraph \u00b6 Generovanie build s\u00faborov pre modul LuaGraph je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 Pri zostavovan\u00ed modulu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov. USE_COTIRE \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da je mo\u017en\u00e9 pou\u017ei\u0165 modul Cotire na ur\u00fdchlenie build procesu. DOWNLOAD_AND_BUILD_LUAINTERFACE \u00b6 Pri pou\u017eit\u00ed prep\u00edna\u010da je stiahnut\u00fd a zbuildovan\u00fd modul LuaInterface , ktor\u00fd sl\u00fa\u017ei ako rozhranie medzi jazykmi C#, C++ a Lua. USE_TERRA_BINARIES \u00b6 Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra v module LuaInterface - nie je pou\u017eit\u00e1 priamo v module LuaGraph. BUILD_LUAGRAPH_TESTS \u00b6 Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee spolu so zdie\u013eanou kni\u017enicou luagraph bude zbuildovan\u00fd aj spustite\u013en\u00fd s\u00fabor vykon\u00e1vaj\u00faci jednotkov\u00e9 testy modulu. USE_STRICT_COMPILE_WARNINGS \u00b6 Pri DEBUG re\u017eime bud\u00fa pou\u017eit\u00e9 striktn\u00e9 varovania kompil\u00e1tora. USE_CODE_COVERAGE \u00b6 Prostredn\u00edctvom n\u00e1stroja gcovr bude vygenerovan\u00fd report pokrytia zdrojov\u00e9ho k\u00f3du. USE_INCLUDE_WHAT_YOU_USE \u00b6 Pri pou\u017eit\u00ed prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch s\u00faborov v jazyku C++ include-what-you-use - IWYU. USE_CLANG_TIDY \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch k\u00f3dov za \u00fa\u010delom odhalenia programovac\u00edch ch\u00fdb, nespr\u00e1vneho pou\u017eitia rozhran\u00ed, pr\u00edpadne \u010fal\u0161\u00edch ch\u00fdb. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : LuaInterface - rozhranie medzi jazykmi C#, C++ a Lua Easyloggingpp - logovac\u00ed modul pre jazyk C++ Catch2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da BUILD_LUAINTERFACE_TESTS) - framework pre jednotkov\u00e9 testovanie v jazyku C++ include-what-you-use (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_INCLUDE_WHAT_YOU_USE) - n\u00e1stroj na anal\u00fdzu zdrojov\u00fdch s\u00faborov v jazyku C a C++ clang-tidy (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_CLANG_TIDY) - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luafilesystem - s\u00faborov\u00fd syst\u00e9m pre jazyk Lua lualogging - API na logovanie v jazyku Lua luasocket - sie\u0165ov\u00e1 podpora pre jazyk Lua mobdebug - vzdialen\u00fd debugger pre jazyk Lua luacov - analyz\u00e1tor pokrytia zdrojov\u00e9ho k\u00f3du luacheck - statick\u00fd analyz\u00e1tor jazyka Lua lua_cliargs - kni\u017enica na spracovanie command-line argumentov luasystem - platformovo nez\u00e1visl\u00e1 kni\u017enica na vykon\u00e1vanie syst\u00e9mov\u00fdch volan\u00ed dkjson - JSON modul pre jazyk Lua say - modul pre ukladanie mapovan\u00ed k\u013e\u00fa\u010d-hodnota luassert - roz\u0161\u00edren\u00fd testovac\u00ed modul lua-term - kni\u017enica pre pr\u00e1cu s termin\u00e1lom penlight - kni\u017enica poskytuje input data handling, funkcion\u00e1lne programovanie a spr\u00e1vu ciest OS mediator_lua - kni\u017enica na spr\u00e1vu udalost\u00ed (events) busted - framework pre testovanie luacomments - parser Lua koment\u00e1rov luameg - Moonscript parser luadb - modul na anal\u00fdzu hypergraph \u0161trukt\u00far Build modulu \u00b6 Prerekvizity \u00b6 CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Git Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Cpp/LuaGraph.git a prejdeme do adres\u00e1ra cd luagraph/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout remake vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade ozna\u010den\u00fa remake Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init --recursive Kofigur\u00e1cia build syst\u00e9mu \u00b6 otvor\u00edme program CMake, ako source code zvol\u00edme prie\u010dinok luagraph , ako build binaries zvol\u00edme prie\u010dinok luagraph/_build , stla\u010d\u00edme tla\u010didlo configure, ako gener\u00e1tor pou\u017eijeme Unix Makefiles v pr\u00edpade macOS a Linux, inak Visual Studio 15 2017 Win64 (alebo in\u00fa verziu Visual Studio) a vyberieme mo\u017enos\u0165 Use default native compilers , zvol\u00edme prep\u00edna\u010de DOWNLOAD_AND_BUILD_LUAINTERFACE a BUILD_LUAGRAPH_TESTS ako CMAKE_INSTALL_PREFIX zvol\u00edme prie\u010dinok luagraph/_install , stla\u010d\u00edme tla\u010didlo configure, stla\u010d\u00edme tla\u010didlo generate Build modulu \u00b6 V pr\u00edpade MS Windows je mo\u017en\u00e9 build vykona\u0165 v n\u00e1stroji Visual Studio : Otvor\u00edme projekt Prav\u00fdm tla\u010didlom stla\u010d\u00edme Solution LuaGraph Vyberieme mo\u017enos\u0165 Build Solution Pri platforme macOS postupujeme nasleduj\u00facim sp\u00f4sobom : prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luagraph/_build spust\u00edme build modulu make install over\u00edme, \u010di boli s\u00fabory zbuildovan\u00e9 a nakop\u00edrovan\u00e9 do adres\u00e1ra luagraph/_install","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#luagraph","text":"Generovanie build s\u00faborov pre modul LuaGraph je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#prep\u00edna\u010de","text":"Pri zostavovan\u00ed modulu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov.","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_cotire","text":"Pou\u017eit\u00edm prep\u00edna\u010da je mo\u017en\u00e9 pou\u017ei\u0165 modul Cotire na ur\u00fdchlenie build procesu.","title":"USE_COTIRE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#download_and_build_luainterface","text":"Pri pou\u017eit\u00ed prep\u00edna\u010da je stiahnut\u00fd a zbuildovan\u00fd modul LuaInterface , ktor\u00fd sl\u00fa\u017ei ako rozhranie medzi jazykmi C#, C++ a Lua.","title":"DOWNLOAD_AND_BUILD_LUAINTERFACE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_terra_binaries","text":"Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra v module LuaInterface - nie je pou\u017eit\u00e1 priamo v module LuaGraph.","title":"USE_TERRA_BINARIES"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#build_luagraph_tests","text":"Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee spolu so zdie\u013eanou kni\u017enicou luagraph bude zbuildovan\u00fd aj spustite\u013en\u00fd s\u00fabor vykon\u00e1vaj\u00faci jednotkov\u00e9 testy modulu.","title":"BUILD_LUAGRAPH_TESTS"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_strict_compile_warnings","text":"Pri DEBUG re\u017eime bud\u00fa pou\u017eit\u00e9 striktn\u00e9 varovania kompil\u00e1tora.","title":"USE_STRICT_COMPILE_WARNINGS"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_code_coverage","text":"Prostredn\u00edctvom n\u00e1stroja gcovr bude vygenerovan\u00fd report pokrytia zdrojov\u00e9ho k\u00f3du.","title":"USE_CODE_COVERAGE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_include_what_you_use","text":"Pri pou\u017eit\u00ed prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch s\u00faborov v jazyku C++ include-what-you-use - IWYU.","title":"USE_INCLUDE_WHAT_YOU_USE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#use_clang_tidy","text":"Pou\u017eit\u00edm prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch k\u00f3dov za \u00fa\u010delom odhalenia programovac\u00edch ch\u00fdb, nespr\u00e1vneho pou\u017eitia rozhran\u00ed, pr\u00edpadne \u010fal\u0161\u00edch ch\u00fdb.","title":"USE_CLANG_TIDY"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : LuaInterface - rozhranie medzi jazykmi C#, C++ a Lua Easyloggingpp - logovac\u00ed modul pre jazyk C++ Catch2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da BUILD_LUAINTERFACE_TESTS) - framework pre jednotkov\u00e9 testovanie v jazyku C++ include-what-you-use (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_INCLUDE_WHAT_YOU_USE) - n\u00e1stroj na anal\u00fdzu zdrojov\u00fdch s\u00faborov v jazyku C a C++ clang-tidy (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_CLANG_TIDY) - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luafilesystem - s\u00faborov\u00fd syst\u00e9m pre jazyk Lua lualogging - API na logovanie v jazyku Lua luasocket - sie\u0165ov\u00e1 podpora pre jazyk Lua mobdebug - vzdialen\u00fd debugger pre jazyk Lua luacov - analyz\u00e1tor pokrytia zdrojov\u00e9ho k\u00f3du luacheck - statick\u00fd analyz\u00e1tor jazyka Lua lua_cliargs - kni\u017enica na spracovanie command-line argumentov luasystem - platformovo nez\u00e1visl\u00e1 kni\u017enica na vykon\u00e1vanie syst\u00e9mov\u00fdch volan\u00ed dkjson - JSON modul pre jazyk Lua say - modul pre ukladanie mapovan\u00ed k\u013e\u00fa\u010d-hodnota luassert - roz\u0161\u00edren\u00fd testovac\u00ed modul lua-term - kni\u017enica pre pr\u00e1cu s termin\u00e1lom penlight - kni\u017enica poskytuje input data handling, funkcion\u00e1lne programovanie a spr\u00e1vu ciest OS mediator_lua - kni\u017enica na spr\u00e1vu udalost\u00ed (events) busted - framework pre testovanie luacomments - parser Lua koment\u00e1rov luameg - Moonscript parser luadb - modul na anal\u00fdzu hypergraph \u0161trukt\u00far","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#prerekvizity","text":"CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Git Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Cpp/LuaGraph.git a prejdeme do adres\u00e1ra cd luagraph/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout remake vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade ozna\u010den\u00fa remake","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init --recursive","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#kofigur\u00e1cia-build-syst\u00e9mu","text":"otvor\u00edme program CMake, ako source code zvol\u00edme prie\u010dinok luagraph , ako build binaries zvol\u00edme prie\u010dinok luagraph/_build , stla\u010d\u00edme tla\u010didlo configure, ako gener\u00e1tor pou\u017eijeme Unix Makefiles v pr\u00edpade macOS a Linux, inak Visual Studio 15 2017 Win64 (alebo in\u00fa verziu Visual Studio) a vyberieme mo\u017enos\u0165 Use default native compilers , zvol\u00edme prep\u00edna\u010de DOWNLOAD_AND_BUILD_LUAINTERFACE a BUILD_LUAGRAPH_TESTS ako CMAKE_INSTALL_PREFIX zvol\u00edme prie\u010dinok luagraph/_install , stla\u010d\u00edme tla\u010didlo configure, stla\u010d\u00edme tla\u010didlo generate","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luagraph/#build-modulu_1","text":"V pr\u00edpade MS Windows je mo\u017en\u00e9 build vykona\u0165 v n\u00e1stroji Visual Studio : Otvor\u00edme projekt Prav\u00fdm tla\u010didlom stla\u010d\u00edme Solution LuaGraph Vyberieme mo\u017enos\u0165 Build Solution Pri platforme macOS postupujeme nasleduj\u00facim sp\u00f4sobom : prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luagraph/_build spust\u00edme build modulu make install over\u00edme, \u010di boli s\u00fabory zbuildovan\u00e9 a nakop\u00edrovan\u00e9 do adres\u00e1ra luagraph/_install","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/","text":"LuaInterface \u00b6 Generovanie build s\u00faborov pre modul LuaInterface je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 Pri zostavovan\u00ed modulu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov. USE_COTIRE \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da je mo\u017en\u00e9 pou\u017ei\u0165 modul Cotire na ur\u00fdchlenie build procesu. DOWNLOAD_AND_BUILD_LUA \u00b6 Pri pou\u017eit\u00ed prep\u00edna\u010da je stiahnut\u00e1 a zbuildovan\u00e1 zdie\u013ean\u00e1 kni\u017enica pre pr\u00e1cu s programovac\u00edm jazykom Lua . USE_TERRA_BINARIES \u00b6 Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra . DOWNLOAD_AND_BUILD_SOL2 \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da bude stiahnut\u00e1 a zbuildovan\u00e1 kni\u017enica Sol2 , ktor\u00e1 sl\u00fa\u017ei ako wrapper nad jazykom Lua pre programovac\u00ed jazyk C++ . BUILD_LUAINTERFACE_TESTS \u00b6 Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee spolu so zdie\u013eanou kni\u017enicou luainterface bude zbuildovan\u00fd aj spustite\u013en\u00fd s\u00fabor vykon\u00e1vaj\u00faci jednotkov\u00e9 testy modulu. USE_STRICT_COMPILE_WARNINGS \u00b6 Pri DEBUG re\u017eime bud\u00fa pou\u017eit\u00e9 striktn\u00e9 varovania kompil\u00e1tora. USE_CODE_COVERAGE \u00b6 Prostredn\u00edctvom n\u00e1stroja gcovr bude vygenerovan\u00fd report pokrytia zdrojov\u00e9ho k\u00f3du. USE_INCLUDE_WHAT_YOU_USE \u00b6 Pri pou\u017eit\u00ed prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch s\u00faborov v jazyku C++ include-what-you-use - IWYU. USE_CLANG_TIDY \u00b6 Pou\u017eit\u00edm prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch k\u00f3dov za \u00fa\u010delom odhalenia programovac\u00edch ch\u00fdb, nespr\u00e1vneho pou\u017eitia rozhran\u00ed, pr\u00edpadne \u010fal\u0161\u00edch ch\u00fdb. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : Terra (v pr\u00edpade implement\u00e1cie pre macOS je zahrnut\u00e1 v implement\u00e1cii Luapower) Lua (v pr\u00edpade implement\u00e1cie pre macOS je pou\u017eit\u00e1 implement\u00e1cia LuaJIT, ktor\u00e1 je s\u00fa\u010das\u0165ou bal\u00edka Luapower) Sol2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da) Easyloggingpp - logovac\u00ed modul pre jazyk C++ Catch2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da BUILD_LUAINTERFACE_TESTS) - framework pre jednotkov\u00e9 testovanie v jazyku C++ include-what-you-use (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_INCLUDE_WHAT_YOU_USE) - n\u00e1stroj na anal\u00fdzu zdrojov\u00fdch s\u00faborov v jazyku C a C++ clang-tidy (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_CLANG_TIDY) - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du Build modulu \u00b6 Prerekvizity \u00b6 CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Git potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Cpp/LuaInterface.git a prejdeme do adres\u00e1ra cd luainterface/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout remake vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade ozna\u010den\u00fa remake Kofigur\u00e1cia build syst\u00e9mu \u00b6 otvor\u00edme program CMake, ako source code zvol\u00edme prie\u010dinok luainterface , ako build binaries zvol\u00edme prie\u010dinok luainterface/_build , stla\u010d\u00edme tla\u010didlo configure, ako gener\u00e1tor pou\u017eijeme Unix Makefiles v pr\u00edpade macOS a Linux, inak Visual Studio 15 2017 Win64 (alebo in\u00fa verziu Visual Studio) a vyberieme mo\u017enos\u0165 Use default native compilers , zvol\u00edme prep\u00edna\u010de DOWNLOAD_AND_BUILD_SOL2 , BUILD_LUAINTERFACE_TESTS a DOWNLOAD_AND_BUILD_LUA ako CMAKE_INSTALL_PREFIX zvol\u00edme prie\u010dinok luainterface/_install , stla\u010d\u00edme tla\u010didlo configure, stla\u010d\u00edme tla\u010didlo generate Build modulu \u00b6 V pr\u00edpade MS Windows je mo\u017en\u00e9 build vykona\u0165 v n\u00e1stroji Visual Studio : Otvor\u00edme projekt Prav\u00fdm tla\u010didlom stla\u010d\u00edme Solution LuaInterface Vyberieme mo\u017enos\u0165 Build Solution Pri platforme macOS postupujeme nasleduj\u00facim sp\u00f4sobom : prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luainterface/_build spust\u00edme build modulu make install over\u00edme, \u010di boli s\u00fabory zbuildovan\u00e9 a nakop\u00edrovan\u00e9 do adres\u00e1ra luainterface/_install","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#luainterface","text":"Generovanie build s\u00faborov pre modul LuaInterface je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#prep\u00edna\u010de","text":"Pri zostavovan\u00ed modulu je mo\u017en\u00e9 pou\u017ei\u0165 viacero prep\u00edna\u010dov.","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_cotire","text":"Pou\u017eit\u00edm prep\u00edna\u010da je mo\u017en\u00e9 pou\u017ei\u0165 modul Cotire na ur\u00fdchlenie build procesu.","title":"USE_COTIRE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#download_and_build_lua","text":"Pri pou\u017eit\u00ed prep\u00edna\u010da je stiahnut\u00e1 a zbuildovan\u00e1 zdie\u013ean\u00e1 kni\u017enica pre pr\u00e1cu s programovac\u00edm jazykom Lua .","title":"DOWNLOAD_AND_BUILD_LUA"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_terra_binaries","text":"Prep\u00edna\u010d umo\u017e\u0148uje pou\u017ei\u0165 nadstavbu nad jazykom Lua - Terra .","title":"USE_TERRA_BINARIES"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#download_and_build_sol2","text":"Pou\u017eit\u00edm prep\u00edna\u010da bude stiahnut\u00e1 a zbuildovan\u00e1 kni\u017enica Sol2 , ktor\u00e1 sl\u00fa\u017ei ako wrapper nad jazykom Lua pre programovac\u00ed jazyk C++ .","title":"DOWNLOAD_AND_BUILD_SOL2"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#build_luainterface_tests","text":"Pou\u017eitie prep\u00edna\u010da sp\u00f4sob\u00ed, \u017ee spolu so zdie\u013eanou kni\u017enicou luainterface bude zbuildovan\u00fd aj spustite\u013en\u00fd s\u00fabor vykon\u00e1vaj\u00faci jednotkov\u00e9 testy modulu.","title":"BUILD_LUAINTERFACE_TESTS"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_strict_compile_warnings","text":"Pri DEBUG re\u017eime bud\u00fa pou\u017eit\u00e9 striktn\u00e9 varovania kompil\u00e1tora.","title":"USE_STRICT_COMPILE_WARNINGS"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_code_coverage","text":"Prostredn\u00edctvom n\u00e1stroja gcovr bude vygenerovan\u00fd report pokrytia zdrojov\u00e9ho k\u00f3du.","title":"USE_CODE_COVERAGE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_include_what_you_use","text":"Pri pou\u017eit\u00ed prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch s\u00faborov v jazyku C++ include-what-you-use - IWYU.","title":"USE_INCLUDE_WHAT_YOU_USE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#use_clang_tidy","text":"Pou\u017eit\u00edm prep\u00edna\u010da bude vykonan\u00e1 anal\u00fdza zdrojov\u00fdch k\u00f3dov za \u00fa\u010delom odhalenia programovac\u00edch ch\u00fdb, nespr\u00e1vneho pou\u017eitia rozhran\u00ed, pr\u00edpadne \u010fal\u0161\u00edch ch\u00fdb.","title":"USE_CLANG_TIDY"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : Terra (v pr\u00edpade implement\u00e1cie pre macOS je zahrnut\u00e1 v implement\u00e1cii Luapower) Lua (v pr\u00edpade implement\u00e1cie pre macOS je pou\u017eit\u00e1 implement\u00e1cia LuaJIT, ktor\u00e1 je s\u00fa\u010das\u0165ou bal\u00edka Luapower) Sol2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da) Easyloggingpp - logovac\u00ed modul pre jazyk C++ Catch2 (v pr\u00edpade pou\u017eitia prep\u00edna\u010da BUILD_LUAINTERFACE_TESTS) - framework pre jednotkov\u00e9 testovanie v jazyku C++ include-what-you-use (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_INCLUDE_WHAT_YOU_USE) - n\u00e1stroj na anal\u00fdzu zdrojov\u00fdch s\u00faborov v jazyku C a C++ clang-tidy (v pr\u00edpade pou\u017eitia prep\u00edna\u010da USE_CLANG_TIDY) - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#prerekvizity","text":"CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Git potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Cpp/LuaInterface.git a prejdeme do adres\u00e1ra cd luainterface/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout remake vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade ozna\u010den\u00fa remake","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#kofigur\u00e1cia-build-syst\u00e9mu","text":"otvor\u00edme program CMake, ako source code zvol\u00edme prie\u010dinok luainterface , ako build binaries zvol\u00edme prie\u010dinok luainterface/_build , stla\u010d\u00edme tla\u010didlo configure, ako gener\u00e1tor pou\u017eijeme Unix Makefiles v pr\u00edpade macOS a Linux, inak Visual Studio 15 2017 Win64 (alebo in\u00fa verziu Visual Studio) a vyberieme mo\u017enos\u0165 Use default native compilers , zvol\u00edme prep\u00edna\u010de DOWNLOAD_AND_BUILD_SOL2 , BUILD_LUAINTERFACE_TESTS a DOWNLOAD_AND_BUILD_LUA ako CMAKE_INSTALL_PREFIX zvol\u00edme prie\u010dinok luainterface/_install , stla\u010d\u00edme tla\u010didlo configure, stla\u010d\u00edme tla\u010didlo generate","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/cplusplus/luainterface/#build-modulu_1","text":"V pr\u00edpade MS Windows je mo\u017en\u00e9 build vykona\u0165 v n\u00e1stroji Visual Studio : Otvor\u00edme projekt Prav\u00fdm tla\u010didlom stla\u010d\u00edme Solution LuaInterface Vyberieme mo\u017enos\u0165 Build Solution Pri platforme macOS postupujeme nasleduj\u00facim sp\u00f4sobom : prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luainterface/_build spust\u00edme build modulu make install over\u00edme, \u010di boli s\u00fabory zbuildovan\u00e9 a nakop\u00edrovan\u00e9 do adres\u00e1ra luainterface/_install","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/","text":"LuaDB \u00b6 Generovanie build s\u00faborov pre modul LuaDB je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 BUILD_STANDALONE \u00b6 Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaDB so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luacomments - parser Lua koment\u00e1rov lualogging - logovac\u00ed modul Build modulu \u00b6 Prerekvizity \u00b6 CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luadb.git a prejdeme do adres\u00e1ra cd luadb/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. , Build modulu \u00b6 prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luadb/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install . nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"LuaDB"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#luadb","text":"Generovanie build s\u00faborov pre modul LuaDB je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaDB"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#prep\u00edna\u010de","text":"","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#build_standalone","text":"Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaDB so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania.","title":"BUILD_STANDALONE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : luametrics - kni\u017enica pre anal\u00fdzu metr\u00edk zdrojov\u00e9ho k\u00f3du luacomments - parser Lua koment\u00e1rov lualogging - logovac\u00ed modul","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#prerekvizity","text":"CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luadb.git a prejdeme do adres\u00e1ra cd luadb/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#kofigur\u00e1cia-build-syst\u00e9mu","text":"vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. ,","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luadb/#build-modulu_1","text":"prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luadb/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install . nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/","text":"LuaGit \u00b6 Generovanie build s\u00faborov pre modul LuaGit je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 BUILD_STANDALONE \u00b6 Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaGit so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lualogging - logovac\u00ed modul Build modulu \u00b6 Prerekvizity \u00b6 CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luagit.git a prejdeme do adres\u00e1ra cd luagit/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. , Build modulu \u00b6 prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luagit/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"LuaGit"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#luagit","text":"Generovanie build s\u00faborov pre modul LuaGit je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaGit"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#prep\u00edna\u010de","text":"","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#build_standalone","text":"Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaGit so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania.","title":"BUILD_STANDALONE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lualogging - logovac\u00ed modul","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#prerekvizity","text":"CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luagit.git a prejdeme do adres\u00e1ra cd luagit/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#kofigur\u00e1cia-build-syst\u00e9mu","text":"vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. ,","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luagit/#build-modulu_1","text":"prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luagit/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/","text":"LuaMeg \u00b6 Generovanie build s\u00faborov pre modul LuaMeg je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 BUILD_STANDALONE \u00b6 Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaMeg so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : luadb - modul na anal\u00fdzu zdrojov\u00e9ho k\u00f3du, komplexity, a r\u00f4zne metr\u00edk, na z\u00e1klade ktor\u00fdch sa nesk\u00f4r ostatn\u00e9 moduly rozhoduj\u00fa o vlastnostiach vykreslenia uzlov Build modulu \u00b6 Prerekvizity \u00b6 CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luameg.git a prejdeme do adres\u00e1ra cd luameg/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. , Build modulu \u00b6 prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luameg/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"LuaMeg"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#luameg","text":"Generovanie build s\u00faborov pre modul LuaMeg je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaMeg"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#prep\u00edna\u010de","text":"","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#build_standalone","text":"Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaMeg so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania.","title":"BUILD_STANDALONE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : luadb - modul na anal\u00fdzu zdrojov\u00e9ho k\u00f3du, komplexity, a r\u00f4zne metr\u00edk, na z\u00e1klade ktor\u00fdch sa nesk\u00f4r ostatn\u00e9 moduly rozhoduj\u00fa o vlastnostiach vykreslenia uzlov","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#prerekvizity","text":"CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luameg.git a prejdeme do adres\u00e1ra cd luameg/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#kofigur\u00e1cia-build-syst\u00e9mu","text":"vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. ,","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luameg/#build-modulu_1","text":"prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luameg/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/","text":"LuaMetrics \u00b6 Generovanie build s\u00faborov pre modul LuaMetrics je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 BUILD_STANDALONE \u00b6 Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaMetrics so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luacomments - parser Lua koment\u00e1rov Build modulu \u00b6 Prerekvizity \u00b6 CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luametrics.git a prejdeme do adres\u00e1ra cd luametrics/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. , Build modulu \u00b6 prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luametrics/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"LuaMetrics"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#luametrics","text":"Generovanie build s\u00faborov pre modul LuaMetrics je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaMetrics"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#prep\u00edna\u010de","text":"","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#build_standalone","text":"Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaMetrics so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania.","title":"BUILD_STANDALONE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lpeg - kni\u017enica pre porovnanie textov\u00fdch d\u00e1t v jazyku Lua leg - kni\u017enica exportuje kompletn\u00fa gramatiku Lua 5.1 a API pre manipul\u00e1ciu luacomments - parser Lua koment\u00e1rov","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#prerekvizity","text":"CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luametrics.git a prejdeme do adres\u00e1ra cd luametrics/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#kofigur\u00e1cia-build-syst\u00e9mu","text":"vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. ,","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luametrics/#build-modulu_1","text":"prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luametrics/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/","text":"LuaTree \u00b6 Generovanie build s\u00faborov pre modul LuaTree je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu. Prep\u00edna\u010de \u00b6 BUILD_STANDALONE \u00b6 Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaTree so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania. Z\u00e1vislosti \u00b6 Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lualogging - logovac\u00ed modul Build modulu \u00b6 Prerekvizity \u00b6 CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Naklonovanie repozit\u00e1ra \u00b6 pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luatree.git a prejdeme do adres\u00e1ra cd luatree/ , V\u00fdber vetvy \u00b6 pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu Inicializ\u00e1cia submodulov \u00b6 Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. , Build modulu \u00b6 prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luatree/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"LuaTree"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#luatree","text":"Generovanie build s\u00faborov pre modul LuaTree je realizovan\u00e9 prostredn\u00edctvom n\u00e1stroja CMake. Jednotliv\u00e9 kroky, z\u00e1vislosti a volite\u013en\u00e9 s\u00fa\u010dasti sa nach\u00e1dzaj\u00fa v s\u00fabore CMakeLists.txt v kore\u0148ovom adres\u00e1ri modulu.","title":"LuaTree"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#prep\u00edna\u010de","text":"","title":"Prep\u00edna\u010de"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#build_standalone","text":"Pou\u017eitie prep\u00edna\u010da umo\u017en\u00ed zostavi\u0165 modul LuaTree so v\u0161etk\u00fdmi z\u00e1vislos\u0165ami za \u00fa\u010delom testovania.","title":"BUILD_STANDALONE"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#z\u00e1vislosti","text":"Pre build modulu s\u00fa potrebn\u00e9 nasleduj\u00face z\u00e1vislosti : lualogging - logovac\u00ed modul","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#build-modulu","text":"","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#prerekvizity","text":"CMake - CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Git - Potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#naklonovanie-repozit\u00e1ra","text":"pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH git clone git@gitlab.com:FIIT/Common/Lua/luatree.git a prejdeme do adres\u00e1ra cd luatree/ ,","title":"Naklonovanie repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#v\u00fdber-vetvy","text":"pr\u00edkazom git checkout vyberieme po\u017eadovan\u00fa vetvu","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#inicializ\u00e1cia-submodulov","text":"Inicializ\u00e1ciu potrebn\u00fdch submodulov vykon\u00e1me pr\u00edkazom git submodule update --init","title":"Inicializ\u00e1cia submodulov"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#kofigur\u00e1cia-build-syst\u00e9mu","text":"vytvor\u00edme adres\u00e1r _build pr\u00edkazom mkdir _build , pr\u00edkazom cd _build prejdeme do adres\u00e1ra _build , spust\u00edme pr\u00edkaz cmake -D BUILD_STANDALONE=ON .. ,","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/infrastruktura/build/lua/luatree/#build-modulu_1","text":"prejdeme do adres\u00e1ra so s\u00fabormi vygenerovan\u00fdmi n\u00e1strojom CMake cd luatree/_build spust\u00edme build modulu a jeho z\u00e1vislost\u00ed make install nain\u0161talovan\u00fd modul a jeho z\u00e1vislosti je mo\u017en\u00e9 n\u00e1js\u0165 v adres\u00e1ri ../_install .","title":"Build modulu"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/","text":"3DSoftVis_Remake \u00b6 Pipeline v repozit\u00e1ri 3dsoftvis_remake sa sklad\u00e1 z viacer\u00fdch \u00farovn\u00ed, pri\u010dom ka\u017ed\u00e1 \u00farove\u0148 m\u00e1 na starosti in\u00fa \u010das\u0165 procesu nasadenia syst\u00e9mu. Pipeline sa z d\u00f4vodu \u0161etrenia prostriedkov sp\u00fa\u0161ta len pre vetvy s vytvoren\u00fdm merge requestom. Premenn\u00e9 \u00b6 S\u00fabor gitlab-ci.yml obsahuje viacero preddefinovan\u00fdch premenn\u00fdch (pr\u00edklad: CI_PROJECT_DIR). before_script \u00b6 nastavenie ciest k jednotliv\u00fdm prie\u010dinkom projektu pod\u013ea obsahu do premenn\u00fdch. Premenn\u00e9 - SOFTVIZ_ROOT , SOFTVIZ_MODULES , SOFTVIZ_UNITY , BUILD_DIR , INSTALL_DIR vytvorenie s\u00faboru, ktor\u00fd obsahuje licen\u010dn\u00fd k\u013e\u00fa\u010d pre Unity. nastavenie SSH - kontrola, \u010di je SSH nain\u0161talovan\u00e9. Ak sa \u017eelan\u00fd s\u00fabor nen\u00e1jde, prebehne in\u0161tal\u00e1cia s automatickou odpove\u010fou \"\u00e1no\" na interakcie, ktor\u00e9 po\u010das in\u0161tal\u00e1cie vysko\u010dia. Nasleduje spustenie ssh-agent session, pridanie SSH k\u013e\u00fa\u010da agentovi, vytvorenie SSH prie\u010dinku so spr\u00e1vnymi povoleniami (read, write aj execute) a zozbieranie verejn\u00fdch SSH k\u013e\u00fa\u010dov. konfigur\u00e1cia cache pam\u00e4te pre kompil\u00e1tor (kv\u00f4li ur\u00fdchleniu rekompil\u00e1ci\u00ed) naklonovanie projektu Etapy \u00b6 build stage \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va z\u00e1kladn\u00fd build samostatn\u00fdch modulov, ktor\u00e9 nie s\u00fa z\u00e1visl\u00e9 na prezenta\u010dnej vrstve Unity. build_modules stage \u00b6 Star\u00e1 sa o buildovanie C# modulov. build_unity_player T\u00e1to \u00farove\u0148 vykon\u00e1va build Unity playeru (spustite\u013en\u00fa bin\u00e1rku), vytvoren\u00e9 Unity moduly a pou\u017eit\u00e9 kni\u017enice Leap Motion, Zed Camera, HoverUI a ZF Browser. build_unity_windows Builduje unity player pre platformu Windows. T\u00e1to \u00faloha je povinn\u00e1. build_unity_linux Builduje unity player pre platformu Linux. T\u00e1to \u00faloha je voliteln\u00e1. build_unity_mac Builduje unity player pre platformu Mac OS. T\u00e1to \u00faloha je voliteln\u00e1. QA stage \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a udr\u017eiavanie kvality a zabr\u00e1nenie regresii. run_tests T\u00e1to \u00faloha testuje C# moduly. run_lua_tests T\u00e1to \u00faloha testuje Lua moduly. docs stage \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va generovanie dokument\u00e1cie make_doxygen \u00daloha generuje dokument\u00e1ciu pomocou n\u00e1stroju Doxygen pre C# moduly a Unity moduly. extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py Artefakty \u00b6 _install - tento prie\u010dinok obsahuje v\u0161etky s\u00fabory, ktor\u00e9 vznikli po\u010das buildu pre platformy Windows, Mac Linux. TestResult.xml - prie\u010dinok obsahuj\u00faci s\u00fabory potrebn\u00e9 pre reprezent\u00e1ciu v\u00fdsledkov testov vo form\u00e1te jednoduchej webstr\u00e1nky. 3dsoftviz-techdoc - prie\u010dinok obsahuj\u00faci dokument\u00e1ciu vygenerovan\u00fa vo form\u00e1te html. deploy_docs stage \u00b6 \u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok 3dsoftviz-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"3DSoftVis_Remake"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#3dsoftvis_remake","text":"Pipeline v repozit\u00e1ri 3dsoftvis_remake sa sklad\u00e1 z viacer\u00fdch \u00farovn\u00ed, pri\u010dom ka\u017ed\u00e1 \u00farove\u0148 m\u00e1 na starosti in\u00fa \u010das\u0165 procesu nasadenia syst\u00e9mu. Pipeline sa z d\u00f4vodu \u0161etrenia prostriedkov sp\u00fa\u0161ta len pre vetvy s vytvoren\u00fdm merge requestom.","title":"3DSoftVis_Remake"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#premenn\u00e9","text":"S\u00fabor gitlab-ci.yml obsahuje viacero preddefinovan\u00fdch premenn\u00fdch (pr\u00edklad: CI_PROJECT_DIR).","title":"Premenn\u00e9"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#before_script","text":"nastavenie ciest k jednotliv\u00fdm prie\u010dinkom projektu pod\u013ea obsahu do premenn\u00fdch. Premenn\u00e9 - SOFTVIZ_ROOT , SOFTVIZ_MODULES , SOFTVIZ_UNITY , BUILD_DIR , INSTALL_DIR vytvorenie s\u00faboru, ktor\u00fd obsahuje licen\u010dn\u00fd k\u013e\u00fa\u010d pre Unity. nastavenie SSH - kontrola, \u010di je SSH nain\u0161talovan\u00e9. Ak sa \u017eelan\u00fd s\u00fabor nen\u00e1jde, prebehne in\u0161tal\u00e1cia s automatickou odpove\u010fou \"\u00e1no\" na interakcie, ktor\u00e9 po\u010das in\u0161tal\u00e1cie vysko\u010dia. Nasleduje spustenie ssh-agent session, pridanie SSH k\u013e\u00fa\u010da agentovi, vytvorenie SSH prie\u010dinku so spr\u00e1vnymi povoleniami (read, write aj execute) a zozbieranie verejn\u00fdch SSH k\u013e\u00fa\u010dov. konfigur\u00e1cia cache pam\u00e4te pre kompil\u00e1tor (kv\u00f4li ur\u00fdchleniu rekompil\u00e1ci\u00ed) naklonovanie projektu","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#etapy","text":"","title":"Etapy"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#build-stage","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va z\u00e1kladn\u00fd build samostatn\u00fdch modulov, ktor\u00e9 nie s\u00fa z\u00e1visl\u00e9 na prezenta\u010dnej vrstve Unity.","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#build_modules-stage","text":"Star\u00e1 sa o buildovanie C# modulov. build_unity_player T\u00e1to \u00farove\u0148 vykon\u00e1va build Unity playeru (spustite\u013en\u00fa bin\u00e1rku), vytvoren\u00e9 Unity moduly a pou\u017eit\u00e9 kni\u017enice Leap Motion, Zed Camera, HoverUI a ZF Browser. build_unity_windows Builduje unity player pre platformu Windows. T\u00e1to \u00faloha je povinn\u00e1. build_unity_linux Builduje unity player pre platformu Linux. T\u00e1to \u00faloha je voliteln\u00e1. build_unity_mac Builduje unity player pre platformu Mac OS. T\u00e1to \u00faloha je voliteln\u00e1.","title":"build_modules stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#qa-stage","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a udr\u017eiavanie kvality a zabr\u00e1nenie regresii. run_tests T\u00e1to \u00faloha testuje C# moduly. run_lua_tests T\u00e1to \u00faloha testuje Lua moduly.","title":"QA stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#docs-stage","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va generovanie dokument\u00e1cie make_doxygen \u00daloha generuje dokument\u00e1ciu pomocou n\u00e1stroju Doxygen pre C# moduly a Unity moduly. extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py","title":"docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#artefakty","text":"_install - tento prie\u010dinok obsahuje v\u0161etky s\u00fabory, ktor\u00e9 vznikli po\u010das buildu pre platformy Windows, Mac Linux. TestResult.xml - prie\u010dinok obsahuj\u00faci s\u00fabory potrebn\u00e9 pre reprezent\u00e1ciu v\u00fdsledkov testov vo form\u00e1te jednoduchej webstr\u00e1nky. 3dsoftviz-techdoc - prie\u010dinok obsahuj\u00faci dokument\u00e1ciu vygenerovan\u00fa vo form\u00e1te html.","title":"Artefakty"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/3dsoftviz_remake/#deploy_docs-stage","text":"\u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok 3dsoftviz-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"deploy_docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/","text":"\u00davod \u00b6 Repozit\u00e1re 3dsoftvis_remake, LuaGraph, LuaInterface, LuaDB, LuaMeg, LuaMetrics a LuaGit maj\u00fa plne vybudovan\u00fa CI infra\u0161trukt\u00faru. T\u00e1to infra\u0161trukt\u00fara sl\u00fa\u017ei na kontrolu, \u010di je vyv\u00edjan\u00fd projekt vo funk\u010dnom stave a pripraven\u00fd na dodanie z\u00e1kazn\u00edkovi. Infra\u0161trukt\u00fara sa star\u00e1 o build projektu a v\u0161etk\u00fdch jeho variantov sp\u00fa\u0161\u0165an\u00edm automatizovan\u00fdch jednotkov\u00fdch testov, in\u0161trument\u00e1lnych testov, analyzovan\u00edm pokryia k\u00f3du testami a zverej\u0148ovan\u00edm ich v\u00fdsledkov na GitLab-e. Taktie\u017e analyzuje zdrojov\u00fd k\u00f3d a jeho kvalitu pomocou n\u00e1stroja Lint a ohlasuje mo\u017en\u00e9 s\u00e9mantick\u00e9 probl\u00e9my. \u010ealej sa star\u00e1 o generovanie dokument\u00e1cie. Na generovanie dokument\u00e1cie z Markdown s\u00faborov je vytvoren\u00e1 samostatn\u00e1 pipeline - MkDocs. Jednotliv\u00e9 pipeline s\u00fa umiestnen\u00e9 v pr\u00edslu\u0161n\u00fdch repozit\u00e1roch a jedn\u00e1 sa o s\u00fabory .gitlab-ci.yml . Ako funguj\u00fa pipelines \u00b6 Pipelines s\u00fa najvy\u0161\u0161ou s\u00fa\u010das\u0165ou CI, dodania a zav\u00e1dzania produktu. Medzi z\u00e1kladn\u00e9 \u010dasti pipeline patria: Etapy, ktor\u00e9 ur\u010duj\u00fa, ktor\u00e9 \u00falohy sa maj\u00fa kedy spusti\u0165. Napr\u00edklad testy sa spustia a\u017e po \u00faspe\u0161nej kompil\u00e1cii k\u00f3du. \u00dalohy, ktor\u00e9 definuj\u00fa postupnos\u0165 pr\u00edkazov. Napr\u00edklad kompil\u00e1cia k\u00f3du alebo testovanie. Viac inform\u00e1ci\u00ed je mo\u017en\u00e9 n\u00e1js\u0165 na str\u00e1nke GitLab Docs Premenn\u00e9 (variables) \u00b6 Premenn\u00e1 je dynamicky pomenovan\u00e1 hodnota, ktor\u00e1 m\u00f4\u017ee ovplyvni\u0165 sp\u00f4sob spr\u00e1vania jednotliv\u00fdch procesov. S\u00fa s\u00fa\u010das\u0165ou prostredia, v ktorom prebieha dan\u00fd proces. Premenn\u00e9 s\u00fa u\u017eito\u010dn\u00e9 na prisp\u00f4sobenie \u00faloh v pipeline GitLab CI / CD. Viac inform\u00e1ci\u00ed je mo\u017en\u00e9 n\u00e1js\u0165 na str\u00e1nke GitLab Docs Etapy (stages) \u00b6 Pipeline je zbierka \u00faloh rozdelen\u00fdch do r\u00f4znych et\u00e1p. V\u0161etky \u00falohy v tej istej etape prebiehaj\u00fa s\u00fa\u010dasne a \u010fal\u0161ia etapa sa za\u010d\u00edna iba vtedy, ak v\u0161etky \u00falohy z predch\u00e1dzaj\u00facej etapy boli \u00faspe\u0161ne ukon\u010den\u00e9. Akon\u00e1hle \u00faloha zlyh\u00e1, cel\u00e1 pipeline zlyh\u00e1. Ak je \u00faloha ozna\u010den\u00e1 ako manu\u00e1lna, zlyhanie nesp\u00f4sob\u00ed zlyhanie pipeline. Etapy s\u00fa iba logick\u00fdm rozdelen\u00edm medzi d\u00e1vkami \u00faloh, pri ktor\u00fdch nem\u00e1 zmysel vykon\u00e1va\u0165 \u010fal\u0161iu \u00falohu, pokia\u013e predch\u00e1dzaj\u00faca zlyhala. \u017diadna pr\u00e1ca by nemala ma\u0165 z\u00e1vislos\u0165 od inej pr\u00e1ce v rovnakej etape. Naproti tomu \u010fal\u0161ie etapy m\u00f4\u017eu pou\u017e\u00edva\u0165 v\u00fdsledky predch\u00e1dzaj\u00facich. before_script \u00b6 before_script sa pou\u017e\u00edva na definovanie postupnosti pr\u00edkazov, ktor\u00e9 by sa mali spusti\u0165 pred ka\u017edou \u00falohou vr\u00e1tane nasadenia, ale a\u017e po obnove ak\u00fdchko\u013evek artefaktov z predch\u00e1dzaj\u00facej etapy. Skripty \u0161pecifikovan\u00e9 v skripte before_script s\u00fa spojen\u00e9 s ak\u00fdmiko\u013evek skriptami \u0161pecifikovan\u00fdmi v hlavnom skripte a vykon\u00e1vaj\u00fa sa spolo\u010dne v jednom prostred\u00ed. Artefakty \u00b6 Artefakty sl\u00fa\u017eia na export vygenerovan\u00fdch s\u00faborov z etapy, ako napr\u00edklad kompil\u00e1ty, reporty z testov, HTML str\u00e1nky, dokument\u00e1cie, a pod. Aktu\u00e1lne pokryt\u00e9 repozit\u00e1re \u00b6 3DSoftVis_Remake LuaInterface LuaGraph LuaDB LuaMeg LuaMetrics LuaGit","title":"\u00davod"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#\u00favod","text":"Repozit\u00e1re 3dsoftvis_remake, LuaGraph, LuaInterface, LuaDB, LuaMeg, LuaMetrics a LuaGit maj\u00fa plne vybudovan\u00fa CI infra\u0161trukt\u00faru. T\u00e1to infra\u0161trukt\u00fara sl\u00fa\u017ei na kontrolu, \u010di je vyv\u00edjan\u00fd projekt vo funk\u010dnom stave a pripraven\u00fd na dodanie z\u00e1kazn\u00edkovi. Infra\u0161trukt\u00fara sa star\u00e1 o build projektu a v\u0161etk\u00fdch jeho variantov sp\u00fa\u0161\u0165an\u00edm automatizovan\u00fdch jednotkov\u00fdch testov, in\u0161trument\u00e1lnych testov, analyzovan\u00edm pokryia k\u00f3du testami a zverej\u0148ovan\u00edm ich v\u00fdsledkov na GitLab-e. Taktie\u017e analyzuje zdrojov\u00fd k\u00f3d a jeho kvalitu pomocou n\u00e1stroja Lint a ohlasuje mo\u017en\u00e9 s\u00e9mantick\u00e9 probl\u00e9my. \u010ealej sa star\u00e1 o generovanie dokument\u00e1cie. Na generovanie dokument\u00e1cie z Markdown s\u00faborov je vytvoren\u00e1 samostatn\u00e1 pipeline - MkDocs. Jednotliv\u00e9 pipeline s\u00fa umiestnen\u00e9 v pr\u00edslu\u0161n\u00fdch repozit\u00e1roch a jedn\u00e1 sa o s\u00fabory .gitlab-ci.yml .","title":"\u00davod"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#ako-funguj\u00fa-pipelines","text":"Pipelines s\u00fa najvy\u0161\u0161ou s\u00fa\u010das\u0165ou CI, dodania a zav\u00e1dzania produktu. Medzi z\u00e1kladn\u00e9 \u010dasti pipeline patria: Etapy, ktor\u00e9 ur\u010duj\u00fa, ktor\u00e9 \u00falohy sa maj\u00fa kedy spusti\u0165. Napr\u00edklad testy sa spustia a\u017e po \u00faspe\u0161nej kompil\u00e1cii k\u00f3du. \u00dalohy, ktor\u00e9 definuj\u00fa postupnos\u0165 pr\u00edkazov. Napr\u00edklad kompil\u00e1cia k\u00f3du alebo testovanie. Viac inform\u00e1ci\u00ed je mo\u017en\u00e9 n\u00e1js\u0165 na str\u00e1nke GitLab Docs","title":"Ako funguj\u00fa pipelines"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#premenn\u00e9-variables","text":"Premenn\u00e1 je dynamicky pomenovan\u00e1 hodnota, ktor\u00e1 m\u00f4\u017ee ovplyvni\u0165 sp\u00f4sob spr\u00e1vania jednotliv\u00fdch procesov. S\u00fa s\u00fa\u010das\u0165ou prostredia, v ktorom prebieha dan\u00fd proces. Premenn\u00e9 s\u00fa u\u017eito\u010dn\u00e9 na prisp\u00f4sobenie \u00faloh v pipeline GitLab CI / CD. Viac inform\u00e1ci\u00ed je mo\u017en\u00e9 n\u00e1js\u0165 na str\u00e1nke GitLab Docs","title":"Premenn\u00e9 (variables)"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#etapy-stages","text":"Pipeline je zbierka \u00faloh rozdelen\u00fdch do r\u00f4znych et\u00e1p. V\u0161etky \u00falohy v tej istej etape prebiehaj\u00fa s\u00fa\u010dasne a \u010fal\u0161ia etapa sa za\u010d\u00edna iba vtedy, ak v\u0161etky \u00falohy z predch\u00e1dzaj\u00facej etapy boli \u00faspe\u0161ne ukon\u010den\u00e9. Akon\u00e1hle \u00faloha zlyh\u00e1, cel\u00e1 pipeline zlyh\u00e1. Ak je \u00faloha ozna\u010den\u00e1 ako manu\u00e1lna, zlyhanie nesp\u00f4sob\u00ed zlyhanie pipeline. Etapy s\u00fa iba logick\u00fdm rozdelen\u00edm medzi d\u00e1vkami \u00faloh, pri ktor\u00fdch nem\u00e1 zmysel vykon\u00e1va\u0165 \u010fal\u0161iu \u00falohu, pokia\u013e predch\u00e1dzaj\u00faca zlyhala. \u017diadna pr\u00e1ca by nemala ma\u0165 z\u00e1vislos\u0165 od inej pr\u00e1ce v rovnakej etape. Naproti tomu \u010fal\u0161ie etapy m\u00f4\u017eu pou\u017e\u00edva\u0165 v\u00fdsledky predch\u00e1dzaj\u00facich.","title":"Etapy (stages)"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#before_script","text":"before_script sa pou\u017e\u00edva na definovanie postupnosti pr\u00edkazov, ktor\u00e9 by sa mali spusti\u0165 pred ka\u017edou \u00falohou vr\u00e1tane nasadenia, ale a\u017e po obnove ak\u00fdchko\u013evek artefaktov z predch\u00e1dzaj\u00facej etapy. Skripty \u0161pecifikovan\u00e9 v skripte before_script s\u00fa spojen\u00e9 s ak\u00fdmiko\u013evek skriptami \u0161pecifikovan\u00fdmi v hlavnom skripte a vykon\u00e1vaj\u00fa sa spolo\u010dne v jednom prostred\u00ed.","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#artefakty","text":"Artefakty sl\u00fa\u017eia na export vygenerovan\u00fdch s\u00faborov z etapy, ako napr\u00edklad kompil\u00e1ty, reporty z testov, HTML str\u00e1nky, dokument\u00e1cie, a pod.","title":"Artefakty"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/ci_uvod/#aktu\u00e1lne-pokryt\u00e9-repozit\u00e1re","text":"3DSoftVis_Remake LuaInterface LuaGraph LuaDB LuaMeg LuaMetrics LuaGit","title":"Aktu\u00e1lne pokryt\u00e9 repozit\u00e1re"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/","text":"Dokument\u00e1cia \u00b6 Pipeline sa sklad\u00e1 z before_script a troch stage, prepare , build a deploy , a je sp\u00fa\u0161tan\u00e1 na vlastnom docker image. Po \u00faspe\u0161nom builde a uploade sa dokument\u00e1cia nach\u00e1dza na str\u00e1nke https://team05-19.studenti.fiit.stuba.sk/docs/projekt v prie\u010dinku pr\u00edslu\u0161nej git branche. Docker image \u00b6 Obraz sa builduje pomocou docker build zo s\u00faboru CI/image-docs/Dockerfile . Obraz obsahuje predin\u0161talovan\u00fd python3 , openssh-client a rsync pre upload cez ssh, mkdocs , mkdocs t\u00e9mu a nieko\u013eko mkdocs pluginov. before_script \u00b6 import SSH kl\u00fa\u010dov nastavenie k\u00f3dovania prepare stage \u00b6 s\u0165ahovanie code snippetov z ostatn\u00fdch repozit\u00e1rov pomocou doc-extra/artifact-download.py kontrola platnosti linkov v r\u00e1mci dokument\u00e1cie, teda aby v\u0161etky linky smeruj\u00face na in\u00fd dokument boli relat\u00edvne a smerovali na .md s\u00fabor, nie prie\u010dinok. Existenciu samotn\u00e9ho .md s\u00faboru kontroluje mkdocs, pokia\u013e m\u00e1 link pr\u00edponu .md build stage \u00b6 odstr\u00e1nenie \u0161abl\u00f3n z dokument\u00e1cie vygenerovanie HTML dokument\u00e1cie do prie\u010dinka site job build pdf nastav\u00ed premenn\u00fa prostredia ENABLE_PDF_EXPORT vykon\u00e1 v\u0161etko ako v build a t\u00fdm vygeneruje aj PDF tento job sa sp\u00fa\u0161\u0165a iba manu\u00e1lne deploy stage \u00b6 obsah prie\u010dinka site sa uploaduje na vzdialen\u00fd server","title":"Dokument\u00e1cia"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#dokument\u00e1cia","text":"Pipeline sa sklad\u00e1 z before_script a troch stage, prepare , build a deploy , a je sp\u00fa\u0161tan\u00e1 na vlastnom docker image. Po \u00faspe\u0161nom builde a uploade sa dokument\u00e1cia nach\u00e1dza na str\u00e1nke https://team05-19.studenti.fiit.stuba.sk/docs/projekt v prie\u010dinku pr\u00edslu\u0161nej git branche.","title":"Dokument\u00e1cia"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#docker-image","text":"Obraz sa builduje pomocou docker build zo s\u00faboru CI/image-docs/Dockerfile . Obraz obsahuje predin\u0161talovan\u00fd python3 , openssh-client a rsync pre upload cez ssh, mkdocs , mkdocs t\u00e9mu a nieko\u013eko mkdocs pluginov.","title":"Docker image"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#before_script","text":"import SSH kl\u00fa\u010dov nastavenie k\u00f3dovania","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#prepare-stage","text":"s\u0165ahovanie code snippetov z ostatn\u00fdch repozit\u00e1rov pomocou doc-extra/artifact-download.py kontrola platnosti linkov v r\u00e1mci dokument\u00e1cie, teda aby v\u0161etky linky smeruj\u00face na in\u00fd dokument boli relat\u00edvne a smerovali na .md s\u00fabor, nie prie\u010dinok. Existenciu samotn\u00e9ho .md s\u00faboru kontroluje mkdocs, pokia\u013e m\u00e1 link pr\u00edponu .md","title":"prepare stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#build-stage","text":"odstr\u00e1nenie \u0161abl\u00f3n z dokument\u00e1cie vygenerovanie HTML dokument\u00e1cie do prie\u010dinka site job build pdf nastav\u00ed premenn\u00fa prostredia ENABLE_PDF_EXPORT vykon\u00e1 v\u0161etko ako v build a t\u00fdm vygeneruje aj PDF tento job sa sp\u00fa\u0161\u0165a iba manu\u00e1lne","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/dokumentacia/#deploy-stage","text":"obsah prie\u010dinka site sa uploaduje na vzdialen\u00fd server","title":"deploy stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/","text":"LuaGraph \u00b6 Pipeline sa sklad\u00e1 z before_script a 4 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/cpp , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku C++. Premenn\u00e9 \u00b6 V s\u00fabore gitlab-ci.yml je definovan\u00fdch viacero premenn\u00fdch : - CMAKE_MANDATORY - obsahuje parametre pre CMake - CCACHE_BASEDIR - cesta k pracovn\u00e9mu adres\u00e1ru pre ccache - CCACHE_DIR - adres\u00e1r pre ccache before_script \u00b6 nastavenie SSH kl\u00fa\u010dov vytvorenie adres\u00e1ru pre ccache prechod do kore\u0148ov\u00e9ho adres\u00e1ru modulu klonovanie submodulov build stage \u00b6 vytvorenie build adres\u00e1ru generovanie build syst\u00e9mu modulu s parametrami ulo\u017een\u00fdmi v premennej CMAKE_MANDATORY build modulu QA stage \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a zabezpe\u010duje udr\u017eiavanie kvality zdrojov\u00e9ho k\u00f3du. make_tests \u00daloha vykon\u00e1 build testov prostredn\u00edctvom n\u00e1strojov CMake a Make. V r\u00e1mci \u00falohy je vykonan\u00e1 aj dynamick\u00e1 anal\u00fdza prostredn\u00edctvom n\u00e1stroja valgrind . \u00daloha \u010falej zah\u0155\u0148a aj jednotkov\u00e9 testovanie. Taktie\u017e sa v r\u00e1mci tejto \u00falohy vykon\u00e1 anal\u00fdza pokrytia zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja gcovr . make_cppcheck V r\u00e1mci \u00falohy je vykonan\u00e1 statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ n\u00e1strojom cppcheck . make_cpplint \u00daloha prostredn\u00edctvom n\u00e1stroja cpplint vykon\u00e1 \u010fal\u0161iu statick\u00fa anal\u00fdzu k\u00f3du a over\u00ed, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google. make_cmakelint Poslednou \u00falohou \u00farovne je statick\u00e1 anal\u00fdza CMake s\u00faborov n\u00e1strojom cmakelint . docs stage \u00b6 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py Artefakty \u00b6 _build/tests - prie\u010dinok obsahuje v\u00fdsledky jednotkov\u00fdch testov vo form\u00e1te txt cpplint-report.txt - v\u00fdstup statickej anal\u00fdzy C++ zdrojov\u00e9ho k\u00f3du n\u00e1strojom cpplint _build/cppcheck - adres\u00e1r obsahuje v\u00fdstup statickej anal\u00fdzy zdrojov\u00e9ho k\u00f3du n\u00e1strojom cppcheck cmakelint-report.txt - v\u00fdstup statickej anal\u00fdzy CMake s\u00faborov n\u00e1strojom cmakelint _build/luagraph-techdoc - prie\u010dinok obsahuje dokument\u00e1ciu vygenerovan\u00fa zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen deploy_docs stage \u00b6 \u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok luagraph-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#luagraph","text":"Pipeline sa sklad\u00e1 z before_script a 4 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/cpp , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku C++.","title":"LuaGraph"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#premenn\u00e9","text":"V s\u00fabore gitlab-ci.yml je definovan\u00fdch viacero premenn\u00fdch : - CMAKE_MANDATORY - obsahuje parametre pre CMake - CCACHE_BASEDIR - cesta k pracovn\u00e9mu adres\u00e1ru pre ccache - CCACHE_DIR - adres\u00e1r pre ccache","title":"Premenn\u00e9"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#before_script","text":"nastavenie SSH kl\u00fa\u010dov vytvorenie adres\u00e1ru pre ccache prechod do kore\u0148ov\u00e9ho adres\u00e1ru modulu klonovanie submodulov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#build-stage","text":"vytvorenie build adres\u00e1ru generovanie build syst\u00e9mu modulu s parametrami ulo\u017een\u00fdmi v premennej CMAKE_MANDATORY build modulu","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#qa-stage","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a zabezpe\u010duje udr\u017eiavanie kvality zdrojov\u00e9ho k\u00f3du. make_tests \u00daloha vykon\u00e1 build testov prostredn\u00edctvom n\u00e1strojov CMake a Make. V r\u00e1mci \u00falohy je vykonan\u00e1 aj dynamick\u00e1 anal\u00fdza prostredn\u00edctvom n\u00e1stroja valgrind . \u00daloha \u010falej zah\u0155\u0148a aj jednotkov\u00e9 testovanie. Taktie\u017e sa v r\u00e1mci tejto \u00falohy vykon\u00e1 anal\u00fdza pokrytia zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja gcovr . make_cppcheck V r\u00e1mci \u00falohy je vykonan\u00e1 statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ n\u00e1strojom cppcheck . make_cpplint \u00daloha prostredn\u00edctvom n\u00e1stroja cpplint vykon\u00e1 \u010fal\u0161iu statick\u00fa anal\u00fdzu k\u00f3du a over\u00ed, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google. make_cmakelint Poslednou \u00falohou \u00farovne je statick\u00e1 anal\u00fdza CMake s\u00faborov n\u00e1strojom cmakelint .","title":"QA stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#docs-stage","text":"generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py","title":"docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#artefakty","text":"_build/tests - prie\u010dinok obsahuje v\u00fdsledky jednotkov\u00fdch testov vo form\u00e1te txt cpplint-report.txt - v\u00fdstup statickej anal\u00fdzy C++ zdrojov\u00e9ho k\u00f3du n\u00e1strojom cpplint _build/cppcheck - adres\u00e1r obsahuje v\u00fdstup statickej anal\u00fdzy zdrojov\u00e9ho k\u00f3du n\u00e1strojom cppcheck cmakelint-report.txt - v\u00fdstup statickej anal\u00fdzy CMake s\u00faborov n\u00e1strojom cmakelint _build/luagraph-techdoc - prie\u010dinok obsahuje dokument\u00e1ciu vygenerovan\u00fa zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen","title":"Artefakty"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luagraph/#deploy_docs-stage","text":"\u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok luagraph-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"deploy_docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/","text":"LuaInterface \u00b6 Pipeline sa sklad\u00e1 z before_script a 4 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/cpp , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku C++. Premenn\u00e9 \u00b6 V s\u00fabore gitlab-ci.yml je definovan\u00fdch viacero premenn\u00fdch : - CMAKE_MANDATORY - obsahuje parametre pre CMake - CCACHE_BASEDIR - cesta k pracovn\u00e9mu adres\u00e1ru pre ccache - CCACHE_DIR - adres\u00e1r pre ccache before_script \u00b6 nastavenie SSH kl\u00fa\u010dov vytvorenie adres\u00e1ru pre ccache prechod do kore\u0148ov\u00e9ho adres\u00e1ru modulu klonovanie submodulov build stage \u00b6 vytvorenie build adres\u00e1ru generovanie build syst\u00e9mu modulu s parametrami ulo\u017een\u00fdmi v premennej CMAKE_MANDATORY build modulu QA stage \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a zabezpe\u010duje udr\u017eiavanie kvality zdrojov\u00e9ho k\u00f3du. make_tests \u00daloha vykon\u00e1 build testov prostredn\u00edctvom n\u00e1strojov CMake a Make. N\u00e1sledne s\u00fa vykonan\u00e9 jednotkov\u00e9 testy. Taktie\u017e sa v r\u00e1mci tejto \u00falohy vykon\u00e1 anal\u00fdza pokrytia zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja gcovr . make_cppcheck V r\u00e1mci \u00falohy je vykonan\u00e1 statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ n\u00e1strojom cppcheck . make_cpplint \u00daloha prostredn\u00edctvom n\u00e1stroja cpplint vykon\u00e1 \u010fal\u0161iu statick\u00fa anal\u00fdzu k\u00f3du a over\u00ed, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google. make_cmakelint Poslednou \u00falohou \u00farovne je statick\u00e1 anal\u00fdza CMake s\u00faborov n\u00e1strojom cmakelint . docs stage \u00b6 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py Artefakty \u00b6 _build - prie\u010dinok obsahuje v\u0161etky s\u00fabory, ktor\u00e9 vznikli po\u010das vykon\u00e1vania \u00falohy make_tests _build/coverage - prie\u010dinok obsahuje v\u00fdsledky anal\u00fdzy pokrytia zdrojov\u00e9ho k\u00f3du testami vo forme html _build/tests - prie\u010dinok obsahuje v\u00fdsledky jednotkov\u00fdch testov vo form\u00e1te txt cpplint-report.txt - v\u00fdstup statickej anal\u00fdzy C++ zdrojov\u00e9ho k\u00f3du n\u00e1strojom cpplint _build/cppcheck - adres\u00e1r obsahuje v\u00fdstup statickej anal\u00fdzy zdrojov\u00e9ho k\u00f3du n\u00e1strojom cppcheck cmakelint-report.txt - v\u00fdstup statickej anal\u00fdzy CMake s\u00faborov n\u00e1strojom cmakelint _build/luainterface-techdoc - prie\u010dinok obsahuje dokument\u00e1ciu vygenerovan\u00fa zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen deploy_docs stage \u00b6 \u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok luainterface-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#luainterface","text":"Pipeline sa sklad\u00e1 z before_script a 4 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/cpp , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku C++.","title":"LuaInterface"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#premenn\u00e9","text":"V s\u00fabore gitlab-ci.yml je definovan\u00fdch viacero premenn\u00fdch : - CMAKE_MANDATORY - obsahuje parametre pre CMake - CCACHE_BASEDIR - cesta k pracovn\u00e9mu adres\u00e1ru pre ccache - CCACHE_DIR - adres\u00e1r pre ccache","title":"Premenn\u00e9"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#before_script","text":"nastavenie SSH kl\u00fa\u010dov vytvorenie adres\u00e1ru pre ccache prechod do kore\u0148ov\u00e9ho adres\u00e1ru modulu klonovanie submodulov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#build-stage","text":"vytvorenie build adres\u00e1ru generovanie build syst\u00e9mu modulu s parametrami ulo\u017een\u00fdmi v premennej CMAKE_MANDATORY build modulu","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#qa-stage","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a zabezpe\u010duje udr\u017eiavanie kvality zdrojov\u00e9ho k\u00f3du. make_tests \u00daloha vykon\u00e1 build testov prostredn\u00edctvom n\u00e1strojov CMake a Make. N\u00e1sledne s\u00fa vykonan\u00e9 jednotkov\u00e9 testy. Taktie\u017e sa v r\u00e1mci tejto \u00falohy vykon\u00e1 anal\u00fdza pokrytia zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja gcovr . make_cppcheck V r\u00e1mci \u00falohy je vykonan\u00e1 statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ n\u00e1strojom cppcheck . make_cpplint \u00daloha prostredn\u00edctvom n\u00e1stroja cpplint vykon\u00e1 \u010fal\u0161iu statick\u00fa anal\u00fdzu k\u00f3du a over\u00ed, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google. make_cmakelint Poslednou \u00falohou \u00farovne je statick\u00e1 anal\u00fdza CMake s\u00faborov n\u00e1strojom cmakelint .","title":"QA stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#docs-stage","text":"generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen extract code snippets \u00daloha generuje code snippety pomocou doc-extra/snippet-extract.py","title":"docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#artefakty","text":"_build - prie\u010dinok obsahuje v\u0161etky s\u00fabory, ktor\u00e9 vznikli po\u010das vykon\u00e1vania \u00falohy make_tests _build/coverage - prie\u010dinok obsahuje v\u00fdsledky anal\u00fdzy pokrytia zdrojov\u00e9ho k\u00f3du testami vo forme html _build/tests - prie\u010dinok obsahuje v\u00fdsledky jednotkov\u00fdch testov vo form\u00e1te txt cpplint-report.txt - v\u00fdstup statickej anal\u00fdzy C++ zdrojov\u00e9ho k\u00f3du n\u00e1strojom cpplint _build/cppcheck - adres\u00e1r obsahuje v\u00fdstup statickej anal\u00fdzy zdrojov\u00e9ho k\u00f3du n\u00e1strojom cppcheck cmakelint-report.txt - v\u00fdstup statickej anal\u00fdzy CMake s\u00faborov n\u00e1strojom cmakelint _build/luainterface-techdoc - prie\u010dinok obsahuje dokument\u00e1ciu vygenerovan\u00fa zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom doxygen","title":"Artefakty"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/cplusplus/luainterface/#deploy_docs-stage","text":"\u00dalohou \u00farovne je export automatickej dokument\u00e1cie zdrojov\u00e9ho k\u00f3du na vzdialen\u00fd server zhroma\u017e\u010fuj\u00faci v\u0161etku dokument\u00e1ciu - high-level aj low-level. deploy_doxygen \u00daloha exportuje prostredn\u00edctvom programu rsync vygenerovan\u00fa Doxygen dokument\u00e1ciu \u00farovne docs - prie\u010dinok luainterface-techdoc - v HTML form\u00e1te na vzdialen\u00fd server.","title":"deploy_docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/cpp/","text":"C++ moduly \u00b6 Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie modulov naprogramovan\u00fdch v jazyku C++. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie, testovanie a dokument\u00e1ciu jednotliv\u00fdch modulov, vr\u00e1tane exportu dokument\u00e1cie na vzdialen\u00fd server. Z\u00e1vislosti \u00b6 gcc - s\u00fabor kompil\u00e1torov projektu GNU (C/C++) cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu clang-tidy - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb iwyu (include-what-you-use) - n\u00e1stroj na anal\u00fdzu #include direkt\u00edv - ka\u017ed\u00fd symbol pou\u017eit\u00fd v zdrojovom k\u00f3de by mal obsahova\u0165 .h s\u00fabor obsahuj\u00faci export pr\u00edslu\u0161n\u00e9ho symbolu - n\u00e1stroj teda analyzuje, kedy doch\u00e1dza k poru\u0161eniu a navrhuje opravy cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ python - interpreter jazyka Python python-pip - n\u00e1stroj pre in\u0161tal\u00e1ciu Python bal\u00edkov doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du graphviz - n\u00e1stroj pre reprezent\u00e1ciu \u0161truktur\u00e1lnych inform\u00e1ci\u00ed vo forme diagramov openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam git - distribuovan\u00fd verziovac\u00ed syst\u00e9m astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du gcovr - n\u00e1stroj na vytv\u00e1ranie reportu pokrytia zdrojov\u00e9ho k\u00f3du rsync - n\u00e1stroj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami valgrind - n\u00e1stroj na memory debugging, detekciu \u00fanikov pam\u00e4ti (memory leak) a profilovanie setuptools - bal\u00edkovac\u00ed n\u00e1stroj pre Python projekty cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google pygments - zv\u00fdraz\u0148ova\u010d syntaxe pre jazyk Python","title":"C++ moduly"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/cpp/#c-moduly","text":"Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie modulov naprogramovan\u00fdch v jazyku C++. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie, testovanie a dokument\u00e1ciu jednotliv\u00fdch modulov, vr\u00e1tane exportu dokument\u00e1cie na vzdialen\u00fd server.","title":"C++ moduly"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/cpp/#z\u00e1vislosti","text":"gcc - s\u00fabor kompil\u00e1torov projektu GNU (C/C++) cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu clang-tidy - n\u00e1stroj na anal\u00fdzu zdrojov\u00e9ho k\u00f3du za \u00fa\u010delom odhalenia ch\u00fdb iwyu (include-what-you-use) - n\u00e1stroj na anal\u00fdzu #include direkt\u00edv - ka\u017ed\u00fd symbol pou\u017eit\u00fd v zdrojovom k\u00f3de by mal obsahova\u0165 .h s\u00fabor obsahuj\u00faci export pr\u00edslu\u0161n\u00e9ho symbolu - n\u00e1stroj teda analyzuje, kedy doch\u00e1dza k poru\u0161eniu a navrhuje opravy cppcheck - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu zdrojov\u00e9ho k\u00f3du p\u00edsan\u00e9ho v jazyku C++ python - interpreter jazyka Python python-pip - n\u00e1stroj pre in\u0161tal\u00e1ciu Python bal\u00edkov doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du graphviz - n\u00e1stroj pre reprezent\u00e1ciu \u0161truktur\u00e1lnych inform\u00e1ci\u00ed vo forme diagramov openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam git - distribuovan\u00fd verziovac\u00ed syst\u00e9m astyle - n\u00e1stroj na automatick\u00e9 form\u00e1tovanie zdrojov\u00e9ho k\u00f3du gcovr - n\u00e1stroj na vytv\u00e1ranie reportu pokrytia zdrojov\u00e9ho k\u00f3du rsync - n\u00e1stroj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami valgrind - n\u00e1stroj na memory debugging, detekciu \u00fanikov pam\u00e4ti (memory leak) a profilovanie setuptools - bal\u00edkovac\u00ed n\u00e1stroj pre Python projekty cmakelint - n\u00e1stroj vykon\u00e1va statick\u00fa anal\u00fdzu CMake s\u00faborov cpplint - n\u00e1stroj sl\u00fa\u017ei na statick\u00fa anal\u00fdzu k\u00f3du a overuje, \u010di zdrojov\u00fd k\u00f3d v jazyku C++ sp\u013a\u0148a konvencie spolo\u010dnosti Google pygments - zv\u00fdraz\u0148ova\u010d syntaxe pre jazyk Python","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/doc_extra/","text":"Doc extra \u00b6 Tento image sl\u00fa\u017ei pre dodato\u010dn\u00e9 skripty pre generovanie dokument\u00e1cie. Obsahuje dva skripty, snippet-extract.py a artifact-download.py snippet-extract.py \u00b6 Skript sl\u00fa\u017ei na generovanie/extrahovanie uk\u00e1\u017eok zo zdrojov\u00e9ho k\u00f3du. M\u00e1 dva argumenty, vstupn\u00fd a v\u00fdstupn\u00fd prie\u010dinok. Skript rekurz\u00edvne preh\u013ead\u00e1va vstupn\u00fd prie\u010dinok. N\u00e1sledne v ka\u017edom n\u00e1jdenom s\u00fabore h\u013ead\u00e1 koment\u00e1re code_block start a code_block end a obsah medzi nimi ulo\u017e\u00ed do jednotliv\u00fdch s\u00faborov. Novo vytvoren\u00e9 s\u00fabory zachov\u00e1vaj\u00fa p\u00f4vodn\u00fa adres\u00e1rov\u00fa \u0161trukt\u00faru a nach\u00e1dzaj\u00fa sa v prie\u010dinku snippets . Za koment\u00e1rom code_block start a code_block end sa v\u017edy mus\u00ed nach\u00e1dza\u0165 tag. Tag mus\u00ed by\u0165 rovnak\u00fd pre za\u010diato\u010dn\u00fd aj ukon\u010duj\u00faci koment\u00e1r. Obsahova\u0165 m\u00f4\u017ee len alfanumerick\u00e9 znaky, - a _ . Skript podporuje spracovanie s\u00faborov pre jazyky C++, C#, Lua, Python a Bash/Shell. Jazyky s\u00fa rozl\u00ed\u0161en\u00e9 pomocou pr\u00edpony s\u00faboru. artifact-download.py \u00b6 T\u00fdmto skriptom sa s\u0165ahuj\u00fa artefakty z ostatn\u00fdch repozit\u00e1rov s podporou z\u00e1lo\u017en\u00fdch vetiev pre pr\u00edpad, \u017ee artefakt na prim\u00e1rnej vetve neexistuje. Prim\u00e1rne sa pou\u017e\u00edva na s\u0165ahovanie uk\u00e1\u017eok zdrojov\u00e9ho k\u00f3du. Pre fungovanie potrebuje personal access token s opr\u00e1vnen\u00edm read_api . Skript m\u00e1 viacero argumentov: repository n\u00e1zov/cesta k repozit\u00e1ru (napr. FIIT/Common/Lua/luameg ) job n\u00e1zov jobu gener\u00faj\u00faceho po\u017eadovan\u00fd artefakt --branch / -b n\u00e1zov vetvy z ktorej po\u017eadujeme artefakt --fallback-branch n\u00e1zov jednej alebo viacer\u00fdch z\u00e1lo\u017en\u00fdch vetiev --extract-dir n\u00e1zov cie\u013eov\u00e9ho adres\u00e1ra pre rozbalen\u00fd obsah. Bez adres\u00e1ra sa ulo\u017e\u00ed cel\u00fd zip --token pr\u00edstupov\u00fd token --soft-fail pr\u00edznak aby program skon\u010dil bez chybov\u00e9ho k\u00f3du, ak sa nepodar\u00ed artefakt stiahnu\u0165","title":"Doc extra"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/doc_extra/#doc-extra","text":"Tento image sl\u00fa\u017ei pre dodato\u010dn\u00e9 skripty pre generovanie dokument\u00e1cie. Obsahuje dva skripty, snippet-extract.py a artifact-download.py","title":"Doc extra"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/doc_extra/#snippet-extractpy","text":"Skript sl\u00fa\u017ei na generovanie/extrahovanie uk\u00e1\u017eok zo zdrojov\u00e9ho k\u00f3du. M\u00e1 dva argumenty, vstupn\u00fd a v\u00fdstupn\u00fd prie\u010dinok. Skript rekurz\u00edvne preh\u013ead\u00e1va vstupn\u00fd prie\u010dinok. N\u00e1sledne v ka\u017edom n\u00e1jdenom s\u00fabore h\u013ead\u00e1 koment\u00e1re code_block start a code_block end a obsah medzi nimi ulo\u017e\u00ed do jednotliv\u00fdch s\u00faborov. Novo vytvoren\u00e9 s\u00fabory zachov\u00e1vaj\u00fa p\u00f4vodn\u00fa adres\u00e1rov\u00fa \u0161trukt\u00faru a nach\u00e1dzaj\u00fa sa v prie\u010dinku snippets . Za koment\u00e1rom code_block start a code_block end sa v\u017edy mus\u00ed nach\u00e1dza\u0165 tag. Tag mus\u00ed by\u0165 rovnak\u00fd pre za\u010diato\u010dn\u00fd aj ukon\u010duj\u00faci koment\u00e1r. Obsahova\u0165 m\u00f4\u017ee len alfanumerick\u00e9 znaky, - a _ . Skript podporuje spracovanie s\u00faborov pre jazyky C++, C#, Lua, Python a Bash/Shell. Jazyky s\u00fa rozl\u00ed\u0161en\u00e9 pomocou pr\u00edpony s\u00faboru.","title":"snippet-extract.py"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/doc_extra/#artifact-downloadpy","text":"T\u00fdmto skriptom sa s\u0165ahuj\u00fa artefakty z ostatn\u00fdch repozit\u00e1rov s podporou z\u00e1lo\u017en\u00fdch vetiev pre pr\u00edpad, \u017ee artefakt na prim\u00e1rnej vetve neexistuje. Prim\u00e1rne sa pou\u017e\u00edva na s\u0165ahovanie uk\u00e1\u017eok zdrojov\u00e9ho k\u00f3du. Pre fungovanie potrebuje personal access token s opr\u00e1vnen\u00edm read_api . Skript m\u00e1 viacero argumentov: repository n\u00e1zov/cesta k repozit\u00e1ru (napr. FIIT/Common/Lua/luameg ) job n\u00e1zov jobu gener\u00faj\u00faceho po\u017eadovan\u00fd artefakt --branch / -b n\u00e1zov vetvy z ktorej po\u017eadujeme artefakt --fallback-branch n\u00e1zov jednej alebo viacer\u00fdch z\u00e1lo\u017en\u00fdch vetiev --extract-dir n\u00e1zov cie\u013eov\u00e9ho adres\u00e1ra pre rozbalen\u00fd obsah. Bez adres\u00e1ra sa ulo\u017e\u00ed cel\u00fd zip --token pr\u00edstupov\u00fd token --soft-fail pr\u00edznak aby program skon\u010dil bez chybov\u00e9ho k\u00f3du, ak sa nepodar\u00ed artefakt stiahnu\u0165","title":"artifact-download.py"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/","text":"Lua moduly \u00b6 Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie modulov naprogramovan\u00fdch v jazyku Lua a taktie\u017e je ho mo\u017en\u00e9 pou\u017ei\u0165 na lok\u00e1lny v\u00fdvoj, testovanie a ladenie. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie, testovanie, coverage a dokument\u00e1ciu jednotliv\u00fdch modulov vr\u00e1tane exportu dokument\u00e1cie na vzdialen\u00fd server. Z\u00e1kladom pre image je implement\u00e1cia Luapower , obsahuj\u00faca interpreter LuaJIT a \u010fal\u0161ie n\u00e1stroje potrebn\u00e9 pre pr\u00e1cu s programovac\u00edm jazykom Lua . Argumenty a premenn\u00e9 prostredia \u00b6 Aby image fungoval spr\u00e1vne, je potrebn\u00e9 nastavi\u0165 premenn\u00e9 LUA_PATH a LUA_CPATH. Aby bola zabezpe\u010den\u00e1 maxim\u00e1lna mo\u017en\u00e1 kompatibilita medzi verziou pre CI a verziou pre lok\u00e1lny v\u00fdvoj, premenn\u00e9 maj\u00fa formu argumentov, ktor\u00e9 je mo\u017en\u00e9 prekona\u0165. A\u017e pri zostavovan\u00ed d\u00f4jde k vytvoreniu v\u00fdsledn\u00fdch ciest vo forme premenn\u00fdch prostredia, ktor\u00e9 s\u00fa zlo\u017een\u00e9 z dvoch argumentov - zo syst\u00e9mov\u00fdch (predvolen\u00fdch) ciest a dodato\u010dn\u00fdch ciest (\u0161pecifick\u00fdch pre konkr\u00e9tne prostredie). Predvolen\u00e1 hodnota dodato\u010dn\u00fdch ciest zodpoved\u00e1 pou\u017eitiu v prostred\u00ed CI. Pre lok\u00e1lny v\u00fdvoj je mo\u017en\u00e9 argumenty prekona\u0165 v docker-compose.yml . Hodnoty obidvoch premenn\u00fdch je mo\u017en\u00e9 zmeni\u0165 v Dockerfile , pri\u010dom je mo\u017en\u00e9 zmeni\u0165 samostatne ako syst\u00e9mov\u00fa, tak aj dodato\u010dn\u00fa \u010das\u0165. Syst\u00e9mov\u00e9 \u010dasti, t.j. argumenty LUA_PATH a LUA_CPATH by sa modifikova\u0165 nemali ! Na prisp\u00f4sobenie pod\u013ea prostredia sl\u00fa\u017eia dodato\u010dn\u00e9 cesty, t.j. argumenty LUA_PATH_ADD a LUA_CPATH_ADD, ktor\u00e9 je mo\u017en\u00e9 modifikova\u0165 - prekona\u0165 - v s\u00fabore docker-compose.yml . Pre pou\u017eitie na lok\u00e1lny v\u00fdvoj existuje samostatn\u00fd repozit\u00e1r, devenv , ktor\u00fd obsahuje docker-compose.yml a v\u0161etky potrebn\u00e9 z\u00e1vislosti. Pre spr\u00e1vne nastavenie je odpor\u00fa\u010dan\u00e9 postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra . Premennou LUA_PATH je mo\u017en\u00e9 definova\u0165 cesty, na ktor\u00fdch kompil\u00e1tor h\u013ead\u00e1 Lua kni\u017enice. Premenn\u00e1 LUA_CPATH definuje, na ak\u00fdch cest\u00e1ch m\u00e1 kompil\u00e1tor h\u013eada\u0165 kni\u017enice v jazyku C. ARG LUA_PATH=\"./?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua; \\ /usr/local/lib/lua/?.lua;/usr/local/lib/lua/?/init.lua;/usr/local/lib/lua/5.1/?.lua; \\ /usr/local/lib/lua/5.1/?/init.lua; /usr/share/lua/5.1/?.lua;/usr/share/lua/5.1/?/init.lua\" ARG LUA_CPATH=\"./?.so;/usr/local/lib/?.so;/usr/local/lib/lua/?.so;/usr/local/lib/lua/5.1/?.so; \\ /usr/lib/x86_64-linux-gnu/lua/5.1/?.so;/usr/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" # Setting additional LUA_PATH and LUA_CPATH for consistent usage in CI and docker-compose ARG LUA_PATH_ADD=\"src/?.lua;src/?/init.lua;_install/lib/lua/?.lua;_install/lib/lua/?/init.lua\" ARG LUA_CPATH_ADD=\"_install/lib/?.so;_install/lib/lua/?.so\" # Setting ENV variables LUA_PATH and LUA_CPATH # Values can be modified in docker-compose.yml ENV LUA_PATH=\"${LUA_PATH};${LUA_PATH_ADD}\" ENV LUA_CPATH=\"${LUA_CPATH};${LUA_CPATH_ADD}\" Z\u00e1vislosti \u00b6 cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu wget - n\u00e1stroj na prenos \u00fadajov prostredn\u00edctvom HTTP, HTTPS, FTP a FTPS unzip - n\u00e1stroj na rozba\u013eovanie .zip s\u00faborov git - distribuovan\u00fd verziovac\u00ed syst\u00e9m libz-dev - komprimovacia kni\u017enica luarocks - spr\u00e1vca bal\u00edkov pre programovac\u00ed jazyk Lua make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu build-essential - informat\u00edvny zoznam bal\u00edkov potrebn\u00fdch na zostavovanie openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam rsync - n\u00e1troj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami libzmq3-dev - kni\u017enica ZeroMQ pre IPC/RPC Lua z\u00e1vislosti \u00b6 Image obsahuje viacer\u00e9 z\u00e1vislosti, ktor\u00e9 s\u00fa potrebn\u00e9 pri v\u00fdvoji, testovan\u00ed a nasaden\u00ed projektu 3DSoftviz. Tieto z\u00e1vislosti s\u00fa vo f\u00e1ze zostavovania image skompilovan\u00e9 a nain\u0161talovan\u00e9. In\u0161talovan\u00e9 m\u00f4\u017eu by\u0165 vo v\u0161eobecnosti 3 sp\u00f4sobmi : Multigit \u00b6 Luapower vyu\u017e\u00edva na in\u0161tal\u00e1ciu z\u00e1vislost\u00ed z luapower repozit\u00e1rov wrapper multigit. Jedn\u00e1 sa o wrapper nad verziovac\u00edm syst\u00e9mom Git. Jednotliv\u00e9 moduly je teda mo\u017en\u00e9 in\u0161talova\u0165 z adres\u00e1ra /luapower/ pr\u00edkazom ./mgit clone <url-prislusneho-luapower-repozitara> . Tieto z\u00e1vislosti sa s\u0165ahuj\u00fa vopred zostaven\u00e9. Tieto moduly s\u00fa n\u00e1sledne skop\u00edrovan\u00e9 do syst\u00e9mov\u00fdch adres\u00e1rov. Lua moduly je potrebn\u00e9 kop\u00edrova\u0165 do adres\u00e1ra /usr/local/lib/lua/ - v pr\u00edpade ak adres\u00e1r lua neexistuje, je potrebn\u00e9 vytvori\u0165 ho pomocou pr\u00edkazu mkdir - a moduly s pr\u00edponou .so je potom potrebn\u00e9 kop\u00edrova\u0165 do adres\u00e1ra /usr/local/lib/ . Z\u00e1vislosti nain\u0161talovan\u00e9 cez Multigit \u00b6 luajit - interpreter a kompil\u00e1tor programovacieho jazyka Lua terra - kni\u017enica pre pr\u00e1cu s n\u00edzko\u00farov\u0148ov\u00fdm syst\u00e9mov\u00fdm programovac\u00edm jazykom lua-headers - Lua hlavi\u010dkov\u00e9 s\u00fabory cjson - kni\u017enica na serializ\u00e1ciu \u00fadajov vo form\u00e1te JSON Manu\u00e1lna kompil\u00e1cia \u00b6 Jednotliv\u00e9 moduly s\u00fa naklonovan\u00e9 z GitHub repozit\u00e1rov do adres\u00e1ra /_install . N\u00e1sledne s\u00fa skompilovan\u00e9 a nain\u0161talovan\u00e9 do syst\u00e9mu. Klonovanie, kompil\u00e1cia a in\u0161tal\u00e1cia je vykon\u00e1van\u00e1 nasleduj\u00facimi pr\u00edkazmi. cd /_install; \\ git clone https://github.com/LuaDist/lpeg.git && cd lpeg; \\ git checkout 5019d49ce847a87662983acba1e35c9b252bb936; \\ mkdir _build && cd _build; \\ cmake .. && make install; \\ Luarocks \u00b6 Na in\u0161tal\u00e1ciu Lua modulov je taktie\u017e pou\u017eit\u00fd spr\u00e1vca bal\u00edkov Luarocks. In\u0161tal\u00e1cia je jednoduch\u00e1, pri\u010dom je mo\u017en\u00e9 explicitne \u0161pecifikova\u0165 po\u017eadovan\u00fa verziu modulu, napr\u00edklad pr\u00edkazom luarocks install luafilesystem 1.6.2 . Nain\u0161talovan\u00e9 Lua z\u00e1vislosti \u00b6 busted - n\u00e1stroj pre testovanie Lua zdrojov\u00fdch s\u00faborov lpeg - lua parser gramatick\u00fdch vzorov leg - lua kni\u017enica exportuj\u00faca kompletn\u00fa Lua 5.1 gramatiku luafilesystem - kni\u017enica na pr\u00e1cu so s\u00faborov\u00fdm syst\u00e9mom luasocket - kni\u017enica poskytuj\u00faca podporu pre TCP a UDP lualogging - kni\u017enica pre logovanie luacomments - gramatiky a parsery na parsovanie koment\u00e1rov v Lua zdrojov\u00fdch k\u00f3doch ldoc - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie z Lua zdrojov\u00e9ho k\u00f3du luacov - code coverage analyz\u00e1tor luacheck - statick\u00fd analyz\u00e1tor pre zdrojov\u00e9 k\u00f3dy v jazyku Lua lrdb - debugger pre jazyk Lua lzmq - kni\u017enica pre IPC/RPC, binding nad kni\u017enicou ZeroMQ lua-messagepack - kni\u017enica na serializ\u00e1ciu \u00fadajov Pozn\u00e1mky \u00b6 Pre spr\u00e1vnu funkciu Lua modulov je potrebn\u00e9 cez Multigit spr\u00e1vne nain\u0161talova\u0165 z\u00e1vislosti luajit , terra , asdl , strict , terralib , terralib_luapower , terralist a lua-headers . Tieto artefakty je n\u00e1sledne potrebn\u00e9 kop\u00edrova\u0165 do syst\u00e9mov\u00fdch adres\u00e1rov. Kop\u00edrovanie z\u00e1vislost\u00ed sa vykon\u00e1va pri zostavovan\u00ed image. LRDB \u00b6 Lua Remote Debugger umo\u017e\u0148uje umo\u017e\u0148uje vzdialen\u00e9 ladenie programov vytvoren\u00fdch v programovacom jazyku Lua. Debugger je potrebn\u00e9 pou\u017ei\u0165 spolu s pluginom pre IDE Visual Studio Code. Tento modul je v projekte pou\u017eit\u00fd kv\u00f4li lok\u00e1lnemu v\u00fdvoju. Je teda potrebn\u00e9 aby v Docker kontajneri be\u017eal image so spr\u00e1vne nastaven\u00fdmi cestami LUA_PATH a LUA_CPATH. \u010ealej je potrebn\u00e9 pod\u013ea konfigur\u00e1cie namapova\u0165 port kontajnera na port hostite\u013esk\u00e9ho stroja. Lok\u00e1lny v\u00fdvoj je moment\u00e1lne mo\u017en\u00fd pomocou IDE Visual Studio Code, do ktor\u00e9ho je potrebn\u00e9 nain\u0161talova\u0165 plugin vscode-lrdb . Pri in\u0161tal\u00e1cii pluginu je odpor\u00fa\u010dan\u00e9 postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra . Projekt vyu\u017e\u00edva vlastn\u00fd fork, ktor\u00fd umo\u017e\u0148uje pou\u017eitie absol\u00fatnych ciest.","title":"Lua moduly"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#lua-moduly","text":"Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie modulov naprogramovan\u00fdch v jazyku Lua a taktie\u017e je ho mo\u017en\u00e9 pou\u017ei\u0165 na lok\u00e1lny v\u00fdvoj, testovanie a ladenie. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie, testovanie, coverage a dokument\u00e1ciu jednotliv\u00fdch modulov vr\u00e1tane exportu dokument\u00e1cie na vzdialen\u00fd server. Z\u00e1kladom pre image je implement\u00e1cia Luapower , obsahuj\u00faca interpreter LuaJIT a \u010fal\u0161ie n\u00e1stroje potrebn\u00e9 pre pr\u00e1cu s programovac\u00edm jazykom Lua .","title":"Lua moduly"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#argumenty-a-premenn\u00e9-prostredia","text":"Aby image fungoval spr\u00e1vne, je potrebn\u00e9 nastavi\u0165 premenn\u00e9 LUA_PATH a LUA_CPATH. Aby bola zabezpe\u010den\u00e1 maxim\u00e1lna mo\u017en\u00e1 kompatibilita medzi verziou pre CI a verziou pre lok\u00e1lny v\u00fdvoj, premenn\u00e9 maj\u00fa formu argumentov, ktor\u00e9 je mo\u017en\u00e9 prekona\u0165. A\u017e pri zostavovan\u00ed d\u00f4jde k vytvoreniu v\u00fdsledn\u00fdch ciest vo forme premenn\u00fdch prostredia, ktor\u00e9 s\u00fa zlo\u017een\u00e9 z dvoch argumentov - zo syst\u00e9mov\u00fdch (predvolen\u00fdch) ciest a dodato\u010dn\u00fdch ciest (\u0161pecifick\u00fdch pre konkr\u00e9tne prostredie). Predvolen\u00e1 hodnota dodato\u010dn\u00fdch ciest zodpoved\u00e1 pou\u017eitiu v prostred\u00ed CI. Pre lok\u00e1lny v\u00fdvoj je mo\u017en\u00e9 argumenty prekona\u0165 v docker-compose.yml . Hodnoty obidvoch premenn\u00fdch je mo\u017en\u00e9 zmeni\u0165 v Dockerfile , pri\u010dom je mo\u017en\u00e9 zmeni\u0165 samostatne ako syst\u00e9mov\u00fa, tak aj dodato\u010dn\u00fa \u010das\u0165. Syst\u00e9mov\u00e9 \u010dasti, t.j. argumenty LUA_PATH a LUA_CPATH by sa modifikova\u0165 nemali ! Na prisp\u00f4sobenie pod\u013ea prostredia sl\u00fa\u017eia dodato\u010dn\u00e9 cesty, t.j. argumenty LUA_PATH_ADD a LUA_CPATH_ADD, ktor\u00e9 je mo\u017en\u00e9 modifikova\u0165 - prekona\u0165 - v s\u00fabore docker-compose.yml . Pre pou\u017eitie na lok\u00e1lny v\u00fdvoj existuje samostatn\u00fd repozit\u00e1r, devenv , ktor\u00fd obsahuje docker-compose.yml a v\u0161etky potrebn\u00e9 z\u00e1vislosti. Pre spr\u00e1vne nastavenie je odpor\u00fa\u010dan\u00e9 postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra . Premennou LUA_PATH je mo\u017en\u00e9 definova\u0165 cesty, na ktor\u00fdch kompil\u00e1tor h\u013ead\u00e1 Lua kni\u017enice. Premenn\u00e1 LUA_CPATH definuje, na ak\u00fdch cest\u00e1ch m\u00e1 kompil\u00e1tor h\u013eada\u0165 kni\u017enice v jazyku C. ARG LUA_PATH=\"./?.lua;/usr/local/share/lua/5.1/?.lua;/usr/local/share/lua/5.1/?/init.lua; \\ /usr/local/lib/lua/?.lua;/usr/local/lib/lua/?/init.lua;/usr/local/lib/lua/5.1/?.lua; \\ /usr/local/lib/lua/5.1/?/init.lua; /usr/share/lua/5.1/?.lua;/usr/share/lua/5.1/?/init.lua\" ARG LUA_CPATH=\"./?.so;/usr/local/lib/?.so;/usr/local/lib/lua/?.so;/usr/local/lib/lua/5.1/?.so; \\ /usr/lib/x86_64-linux-gnu/lua/5.1/?.so;/usr/lib/lua/5.1/?.so;/usr/local/lib/lua/5.1/loadall.so\" # Setting additional LUA_PATH and LUA_CPATH for consistent usage in CI and docker-compose ARG LUA_PATH_ADD=\"src/?.lua;src/?/init.lua;_install/lib/lua/?.lua;_install/lib/lua/?/init.lua\" ARG LUA_CPATH_ADD=\"_install/lib/?.so;_install/lib/lua/?.so\" # Setting ENV variables LUA_PATH and LUA_CPATH # Values can be modified in docker-compose.yml ENV LUA_PATH=\"${LUA_PATH};${LUA_PATH_ADD}\" ENV LUA_CPATH=\"${LUA_CPATH};${LUA_CPATH_ADD}\"","title":"Argumenty a premenn\u00e9 prostredia"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#z\u00e1vislosti","text":"cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu wget - n\u00e1stroj na prenos \u00fadajov prostredn\u00edctvom HTTP, HTTPS, FTP a FTPS unzip - n\u00e1stroj na rozba\u013eovanie .zip s\u00faborov git - distribuovan\u00fd verziovac\u00ed syst\u00e9m libz-dev - komprimovacia kni\u017enica luarocks - spr\u00e1vca bal\u00edkov pre programovac\u00ed jazyk Lua make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu build-essential - informat\u00edvny zoznam bal\u00edkov potrebn\u00fdch na zostavovanie openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam rsync - n\u00e1troj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami libzmq3-dev - kni\u017enica ZeroMQ pre IPC/RPC","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#lua-z\u00e1vislosti","text":"Image obsahuje viacer\u00e9 z\u00e1vislosti, ktor\u00e9 s\u00fa potrebn\u00e9 pri v\u00fdvoji, testovan\u00ed a nasaden\u00ed projektu 3DSoftviz. Tieto z\u00e1vislosti s\u00fa vo f\u00e1ze zostavovania image skompilovan\u00e9 a nain\u0161talovan\u00e9. In\u0161talovan\u00e9 m\u00f4\u017eu by\u0165 vo v\u0161eobecnosti 3 sp\u00f4sobmi :","title":"Lua z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#multigit","text":"Luapower vyu\u017e\u00edva na in\u0161tal\u00e1ciu z\u00e1vislost\u00ed z luapower repozit\u00e1rov wrapper multigit. Jedn\u00e1 sa o wrapper nad verziovac\u00edm syst\u00e9mom Git. Jednotliv\u00e9 moduly je teda mo\u017en\u00e9 in\u0161talova\u0165 z adres\u00e1ra /luapower/ pr\u00edkazom ./mgit clone <url-prislusneho-luapower-repozitara> . Tieto z\u00e1vislosti sa s\u0165ahuj\u00fa vopred zostaven\u00e9. Tieto moduly s\u00fa n\u00e1sledne skop\u00edrovan\u00e9 do syst\u00e9mov\u00fdch adres\u00e1rov. Lua moduly je potrebn\u00e9 kop\u00edrova\u0165 do adres\u00e1ra /usr/local/lib/lua/ - v pr\u00edpade ak adres\u00e1r lua neexistuje, je potrebn\u00e9 vytvori\u0165 ho pomocou pr\u00edkazu mkdir - a moduly s pr\u00edponou .so je potom potrebn\u00e9 kop\u00edrova\u0165 do adres\u00e1ra /usr/local/lib/ .","title":"Multigit"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#z\u00e1vislosti-nain\u0161talovan\u00e9-cez-multigit","text":"luajit - interpreter a kompil\u00e1tor programovacieho jazyka Lua terra - kni\u017enica pre pr\u00e1cu s n\u00edzko\u00farov\u0148ov\u00fdm syst\u00e9mov\u00fdm programovac\u00edm jazykom lua-headers - Lua hlavi\u010dkov\u00e9 s\u00fabory cjson - kni\u017enica na serializ\u00e1ciu \u00fadajov vo form\u00e1te JSON","title":"Z\u00e1vislosti nain\u0161talovan\u00e9 cez Multigit"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#manu\u00e1lna-kompil\u00e1cia","text":"Jednotliv\u00e9 moduly s\u00fa naklonovan\u00e9 z GitHub repozit\u00e1rov do adres\u00e1ra /_install . N\u00e1sledne s\u00fa skompilovan\u00e9 a nain\u0161talovan\u00e9 do syst\u00e9mu. Klonovanie, kompil\u00e1cia a in\u0161tal\u00e1cia je vykon\u00e1van\u00e1 nasleduj\u00facimi pr\u00edkazmi. cd /_install; \\ git clone https://github.com/LuaDist/lpeg.git && cd lpeg; \\ git checkout 5019d49ce847a87662983acba1e35c9b252bb936; \\ mkdir _build && cd _build; \\ cmake .. && make install; \\","title":"Manu\u00e1lna kompil\u00e1cia"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#luarocks","text":"Na in\u0161tal\u00e1ciu Lua modulov je taktie\u017e pou\u017eit\u00fd spr\u00e1vca bal\u00edkov Luarocks. In\u0161tal\u00e1cia je jednoduch\u00e1, pri\u010dom je mo\u017en\u00e9 explicitne \u0161pecifikova\u0165 po\u017eadovan\u00fa verziu modulu, napr\u00edklad pr\u00edkazom luarocks install luafilesystem 1.6.2 .","title":"Luarocks"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#nain\u0161talovan\u00e9-lua-z\u00e1vislosti","text":"busted - n\u00e1stroj pre testovanie Lua zdrojov\u00fdch s\u00faborov lpeg - lua parser gramatick\u00fdch vzorov leg - lua kni\u017enica exportuj\u00faca kompletn\u00fa Lua 5.1 gramatiku luafilesystem - kni\u017enica na pr\u00e1cu so s\u00faborov\u00fdm syst\u00e9mom luasocket - kni\u017enica poskytuj\u00faca podporu pre TCP a UDP lualogging - kni\u017enica pre logovanie luacomments - gramatiky a parsery na parsovanie koment\u00e1rov v Lua zdrojov\u00fdch k\u00f3doch ldoc - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie z Lua zdrojov\u00e9ho k\u00f3du luacov - code coverage analyz\u00e1tor luacheck - statick\u00fd analyz\u00e1tor pre zdrojov\u00e9 k\u00f3dy v jazyku Lua lrdb - debugger pre jazyk Lua lzmq - kni\u017enica pre IPC/RPC, binding nad kni\u017enicou ZeroMQ lua-messagepack - kni\u017enica na serializ\u00e1ciu \u00fadajov","title":"Nain\u0161talovan\u00e9 Lua z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#pozn\u00e1mky","text":"Pre spr\u00e1vnu funkciu Lua modulov je potrebn\u00e9 cez Multigit spr\u00e1vne nain\u0161talova\u0165 z\u00e1vislosti luajit , terra , asdl , strict , terralib , terralib_luapower , terralist a lua-headers . Tieto artefakty je n\u00e1sledne potrebn\u00e9 kop\u00edrova\u0165 do syst\u00e9mov\u00fdch adres\u00e1rov. Kop\u00edrovanie z\u00e1vislost\u00ed sa vykon\u00e1va pri zostavovan\u00ed image.","title":"Pozn\u00e1mky"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/lua/#lrdb","text":"Lua Remote Debugger umo\u017e\u0148uje umo\u017e\u0148uje vzdialen\u00e9 ladenie programov vytvoren\u00fdch v programovacom jazyku Lua. Debugger je potrebn\u00e9 pou\u017ei\u0165 spolu s pluginom pre IDE Visual Studio Code. Tento modul je v projekte pou\u017eit\u00fd kv\u00f4li lok\u00e1lnemu v\u00fdvoju. Je teda potrebn\u00e9 aby v Docker kontajneri be\u017eal image so spr\u00e1vne nastaven\u00fdmi cestami LUA_PATH a LUA_CPATH. \u010ealej je potrebn\u00e9 pod\u013ea konfigur\u00e1cie namapova\u0165 port kontajnera na port hostite\u013esk\u00e9ho stroja. Lok\u00e1lny v\u00fdvoj je moment\u00e1lne mo\u017en\u00fd pomocou IDE Visual Studio Code, do ktor\u00e9ho je potrebn\u00e9 nain\u0161talova\u0165 plugin vscode-lrdb . Pri in\u0161tal\u00e1cii pluginu je odpor\u00fa\u010dan\u00e9 postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra . Projekt vyu\u017e\u00edva vlastn\u00fd fork, ktor\u00fd umo\u017e\u0148uje pou\u017eitie absol\u00fatnych ciest.","title":"LRDB"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-basic/","text":"Basic \u00b6 Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie, konkr\u00e9tne generovanie a export dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja Doxygen . Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na vytvorenie dokument\u00e1cie a jej export na vzdialen\u00fd server. Z\u00e1vislosti \u00b6 build-essential - informat\u00edvny zoznam bal\u00edkov potrebn\u00fdch na zostavovanie gnupg - implement\u00e1cia \u0161tandardu PGP na \u0161ifrovanie a podpisovanie \u00fadajov a komunik\u00e1ci\u00ed ca-certificates - bal\u00edk obsahuj\u00faci certifika\u010dn\u00e9 autority, dod\u00e1van\u00e9 s prehliada\u010dmi Mozilla - umo\u017e\u0148uje kontrolova\u0165 autenticitu SSL spojen\u00ed wget - program na s\u0165ahovanie s\u00faborov prostredn\u00edctvom protokolov HTTP, HTTPS, FTP, FTPS gcc - s\u00fabor kompil\u00e1torov projektu GNU (C/C++) cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam git - distribuovan\u00fd verziovac\u00ed syst\u00e9m graphviz - n\u00e1stroj pre reprezent\u00e1ciu \u0161truktur\u00e1lnych inform\u00e1ci\u00ed vo forme diagramov doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du rsync - n\u00e1stroj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami","title":"Basic"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-basic/#basic","text":"Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie, konkr\u00e9tne generovanie a export dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du prostredn\u00edctvom n\u00e1stroja Doxygen . Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na vytvorenie dokument\u00e1cie a jej export na vzdialen\u00fd server.","title":"Basic"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-basic/#z\u00e1vislosti","text":"build-essential - informat\u00edvny zoznam bal\u00edkov potrebn\u00fdch na zostavovanie gnupg - implement\u00e1cia \u0161tandardu PGP na \u0161ifrovanie a podpisovanie \u00fadajov a komunik\u00e1ci\u00ed ca-certificates - bal\u00edk obsahuj\u00faci certifika\u010dn\u00e9 autority, dod\u00e1van\u00e9 s prehliada\u010dmi Mozilla - umo\u017e\u0148uje kontrolova\u0165 autenticitu SSL spojen\u00ed wget - program na s\u0165ahovanie s\u00faborov prostredn\u00edctvom protokolov HTTP, HTTPS, FTP, FTPS gcc - s\u00fabor kompil\u00e1torov projektu GNU (C/C++) cmake - n\u00e1stroj pre multiplatformov\u00e9 zostavenie projektu - vytv\u00e1ra adres\u00e1rov\u00fa \u0161trukt\u00faru a pripravuje zdrojov\u00e9 s\u00fabory pre zostavenie kompil\u00e1tormi pr\u00edslu\u0161n\u00e9ho opera\u010dn\u00e9ho syst\u00e9mu make - n\u00e1stroj pre automatizovan\u00e9 zostavenie vykonate\u013en\u00fdch programov alebo kni\u017en\u00edc zo zdrojov\u00fdch k\u00f3dov - vstupom je tzv. Makefile s\u00fabor, ktor\u00fd obsahuje pokyny pre vytvorenie v\u00fdsledn\u00e9ho programu openssh-client - secure-shell klient pre zabezpe\u010den\u00fd pr\u00edstup k vzdialen\u00fdm zariadeniam git - distribuovan\u00fd verziovac\u00ed syst\u00e9m graphviz - n\u00e1stroj pre reprezent\u00e1ciu \u0161truktur\u00e1lnych inform\u00e1ci\u00ed vo forme diagramov doxygen - n\u00e1stroj na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du rsync - n\u00e1stroj na syschroniz\u00e1ciu a prenos s\u00faborov medzi vzdialen\u00fdmi syst\u00e9mami","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-mono/","text":"Mono \u00b6 Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie - zostavenie a n\u00e1sledne testovanie projektu. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie a testovanie. Z\u00e1vislosti \u00b6 mono-complete - bal\u00edk obsahuje kompil\u00e1tor a runtime pre v\u00fdvoj a sp\u00fa\u0161\u0165anie aplik\u00e1ci\u00ed zalo\u017een\u00fdch na technol\u00f3gi\u00e1ch Mono alebo Microsoft .NET mono-devel - v\u00fdvojov\u00e9 n\u00e1stroje mono - kompil\u00e1tor a dynamick\u00e9 kni\u017enice, ktor\u00e9 dok\u00e1\u017eu produkova\u0165 a vykon\u00e1va\u0165 CIL (Commmon Intermediate Language) bajtk\u00f3d a kni\u017enice tried nuget - spr\u00e1vca bal\u00edkov pre NuGet repozit\u00e1re","title":"Mono"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-mono/#mono","text":"Image sl\u00fa\u017ei na zre\u0165azen\u00e9 spracovanie - zostavenie a n\u00e1sledne testovanie projektu. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie a testovanie.","title":"Mono"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-mono/#z\u00e1vislosti","text":"mono-complete - bal\u00edk obsahuje kompil\u00e1tor a runtime pre v\u00fdvoj a sp\u00fa\u0161\u0165anie aplik\u00e1ci\u00ed zalo\u017een\u00fdch na technol\u00f3gi\u00e1ch Mono alebo Microsoft .NET mono-devel - v\u00fdvojov\u00e9 n\u00e1stroje mono - kompil\u00e1tor a dynamick\u00e9 kni\u017enice, ktor\u00e9 dok\u00e1\u017eu produkova\u0165 a vykon\u00e1va\u0165 CIL (Commmon Intermediate Language) bajtk\u00f3d a kni\u017enice tried nuget - spr\u00e1vca bal\u00edkov pre NuGet repozit\u00e1re","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-unity/","text":"Unity \u00b6 Image sl\u00fa\u017ei na zostavenie Unity \u010dasti projektu. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie pre platformy MS Windows, Linux a macOS. Z\u00e1vislosti \u00b6 libgtk-3-0 - kni\u017enica GUI GTK+ libglu1-mesa - pomocn\u00e1 kni\u017enica OpenGL libnss3 - kni\u017enice Network Security Systems - obsahuje implement\u00e1cie kryptografick\u00fdch kni\u017en\u00edc pre TLS/SSL a S/MIME libasound2 - zdie\u013ean\u00e1 kni\u017enica pre aplik\u00e1cie ALSA (Advanced Linux Sound Architecture) - zvukov\u00e1 architekt\u00fara pre Linux libgconf-2-4 - zdie\u013ean\u00e9 kni\u017enice - syst\u00e9m datab\u00e1zy konfigur\u00e1ci\u00ed na ukladanie nastaven\u00ed aplik\u00e1ci\u00ed libcap2 - kni\u017enica, ktor\u00e1 implementuje rozhrania capabilities pod\u013ea \u0161tandardu POSIX 1003.1e, ktor\u00e9 s\u00fa dostupn\u00e9 v linuxovom jadre - umo\u017e\u0148uj\u00fa roz\u010dleni\u0165 opr\u00e1vnenia root-a do mno\u017e\u00edn jednotliv\u00fdch opr\u00e1vnen\u00ed xvfb - virtu\u00e1lny framebuffer - falo\u0161n\u00fd X server gconf-service - podpora slu\u017eby D-Bus, ktor\u00fd pou\u017e\u00edva GConf na pr\u00edstup ku konfigura\u010dn\u00fdm \u00fadajom lib32gcc1 - kni\u017enica intern\u00fdch podprogramov, ktor\u00e9 vyu\u017e\u00edva GCC na prekonanie nedostatkov alebo \u0161peci\u00e1lnych potrieb konkr\u00e9tnych strojov lib32stdc++6 - GNU C++ kni\u017enica (32-bit verzia) libasound2 - kni\u017enica ALSA, jej \u0161tandardn\u00e9 z\u00e1suvn\u00e9 moduly a konfigura\u010dn\u00e9 s\u00fabory libc6 - \u0161tandardn\u00e9 kni\u017enice - napr. \u0161tandardn\u00e1 C kni\u017enica, matematick\u00e9 ki\u017enica a pod. libc6-i386 - 32-bitov\u00e1 verzia libc6 pre syst\u00e9my AMD64 libcairo2 - 2D vektorov\u00e1 grafick\u00e1 kni\u017enica libcups2 - tla\u010dov\u00fd syst\u00e9m, v\u0161eobecn\u00e1 n\u00e1hrada lpd; podpora Internet Printing Protocol (IPP) libdbus-1-3 - kni\u017enica pre syst\u00e9m posielania spr\u00e1v medzi procesmi libexpat1 - kni\u017enica jazyka C na syntaktick\u00fa anal\u00fdzu XML libfontconfig1 - v\u0161eobecn\u00e1 kni\u017enica na konfigur\u00e1ciu p\u00edsiem, ktor\u00e1 nez\u00e1vis\u00ed na X Window System libfreetype6 - syst\u00e9m na spr\u00e1vu fontov libgcc1 - zdie\u013ean\u00e1 verzia podpornej kni\u017enice vn\u00fatorn\u00fdch funkci\u00ed, ktor\u00e9 GCC pou\u017e\u00edva na odstr\u00e1nenie nedostatkov niektor\u00fdch strojov alebo pre \u0161peci\u00e1lne potreby niektor\u00fdch jazykov libgdk-pixbuf2.0-0 - kni\u017enica umo\u017e\u0148uje na\u010d\u00edtanie a ukladanie obr\u00e1zkov, zmenu ve\u013ekosti a ukladanie pixbuf, na\u010d\u00edtanie jednoduch\u00fdch anim\u00e1ci\u00ed (GIF) libgl1-mesa-glx - implement\u00e1cia OpenGL API - GLX Runtime libglib2.0-0 - kni\u017enica obsahuj\u00faca funkcie jazyka C pre stromy, hashovanie, zoznamy a re\u0165azce libgtk2.0-0 - kni\u017enica pre tvorbu GUI libnspr4 - kni\u017enica poskytuje platformovo nez\u00e1visl\u00e9 mo\u017enosti OS (negrafick\u00e9) - vl\u00e1kna, synchroniz\u00e1cia vl\u00e1kien, V/V be\u017en\u00fdch s\u00faborov a siete, \u010dasovanie intervalov a \u010das kalend\u00e1ra, z\u00e1kladn\u00fa spr\u00e1vu pam\u00e4te (malloc a free), linkovanie zdie\u013ean\u00fdch kni\u017en\u00edc libpango1.0-0 - kni\u017enica pre layoutovanie a renderovanie textu libstdc++6 - dodato\u010dn\u00e9 dynamick\u00e9 kni\u017enice pre programy v C++ zostaven\u00e9 kompil\u00e1torom GNU libx11-6 - bal\u00edk poskytuje klientsk\u00e9 rozhranie k X Window System inak zn\u00e1me ako \u201eXlib\u201c - poskytuje kompletn\u00e9 API z\u00e1kladn\u00fdch funkci\u00ed syst\u00e9mu okien libxcomposite1 - klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu protoloku X Composite - roz\u0161\u00edrenie Composite umo\u017e\u0148uje klientom zvan\u00fdm kompozitn\u00ed spr\u00e1vcovia riadi\u0165 kone\u010dn\u00e9 vykreslenie obrazovky, pri\u010dom sa vykon\u00e1va do pam\u00e4te - mimo obrazovky libxcursor1 - kni\u017enica ur\u010den\u00e1 na pomoc s n\u00e1jden\u00edm a na\u010d\u00edtan\u00edm kurzorov pre X Window System - kurzory mo\u017eno na\u010d\u00edta\u0165 zo s\u00faborov alebo z pam\u00e4te a m\u00f4\u017eu existova\u0165 v nieko\u013ek\u00fdch ve\u013ekostiach - kni\u017enica automaticky vyberie najvhodnej\u0161iu ve\u013ekos\u0165 - pri pou\u017eit\u00ed obr\u00e1zkov na\u010d\u00edtan\u00fdch zo s\u00faborov preferuje Xcursor na vykreslenie pou\u017eitie volania CreateCursor roz\u0161\u00edrenia Render libxdamage1 - kni\u017enica roz\u0161\u00edrenia po\u0161koden\u00fdch oblast\u00ed X11 - poskytuje klienta X Window System protokolu DAMAGE roz\u0161\u00edrenia protokolu X - upozor\u0148uje, ke\u010f sa oblasti na obrazovke zmenia (\u201epo\u0161kodia\u201c) libxext6 - kni\u017enica rozli\u010dn\u00fdch roz\u0161\u00edren\u00ed X11 - poskytuje klientsk\u00e9 rozhranie X Window System k nieko\u013ek\u00fdm roz\u0161\u00edreniam protokolu X libxfixes3 - roz\u0161iruj\u00faca kni\u017enica rozli\u010dn\u00fdch \u201eopr\u00e1v\u201c X11 - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu protokolu X \u201eXFIXES\u201c - podpora typov regi\u00f3nov a niektor\u00fdch funkci\u00ed kurzora libxi6 - kni\u017enica roz\u0161\u00edrenia X11 Input - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu XINPUT protokolu X - roz\u0161\u00edrenie Input umo\u017e\u0148uje nastavenie viacer\u00fdch vstupn\u00fdch zariaden\u00ed a hotplugging (prip\u00e1janie a odstra\u0148ovanie zariaden\u00ed po\u010das behu) libxrandr2 - kni\u017enica roz\u0161\u00edrenia X11 RandR - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu RandR protokolu X - roz\u0161\u00edrenie RandR umo\u017e\u0148uje konfigur\u00e1ciu atrib\u00fatov obrazovky ako rozl\u00ed\u0161enie, oto\u010denie a odraz za behu libxrender1 - klientsk\u00e1 kni\u017enica X Rendering Extension - X Rendering Extension (Render) pou\u017e\u00edva skladanie digit\u00e1lneho obrazu ako z\u00e1klad nov\u00e9ho vykres\u013eovacieho modelu v r\u00e1mci X Window System - vykres\u013eovanie geometrick\u00fdch obrazcov sa rob\u00ed tesel\u00e1ciou na strane klienta na bu\u010f trojuholn\u00edky, alebo lichobe\u017en\u00edky - text sa vykres\u013euje na\u010d\u00edtan\u00edm graf\u00e9m na server a vykreslen\u00edm ich mno\u017e\u00edn - kni\u017enica Xrender spr\u00edstup\u0148uje toto roz\u0161\u00edrenie X klientom libxtst6 - testovanie X11 - kni\u017enica roz\u0161\u00edrenia Record - poskytuje klientsk\u00e9 rozhranie X Window System roz\u0161\u00edrenia X protokolu Record - roz\u0161\u00edrenie Record umo\u017e\u0148uje X klientom syntetizova\u0165 vstupn\u00e9 udalosti, \u010do je u\u017eito\u010dn\u00e9 na automatick\u00e9 testovanie zlib1g - zlib je kni\u017enica implementuj\u00faca komprima\u010dn\u00fa met\u00f3du deflate, pou\u017e\u00edvan\u00fa v gzip a PKZIP debconf - syst\u00e9m na spr\u00e1vu konfigur\u00e1cie npm - spr\u00e1vca bal\u00edkov pre javascriptov\u00fa platformu Node.js libsoup2.4-1 - implement\u00e1cia kni\u017enice HTTP v C - mo\u017e\u0148uje aplik\u00e1ci\u00e1m GNOME pr\u00edstup k HTTP serverom na sieti asynchr\u00f3nnym sp\u00f4sobom ve\u013emi podobn\u00fdm programovaciemu modelu GTK+ (tie\u017e je podporovan\u00fd aj synchr\u00f3nny re\u017eim)","title":"Unity"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-unity/#unity","text":"Image sl\u00fa\u017ei na zostavenie Unity \u010dasti projektu. Image je zalo\u017een\u00fd na Ubuntu 18.04 a obsahuje nain\u0161talovan\u00e9 z\u00e1vislosti potrebn\u00e9 na zostavenie pre platformy MS Windows, Linux a macOS.","title":"Unity"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/gitlab_images/3dsoftviz_remake/image-unity/#z\u00e1vislosti","text":"libgtk-3-0 - kni\u017enica GUI GTK+ libglu1-mesa - pomocn\u00e1 kni\u017enica OpenGL libnss3 - kni\u017enice Network Security Systems - obsahuje implement\u00e1cie kryptografick\u00fdch kni\u017en\u00edc pre TLS/SSL a S/MIME libasound2 - zdie\u013ean\u00e1 kni\u017enica pre aplik\u00e1cie ALSA (Advanced Linux Sound Architecture) - zvukov\u00e1 architekt\u00fara pre Linux libgconf-2-4 - zdie\u013ean\u00e9 kni\u017enice - syst\u00e9m datab\u00e1zy konfigur\u00e1ci\u00ed na ukladanie nastaven\u00ed aplik\u00e1ci\u00ed libcap2 - kni\u017enica, ktor\u00e1 implementuje rozhrania capabilities pod\u013ea \u0161tandardu POSIX 1003.1e, ktor\u00e9 s\u00fa dostupn\u00e9 v linuxovom jadre - umo\u017e\u0148uj\u00fa roz\u010dleni\u0165 opr\u00e1vnenia root-a do mno\u017e\u00edn jednotliv\u00fdch opr\u00e1vnen\u00ed xvfb - virtu\u00e1lny framebuffer - falo\u0161n\u00fd X server gconf-service - podpora slu\u017eby D-Bus, ktor\u00fd pou\u017e\u00edva GConf na pr\u00edstup ku konfigura\u010dn\u00fdm \u00fadajom lib32gcc1 - kni\u017enica intern\u00fdch podprogramov, ktor\u00e9 vyu\u017e\u00edva GCC na prekonanie nedostatkov alebo \u0161peci\u00e1lnych potrieb konkr\u00e9tnych strojov lib32stdc++6 - GNU C++ kni\u017enica (32-bit verzia) libasound2 - kni\u017enica ALSA, jej \u0161tandardn\u00e9 z\u00e1suvn\u00e9 moduly a konfigura\u010dn\u00e9 s\u00fabory libc6 - \u0161tandardn\u00e9 kni\u017enice - napr. \u0161tandardn\u00e1 C kni\u017enica, matematick\u00e9 ki\u017enica a pod. libc6-i386 - 32-bitov\u00e1 verzia libc6 pre syst\u00e9my AMD64 libcairo2 - 2D vektorov\u00e1 grafick\u00e1 kni\u017enica libcups2 - tla\u010dov\u00fd syst\u00e9m, v\u0161eobecn\u00e1 n\u00e1hrada lpd; podpora Internet Printing Protocol (IPP) libdbus-1-3 - kni\u017enica pre syst\u00e9m posielania spr\u00e1v medzi procesmi libexpat1 - kni\u017enica jazyka C na syntaktick\u00fa anal\u00fdzu XML libfontconfig1 - v\u0161eobecn\u00e1 kni\u017enica na konfigur\u00e1ciu p\u00edsiem, ktor\u00e1 nez\u00e1vis\u00ed na X Window System libfreetype6 - syst\u00e9m na spr\u00e1vu fontov libgcc1 - zdie\u013ean\u00e1 verzia podpornej kni\u017enice vn\u00fatorn\u00fdch funkci\u00ed, ktor\u00e9 GCC pou\u017e\u00edva na odstr\u00e1nenie nedostatkov niektor\u00fdch strojov alebo pre \u0161peci\u00e1lne potreby niektor\u00fdch jazykov libgdk-pixbuf2.0-0 - kni\u017enica umo\u017e\u0148uje na\u010d\u00edtanie a ukladanie obr\u00e1zkov, zmenu ve\u013ekosti a ukladanie pixbuf, na\u010d\u00edtanie jednoduch\u00fdch anim\u00e1ci\u00ed (GIF) libgl1-mesa-glx - implement\u00e1cia OpenGL API - GLX Runtime libglib2.0-0 - kni\u017enica obsahuj\u00faca funkcie jazyka C pre stromy, hashovanie, zoznamy a re\u0165azce libgtk2.0-0 - kni\u017enica pre tvorbu GUI libnspr4 - kni\u017enica poskytuje platformovo nez\u00e1visl\u00e9 mo\u017enosti OS (negrafick\u00e9) - vl\u00e1kna, synchroniz\u00e1cia vl\u00e1kien, V/V be\u017en\u00fdch s\u00faborov a siete, \u010dasovanie intervalov a \u010das kalend\u00e1ra, z\u00e1kladn\u00fa spr\u00e1vu pam\u00e4te (malloc a free), linkovanie zdie\u013ean\u00fdch kni\u017en\u00edc libpango1.0-0 - kni\u017enica pre layoutovanie a renderovanie textu libstdc++6 - dodato\u010dn\u00e9 dynamick\u00e9 kni\u017enice pre programy v C++ zostaven\u00e9 kompil\u00e1torom GNU libx11-6 - bal\u00edk poskytuje klientsk\u00e9 rozhranie k X Window System inak zn\u00e1me ako \u201eXlib\u201c - poskytuje kompletn\u00e9 API z\u00e1kladn\u00fdch funkci\u00ed syst\u00e9mu okien libxcomposite1 - klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu protoloku X Composite - roz\u0161\u00edrenie Composite umo\u017e\u0148uje klientom zvan\u00fdm kompozitn\u00ed spr\u00e1vcovia riadi\u0165 kone\u010dn\u00e9 vykreslenie obrazovky, pri\u010dom sa vykon\u00e1va do pam\u00e4te - mimo obrazovky libxcursor1 - kni\u017enica ur\u010den\u00e1 na pomoc s n\u00e1jden\u00edm a na\u010d\u00edtan\u00edm kurzorov pre X Window System - kurzory mo\u017eno na\u010d\u00edta\u0165 zo s\u00faborov alebo z pam\u00e4te a m\u00f4\u017eu existova\u0165 v nieko\u013ek\u00fdch ve\u013ekostiach - kni\u017enica automaticky vyberie najvhodnej\u0161iu ve\u013ekos\u0165 - pri pou\u017eit\u00ed obr\u00e1zkov na\u010d\u00edtan\u00fdch zo s\u00faborov preferuje Xcursor na vykreslenie pou\u017eitie volania CreateCursor roz\u0161\u00edrenia Render libxdamage1 - kni\u017enica roz\u0161\u00edrenia po\u0161koden\u00fdch oblast\u00ed X11 - poskytuje klienta X Window System protokolu DAMAGE roz\u0161\u00edrenia protokolu X - upozor\u0148uje, ke\u010f sa oblasti na obrazovke zmenia (\u201epo\u0161kodia\u201c) libxext6 - kni\u017enica rozli\u010dn\u00fdch roz\u0161\u00edren\u00ed X11 - poskytuje klientsk\u00e9 rozhranie X Window System k nieko\u013ek\u00fdm roz\u0161\u00edreniam protokolu X libxfixes3 - roz\u0161iruj\u00faca kni\u017enica rozli\u010dn\u00fdch \u201eopr\u00e1v\u201c X11 - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu protokolu X \u201eXFIXES\u201c - podpora typov regi\u00f3nov a niektor\u00fdch funkci\u00ed kurzora libxi6 - kni\u017enica roz\u0161\u00edrenia X11 Input - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu XINPUT protokolu X - roz\u0161\u00edrenie Input umo\u017e\u0148uje nastavenie viacer\u00fdch vstupn\u00fdch zariaden\u00ed a hotplugging (prip\u00e1janie a odstra\u0148ovanie zariaden\u00ed po\u010das behu) libxrandr2 - kni\u017enica roz\u0161\u00edrenia X11 RandR - poskytuje klientsk\u00e9 rozhranie X Window System k roz\u0161\u00edreniu RandR protokolu X - roz\u0161\u00edrenie RandR umo\u017e\u0148uje konfigur\u00e1ciu atrib\u00fatov obrazovky ako rozl\u00ed\u0161enie, oto\u010denie a odraz za behu libxrender1 - klientsk\u00e1 kni\u017enica X Rendering Extension - X Rendering Extension (Render) pou\u017e\u00edva skladanie digit\u00e1lneho obrazu ako z\u00e1klad nov\u00e9ho vykres\u013eovacieho modelu v r\u00e1mci X Window System - vykres\u013eovanie geometrick\u00fdch obrazcov sa rob\u00ed tesel\u00e1ciou na strane klienta na bu\u010f trojuholn\u00edky, alebo lichobe\u017en\u00edky - text sa vykres\u013euje na\u010d\u00edtan\u00edm graf\u00e9m na server a vykreslen\u00edm ich mno\u017e\u00edn - kni\u017enica Xrender spr\u00edstup\u0148uje toto roz\u0161\u00edrenie X klientom libxtst6 - testovanie X11 - kni\u017enica roz\u0161\u00edrenia Record - poskytuje klientsk\u00e9 rozhranie X Window System roz\u0161\u00edrenia X protokolu Record - roz\u0161\u00edrenie Record umo\u017e\u0148uje X klientom syntetizova\u0165 vstupn\u00e9 udalosti, \u010do je u\u017eito\u010dn\u00e9 na automatick\u00e9 testovanie zlib1g - zlib je kni\u017enica implementuj\u00faca komprima\u010dn\u00fa met\u00f3du deflate, pou\u017e\u00edvan\u00fa v gzip a PKZIP debconf - syst\u00e9m na spr\u00e1vu konfigur\u00e1cie npm - spr\u00e1vca bal\u00edkov pre javascriptov\u00fa platformu Node.js libsoup2.4-1 - implement\u00e1cia kni\u017enice HTTP v C - mo\u017e\u0148uje aplik\u00e1ci\u00e1m GNOME pr\u00edstup k HTTP serverom na sieti asynchr\u00f3nnym sp\u00f4sobom ve\u013emi podobn\u00fdm programovaciemu modelu GTK+ (tie\u017e je podporovan\u00fd aj synchr\u00f3nny re\u017eim)","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/","text":"LuaDB \u00b6 Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua. before_script \u00b6 import SSH kl\u00fa\u010dov build stage \u00b6 s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py test stage \u00b6 spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua deploy stage \u00b6 export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"LuaDB"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/#luadb","text":"Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua.","title":"LuaDB"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/#before_script","text":"import SSH kl\u00fa\u010dov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/#build-stage","text":"s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/#test-stage","text":"spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua","title":"test stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luadb/#deploy-stage","text":"export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"deploy stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/","text":"LuaGit \u00b6 Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua. before_script \u00b6 import SSH kl\u00fa\u010dov build stage \u00b6 s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py test stage \u00b6 spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua deploy stage \u00b6 export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"LuaGit"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/#luagit","text":"Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua.","title":"LuaGit"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/#before_script","text":"import SSH kl\u00fa\u010dov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/#build-stage","text":"s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/#test-stage","text":"spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua","title":"test stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luagit/#deploy-stage","text":"export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"deploy stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/","text":"LuaMeg \u00b6 Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua. before_script \u00b6 import SSH kl\u00fa\u010dov build stage \u00b6 s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py test stage \u00b6 spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua deploy stage \u00b6 export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"LuaMeg"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/#luameg","text":"Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua.","title":"LuaMeg"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/#before_script","text":"import SSH kl\u00fa\u010dov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/#build-stage","text":"s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/#test-stage","text":"spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua","title":"test stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luameg/#deploy-stage","text":"export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"deploy stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/","text":"LuaMetrics \u00b6 Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua. before_script \u00b6 import SSH kl\u00fa\u010dov build stage \u00b6 s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py test stage \u00b6 spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua deploy stage \u00b6 export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"LuaMetrics"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/#luametrics","text":"Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua.","title":"LuaMetrics"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/#before_script","text":"import SSH kl\u00fa\u010dov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/#build-stage","text":"s\u0165ahovanie z\u00e1vislosti cmake a n\u00e1sledne make vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te vygenerovanie code snippetov pomocou doc-extra/snippet-extract.py","title":"build stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/#test-stage","text":"spustenie testov vo frameworku busted kontrola pokrytia zdrojov\u00e9ho k\u00f3du n\u00e1strojom luacov statick\u00e1 anal\u00fdza zdrojov\u00e9ho k\u00f3du v jazyku Lua","title":"test stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luametrics/#deploy-stage","text":"export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"deploy stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luatree/","text":"LuaTree \u00b6 Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua. before_script \u00b6 import SSH kl\u00fa\u010dov generate_doc stage \u00b6 vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te deploy_docs stage \u00b6 export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"LuaTree"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luatree/#luatree","text":"Pipeline sa sklad\u00e1 z before_script a 2 stage. Cel\u00e1 pipeline vyu\u017e\u00edva image registry.gitlab.com/fiit/common/ci-images/lua , ktor\u00fd obsahuje potrebn\u00e9 z\u00e1vislosti pre zostavovanie, testovanie a dokument\u00e1ciu modulov vytvoren\u00fdch v jazyku Lua.","title":"LuaTree"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luatree/#before_script","text":"import SSH kl\u00fa\u010dov","title":"before_script"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luatree/#generate_doc-stage","text":"vygenerovanie dokument\u00e1cie zo zdrojov\u00e9ho k\u00f3du n\u00e1strojom ldoc do adres\u00e1ra doc v HTML form\u00e1te","title":"generate_doc stage"},{"location":"dokumentacia_k_produktu/infrastruktura/ci/lua/luatree/#deploy_docs-stage","text":"export vygenerovanej dokument\u00e1cie na vzdialen\u00fd server prostredn\u00edctvom programu rsync","title":"deploy_docs stage"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/","text":"V\u00fdvoj\u00e1rske prostredie \u00b6 V\u00fdvoj\u00e1rske prostredie - devenv - umo\u017e\u0148uje lok\u00e1lny v\u00fdvoj a ladenie aplik\u00e1ci\u00ed. Z\u00e1kladom je pou\u017eitie CI image. Aby bolo mo\u017en\u00e9 \u010do najviac sa pribl\u00ed\u017ei\u0165 prostrediu CI, prostredie bolo prisp\u00f4soben\u00e9 potreb\u00e1m lok\u00e1lneho v\u00fdvoja prostredn\u00edctvom prostriedkov docker-compose , pri\u010dom image zostal nezmenen\u00fd oproti CI. Rie\u0161enie je implementovan\u00e9 vo forme kontajnerov, \u010do umo\u017e\u0148uje \u010fal\u0161ie bud\u00face roz\u0161\u00edrenie. S\u00fa\u010das\u0165ou rie\u0161enia s\u00fa aj v\u0161etky potrebn\u00e9 z\u00e1vislosti, ktor\u00e9 s\u00fa bu\u010f priamo obsiahnut\u00e9 v repozit\u00e1ri, alebo vo forme Git submodulov. Moment\u00e1lne je v rie\u0161en\u00ed podporovan\u00fd lok\u00e1lny v\u00fdvoj modulov v programovacom jazyku Lua prostredn\u00edctvom kontajnera luadev . Luadev \u00b6 Luadev je kontajner, ktor\u00fd umo\u017e\u0148uje lok\u00e1lny v\u00fdvoj, vr\u00e1tane ladenia, testovania a code coverage modulov v programovacom jazyku Lua. Prostredie vych\u00e1dza z Lua CI Image . Najz\u00e1sadnej\u0161\u00ed rozdiel oproti prostrediu CI je mierna modifik\u00e1cia ciest LUA_PATH a LUA_CPATH. Syst\u00e9mov\u00e9 cesty zostali zachovan\u00e9, rovnako ako aj cel\u00e1 \u0161trukt\u00fara pou\u017eit\u00e9ho CI image. K zmene do\u0161lo v cest\u00e1ch LUA_PATH_ADD a LUA_CPATH_ADD. Image bol navrhnut\u00fd tak, aby tieto premenn\u00e9 bolo mo\u017en\u00e9 prekona\u0165 v z\u00e1vislosti od prostredia, v ktorom bude nasaden\u00fd - CI alebo lok\u00e1lny v\u00fdvoj. Rovnako ako aj pri samotnom image plat\u00ed, \u017ee syst\u00e9mov\u00e9 cesty, t.j. LUA_PATH a LUA_CPATH by sa nemali meni\u0165 ! Je ich mo\u017en\u00e9 a pod\u013ea prostredia vhodn\u00e9 mierne prisp\u00f4sobi\u0165 argumentami LUA_PATH_ADD a LUA_CPATH_ADD. args: LUA_PATH_ADD: \"\\ src/?/init.lua;src/?.lua;\\ /luadev/luadb/src/?/init.lua;/luadev/luadb/src/?.lua;\\ /luadev/luameg/src/?/init.lua;/luadev/luameg/src/?.lua;\\ /luadev/luametrics/src/?/init.lua;/luadev/luametrics/src/?.lua;\\ /luadev/luagit/src/?/init.lua;/luadev/luagit/src/?.lua;\\ /luadev/luatree/src/?/init.lua;/luadev/luatree/src/?.lua\" LUA_CPATH_ADD: \"\" V tomto pr\u00edpade nie je potrebn\u00e9 pou\u017ei\u0165 \u0161pecifick\u00fa cestu LUA_CPATH, a tak m\u00e1 premenn\u00e1 LUA_CPATH_ADD hodnotu pr\u00e1zdneho re\u0165azca. Z\u00e1vislosti \u00b6 Prostredie luadev m\u00e1 nieko\u013eko z\u00e1vislost\u00ed, ktor\u00e9 s\u00fa bu\u010f umiestnen\u00e9 priamo v repozit\u00e1ri, alebo maj\u00fa formu Git submodulov. Lua CI Image \u00b6 CI Image pre Lua moduly obsahuj\u00faci v\u0161etky z\u00e1vislosti na spustenie, ladenie, testovanie a code coverage, m\u00e1 formu Git submodulu Pokia\u013e nie je image dostupn\u00fd lok\u00e1lne, bude zostaven\u00fd pomocou Dockerfile , ktor\u00fd bude po inicializ\u00e1cii submodulov dostupn\u00fd v kore\u0148ovom adres\u00e1ri devenv vscode-lrdb \u00b6 Plugin pre IDE Visual Studio Code, ktor\u00fd umo\u017e\u0148uje ladenie aplik\u00e1ci\u00ed v prostred\u00ed Docker kontajneru, vo v\u00fdvojovom prostred\u00ed pou\u017e\u00edvame vlastn\u00fd fork vscode-lrdb , ktor\u00fd umo\u017e\u0148uje pr\u00e1cu s absol\u00fatnymi cestami, plugin je umiestnen\u00fd priamo v repozit\u00e1ri devenv vo form\u00e1te vsix Prerekvizity \u00b6 Medzi prerekvizity patria : - Visual Studio Code - Docker - Docker-compose Moduly \u00b6 Prim\u00e1rnym \u00fa\u010delom prostredia luadev je lok\u00e1lny v\u00fdvoj Lua modulov, z tohto d\u00f4vodu s\u00fa jednotliv\u00e9 moduly, ktor\u00e9 s\u00fa vyv\u00edjan\u00e9 v r\u00e1mci projektu 3DSoftviz umiestnen\u00e9 v repozit\u00e1ri vo forme Git submodulov. Pr\u00edkazom git submodule update --init --remote d\u00f4jde k inicializ\u00e1cii a aktualiz\u00e1cii v\u0161etk\u00fdch Git submodulov. Moduly s\u00fa n\u00e1sledne umiestnen\u00e9 do adres\u00e1ra luadev , ktor\u00fd sl\u00fa\u017ei ako pracovn\u00fd adres\u00e1r pri lok\u00e1lnom v\u00fdvoji. Zv\u00e4zky \u00b6 Na prezistenciu \u00fadajov v prostred\u00ed luadev je pou\u017eit\u00fd adres\u00e1r luadev , ktor\u00fd je s\u00fa\u010das\u0165ou repozit\u00e1ra. Do tohto adres\u00e1ra s\u00fa inicializovan\u00e9 v\u0161etky vyv\u00edjan\u00e9 moduly, v ktor\u00fdch je n\u00e1sledne mo\u017en\u00e9 vykon\u00e1va\u0165 po\u017eadovan\u00e9 zmeny, testova\u0165 ich alebo ladi\u0165. Adres\u00e1r devenv/luadev/ hostite\u013esk\u00e9ho stroja je mapovan\u00fd na adres\u00e1r /luadev/ kontajnera. Tento adres\u00e1r je z\u00e1rove\u0148 nastaven\u00fd ako pracovn\u00fd adres\u00e1r. volumes: - ./luadev:/luadev working_dir: /luadev Porty \u00b6 Kv\u00f4li spr\u00e1vnej funk\u010dnosti LRDB debuggera je potrebn\u00e9 spr\u00e1vne mapovanie portu kontajnera na port hostite\u013esk\u00e9ho stroja, cez ktor\u00fd bude prebieha\u0165 komunik\u00e1cia medzi IDE Visual Studio Code a kontajnerom. Port mus\u00ed kore\u0161pondova\u0165 s konfigur\u00e1ciou LRDB na hostite\u013eskom stroji, rovnako ako s portom pou\u017eit\u00fdm v main s\u00fabore ur\u010denom pre ladenie, ktor\u00fd by sa mal nach\u00e1dza\u0165 v pr\u00edslu\u0161nom repozit\u00e1ri. O konfigur\u00e1cii je mo\u017en\u00e9 dozvedie\u0165 sa viac v pr\u00edru\u010dke pre v\u00fdvoj\u00e1rov alebo dokument\u00e1cii k Lua CI Image . Predvolen\u00fd je port 21110. Mapovanie portu 49155 je uveden\u00e9 kv\u00f4li uk\u00e1\u017eke RPC medzi serverovou \u010das\u0165ou vo forme kontajnera a klientskou \u010das\u0165ou. Viac inform\u00e1ci\u00ed o RPC je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii mo\u017enost\u00ed komunik\u00e1cie . ports: - \"21110:21110\" - \"49155:49155\" Spustenie \u00b6 Pred prv\u00fdm spusten\u00edm je potrebn\u00e1 in\u0161tal\u00e1cia pluginu vscode-lrdb do IDE Visual Studio Code. Taktie\u017e m\u00f4\u017ee by\u0165 potrebn\u00e1 jednoduch\u00e1 konfigur\u00e1cia pre konkr\u00e9tny repozit\u00e1r. Odpor\u00fa\u010dan\u00e9 je postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra . Pozn\u00e1mky \u00b6 Rozdielom medzi prostred\u00edm CI a prostred\u00edm pre lok\u00e1lny v\u00fdvoj, ktor\u00fd s\u00favis\u00ed s modifikovan\u00fdmi cestami LUA_PATH a LUA_CPATH, je nepou\u017eitie n\u00e1stoja CMake . Nako\u013eko vo v\u00fdvojovom prostred\u00ed m\u00e1me k dispoz\u00edcii v\u0161etky potrebn\u00e9 moduly, ktor\u00e9 m\u00f4\u017eu predstavova\u0165 navz\u00e1jom z\u00e1vislosti, nie je potrebn\u00e1 ich in\u0161tal\u00e1cia ako v pr\u00edpade prostredia CI, kedy bol pre ka\u017ed\u00fd modul vytvoren\u00fd adres\u00e1r _install obsahuj\u00faci samotn\u00fd modul a jeho z\u00e1vislosti. V pr\u00edpade v\u00fdvojov\u00e9ho prostredia je toto spr\u00e1vanie modifikovan\u00e9 prostred\u00edctvom modifikovanej cesty LUA_PATH_ADD. Jednotliv\u00e9 moduly h\u013ead\u00e1 interpreter v adres\u00e1ri src pr\u00edslu\u0161n\u00e9ho modulu. V pr\u00edpade pridania \u010fal\u0161ieho modulu je potrebn\u00e9 doplni\u0165 cestu do argumentu LUA_PATH_ADD v s\u00fabore docker-compose.yml . V s\u00fabore docker-compose.yml je definovan\u00fd ako preferovan\u00fd re\u017eim interakt\u00edvny, t.j. konzola opera\u010dn\u00e9ho syst\u00e9mu Linux Ubuntu , v ktorej je mo\u017en\u00e9 vykon\u00e1va\u0165 po\u017eadovan\u00e9 oper\u00e1cie. stdin_open: true tty: true","title":"V\u00fdvoj\u00e1rske prostredie"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#v\u00fdvoj\u00e1rske-prostredie","text":"V\u00fdvoj\u00e1rske prostredie - devenv - umo\u017e\u0148uje lok\u00e1lny v\u00fdvoj a ladenie aplik\u00e1ci\u00ed. Z\u00e1kladom je pou\u017eitie CI image. Aby bolo mo\u017en\u00e9 \u010do najviac sa pribl\u00ed\u017ei\u0165 prostrediu CI, prostredie bolo prisp\u00f4soben\u00e9 potreb\u00e1m lok\u00e1lneho v\u00fdvoja prostredn\u00edctvom prostriedkov docker-compose , pri\u010dom image zostal nezmenen\u00fd oproti CI. Rie\u0161enie je implementovan\u00e9 vo forme kontajnerov, \u010do umo\u017e\u0148uje \u010fal\u0161ie bud\u00face roz\u0161\u00edrenie. S\u00fa\u010das\u0165ou rie\u0161enia s\u00fa aj v\u0161etky potrebn\u00e9 z\u00e1vislosti, ktor\u00e9 s\u00fa bu\u010f priamo obsiahnut\u00e9 v repozit\u00e1ri, alebo vo forme Git submodulov. Moment\u00e1lne je v rie\u0161en\u00ed podporovan\u00fd lok\u00e1lny v\u00fdvoj modulov v programovacom jazyku Lua prostredn\u00edctvom kontajnera luadev .","title":"V\u00fdvoj\u00e1rske prostredie"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#luadev","text":"Luadev je kontajner, ktor\u00fd umo\u017e\u0148uje lok\u00e1lny v\u00fdvoj, vr\u00e1tane ladenia, testovania a code coverage modulov v programovacom jazyku Lua. Prostredie vych\u00e1dza z Lua CI Image . Najz\u00e1sadnej\u0161\u00ed rozdiel oproti prostrediu CI je mierna modifik\u00e1cia ciest LUA_PATH a LUA_CPATH. Syst\u00e9mov\u00e9 cesty zostali zachovan\u00e9, rovnako ako aj cel\u00e1 \u0161trukt\u00fara pou\u017eit\u00e9ho CI image. K zmene do\u0161lo v cest\u00e1ch LUA_PATH_ADD a LUA_CPATH_ADD. Image bol navrhnut\u00fd tak, aby tieto premenn\u00e9 bolo mo\u017en\u00e9 prekona\u0165 v z\u00e1vislosti od prostredia, v ktorom bude nasaden\u00fd - CI alebo lok\u00e1lny v\u00fdvoj. Rovnako ako aj pri samotnom image plat\u00ed, \u017ee syst\u00e9mov\u00e9 cesty, t.j. LUA_PATH a LUA_CPATH by sa nemali meni\u0165 ! Je ich mo\u017en\u00e9 a pod\u013ea prostredia vhodn\u00e9 mierne prisp\u00f4sobi\u0165 argumentami LUA_PATH_ADD a LUA_CPATH_ADD. args: LUA_PATH_ADD: \"\\ src/?/init.lua;src/?.lua;\\ /luadev/luadb/src/?/init.lua;/luadev/luadb/src/?.lua;\\ /luadev/luameg/src/?/init.lua;/luadev/luameg/src/?.lua;\\ /luadev/luametrics/src/?/init.lua;/luadev/luametrics/src/?.lua;\\ /luadev/luagit/src/?/init.lua;/luadev/luagit/src/?.lua;\\ /luadev/luatree/src/?/init.lua;/luadev/luatree/src/?.lua\" LUA_CPATH_ADD: \"\" V tomto pr\u00edpade nie je potrebn\u00e9 pou\u017ei\u0165 \u0161pecifick\u00fa cestu LUA_CPATH, a tak m\u00e1 premenn\u00e1 LUA_CPATH_ADD hodnotu pr\u00e1zdneho re\u0165azca.","title":"Luadev"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#z\u00e1vislosti","text":"Prostredie luadev m\u00e1 nieko\u013eko z\u00e1vislost\u00ed, ktor\u00e9 s\u00fa bu\u010f umiestnen\u00e9 priamo v repozit\u00e1ri, alebo maj\u00fa formu Git submodulov.","title":"Z\u00e1vislosti"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#lua-ci-image","text":"CI Image pre Lua moduly obsahuj\u00faci v\u0161etky z\u00e1vislosti na spustenie, ladenie, testovanie a code coverage, m\u00e1 formu Git submodulu Pokia\u013e nie je image dostupn\u00fd lok\u00e1lne, bude zostaven\u00fd pomocou Dockerfile , ktor\u00fd bude po inicializ\u00e1cii submodulov dostupn\u00fd v kore\u0148ovom adres\u00e1ri devenv","title":"Lua CI Image"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#vscode-lrdb","text":"Plugin pre IDE Visual Studio Code, ktor\u00fd umo\u017e\u0148uje ladenie aplik\u00e1ci\u00ed v prostred\u00ed Docker kontajneru, vo v\u00fdvojovom prostred\u00ed pou\u017e\u00edvame vlastn\u00fd fork vscode-lrdb , ktor\u00fd umo\u017e\u0148uje pr\u00e1cu s absol\u00fatnymi cestami, plugin je umiestnen\u00fd priamo v repozit\u00e1ri devenv vo form\u00e1te vsix","title":"vscode-lrdb"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#prerekvizity","text":"Medzi prerekvizity patria : - Visual Studio Code - Docker - Docker-compose","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#moduly","text":"Prim\u00e1rnym \u00fa\u010delom prostredia luadev je lok\u00e1lny v\u00fdvoj Lua modulov, z tohto d\u00f4vodu s\u00fa jednotliv\u00e9 moduly, ktor\u00e9 s\u00fa vyv\u00edjan\u00e9 v r\u00e1mci projektu 3DSoftviz umiestnen\u00e9 v repozit\u00e1ri vo forme Git submodulov. Pr\u00edkazom git submodule update --init --remote d\u00f4jde k inicializ\u00e1cii a aktualiz\u00e1cii v\u0161etk\u00fdch Git submodulov. Moduly s\u00fa n\u00e1sledne umiestnen\u00e9 do adres\u00e1ra luadev , ktor\u00fd sl\u00fa\u017ei ako pracovn\u00fd adres\u00e1r pri lok\u00e1lnom v\u00fdvoji.","title":"Moduly"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#zv\u00e4zky","text":"Na prezistenciu \u00fadajov v prostred\u00ed luadev je pou\u017eit\u00fd adres\u00e1r luadev , ktor\u00fd je s\u00fa\u010das\u0165ou repozit\u00e1ra. Do tohto adres\u00e1ra s\u00fa inicializovan\u00e9 v\u0161etky vyv\u00edjan\u00e9 moduly, v ktor\u00fdch je n\u00e1sledne mo\u017en\u00e9 vykon\u00e1va\u0165 po\u017eadovan\u00e9 zmeny, testova\u0165 ich alebo ladi\u0165. Adres\u00e1r devenv/luadev/ hostite\u013esk\u00e9ho stroja je mapovan\u00fd na adres\u00e1r /luadev/ kontajnera. Tento adres\u00e1r je z\u00e1rove\u0148 nastaven\u00fd ako pracovn\u00fd adres\u00e1r. volumes: - ./luadev:/luadev working_dir: /luadev","title":"Zv\u00e4zky"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#porty","text":"Kv\u00f4li spr\u00e1vnej funk\u010dnosti LRDB debuggera je potrebn\u00e9 spr\u00e1vne mapovanie portu kontajnera na port hostite\u013esk\u00e9ho stroja, cez ktor\u00fd bude prebieha\u0165 komunik\u00e1cia medzi IDE Visual Studio Code a kontajnerom. Port mus\u00ed kore\u0161pondova\u0165 s konfigur\u00e1ciou LRDB na hostite\u013eskom stroji, rovnako ako s portom pou\u017eit\u00fdm v main s\u00fabore ur\u010denom pre ladenie, ktor\u00fd by sa mal nach\u00e1dza\u0165 v pr\u00edslu\u0161nom repozit\u00e1ri. O konfigur\u00e1cii je mo\u017en\u00e9 dozvedie\u0165 sa viac v pr\u00edru\u010dke pre v\u00fdvoj\u00e1rov alebo dokument\u00e1cii k Lua CI Image . Predvolen\u00fd je port 21110. Mapovanie portu 49155 je uveden\u00e9 kv\u00f4li uk\u00e1\u017eke RPC medzi serverovou \u010das\u0165ou vo forme kontajnera a klientskou \u010das\u0165ou. Viac inform\u00e1ci\u00ed o RPC je mo\u017en\u00e9 n\u00e1js\u0165 v dokument\u00e1cii mo\u017enost\u00ed komunik\u00e1cie . ports: - \"21110:21110\" - \"49155:49155\"","title":"Porty"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#spustenie","text":"Pred prv\u00fdm spusten\u00edm je potrebn\u00e1 in\u0161tal\u00e1cia pluginu vscode-lrdb do IDE Visual Studio Code. Taktie\u017e m\u00f4\u017ee by\u0165 potrebn\u00e1 jednoduch\u00e1 konfigur\u00e1cia pre konkr\u00e9tny repozit\u00e1r. Odpor\u00fa\u010dan\u00e9 je postupova\u0165 pod\u013ea pr\u00edru\u010dky pre v\u00fdvoj\u00e1ra .","title":"Spustenie"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/devenv/#pozn\u00e1mky","text":"Rozdielom medzi prostred\u00edm CI a prostred\u00edm pre lok\u00e1lny v\u00fdvoj, ktor\u00fd s\u00favis\u00ed s modifikovan\u00fdmi cestami LUA_PATH a LUA_CPATH, je nepou\u017eitie n\u00e1stoja CMake . Nako\u013eko vo v\u00fdvojovom prostred\u00ed m\u00e1me k dispoz\u00edcii v\u0161etky potrebn\u00e9 moduly, ktor\u00e9 m\u00f4\u017eu predstavova\u0165 navz\u00e1jom z\u00e1vislosti, nie je potrebn\u00e1 ich in\u0161tal\u00e1cia ako v pr\u00edpade prostredia CI, kedy bol pre ka\u017ed\u00fd modul vytvoren\u00fd adres\u00e1r _install obsahuj\u00faci samotn\u00fd modul a jeho z\u00e1vislosti. V pr\u00edpade v\u00fdvojov\u00e9ho prostredia je toto spr\u00e1vanie modifikovan\u00e9 prostred\u00edctvom modifikovanej cesty LUA_PATH_ADD. Jednotliv\u00e9 moduly h\u013ead\u00e1 interpreter v adres\u00e1ri src pr\u00edslu\u0161n\u00e9ho modulu. V pr\u00edpade pridania \u010fal\u0161ieho modulu je potrebn\u00e9 doplni\u0165 cestu do argumentu LUA_PATH_ADD v s\u00fabore docker-compose.yml . V s\u00fabore docker-compose.yml je definovan\u00fd ako preferovan\u00fd re\u017eim interakt\u00edvny, t.j. konzola opera\u010dn\u00e9ho syst\u00e9mu Linux Ubuntu , v ktorej je mo\u017en\u00e9 vykon\u00e1va\u0165 po\u017eadovan\u00e9 oper\u00e1cie. stdin_open: true tty: true","title":"Pozn\u00e1mky"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/mkdocs/","text":"Mkdocs \u00b6 MkDocs je r\u00fdchly, jednoduch\u00fd statick\u00fd gener\u00e1tor str\u00e1nok, ktor\u00fd je zameran\u00fd na generovanie projektovej dokument\u00e1cie. Zdrojov\u00e9 s\u00fabory dokument\u00e1cie s\u00fa zap\u00edsan\u00e9 v Markdown a konfigurovan\u00e9 pomocou jedn\u00e9ho konfigura\u010dn\u00e9ho s\u00faboru YAML. MkDocs vytv\u00e1ra statick\u00e9 HTML str\u00e1nky, ktor\u00e9 m\u00f4\u017eu by\u0165 hostovan\u00e9 na str\u00e1nkach GitHub, Amazon S3 alebo kdeko\u013evek inde. Pluginy \u00b6 Do MkDocs je mo\u017en\u00e9 prida\u0165 \u010fal\u0161ie pluginy, pre roz\u0161\u00edrenie funkcionality. Macros \u00b6 Plugin makr\u00e1 n\u00e1m umo\u017e\u0148uje vytvori\u0165 si vlastn\u00e9 funkcie a tie vyu\u017e\u00edva\u0165 pri p\u00edsan\u00ed dokument\u00e1cie. Makr\u00e1 s\u00fa zap\u00edsan\u00e9 v s\u00fabore main.py vo funkcii define_env , kde s\u00fa ozna\u010den\u00e9 @env.macro tagom. Aktu\u00e1lne je definovan\u00e9 jedno makro code_snippet . Toto sl\u00fa\u017ei na dosadenie \u010dast\u00ed k\u00f3du do dokument\u00e1cie. Funkcia berie dva vstupn\u00e9 argumenty: path cesta k s\u00faboru, v ktorom sa nach\u00e1dza k\u00f3d, ktor\u00fd chcem vlo\u017ei\u0165. Cesta sa zapisuje od src/ adres\u00e1ra. Pr\u00edklad z luagit repozit\u00e1ra: src/luagit/repository.lua zap\u00ed\u0161em ako luagit/repository.lua . tag n\u00e1zov tagu. Ten mus\u00ed by\u0165 unik\u00e1tny vr\u00e1mci jedn\u00e9ho s\u00faboru. Pou\u017eitie makra \u00b6 code_snippet(\"luagit/repository.lua\", \"executeOsCommand\") Makro sa vklad\u00e1 do dvoch vnoren\u00fdch {}. Pre zistenie presnej cesty k s\u00fabory je mo\u017en\u00e9 sa pozrie\u0165 do artefaktu pipeline. Pr\u00edklad pre develop . Pred vlo\u017een\u00edm \u010dasti k\u00f3du pomocou makra do dokument\u00e1cie, je potrebn\u00e9 si najprv zvolen\u00fa \u010das\u0165 k\u00f3du ozna\u010di\u0165 v pr\u00edslu\u0161nom s\u00fabore so zdrojov\u00fdm k\u00f3dom. Za\u010diatok uk\u00e1\u017eky k\u00f3du je ozna\u010den\u00fd koment\u00e1rom code_block start <<n\u00e1zov tagu>> , koniec uk\u00e1\u017eky je ozna\u010den\u00fd koment\u00e1rom code_block end <<n\u00e1zov tagu>> . Za\u010diato\u010dn\u00fd aj kone\u010dn\u00fd n\u00e1zov tagu mus\u00ed by\u0165 pre jednu uk\u00e1\u017eku k\u00f3du rovnak\u00fd. V\u017edy mus\u00ed by\u0165 zap\u00edsan\u00fd za\u010diato\u010dn\u00fd aj ukon\u010duj\u00faci tag. Uk\u00e1\u017eky k\u00f3du m\u00f4\u017eu by\u0165 do seba vnoren\u00e9 alebo sa prekr\u00fdva\u0165. Aby boli makr\u00e1 funk\u010dn\u00e9 aj pri lok\u00e1lnom spusten\u00ed mkdocs-u, je potrebn\u00e9 si stiahnu\u0165 artefakt s vygenerovan\u00fdmi snippetmi a umiestni\u0165 ho do prie\u010dinka s dokument\u00e1ciou.","title":"Mkdocs"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/mkdocs/#mkdocs","text":"MkDocs je r\u00fdchly, jednoduch\u00fd statick\u00fd gener\u00e1tor str\u00e1nok, ktor\u00fd je zameran\u00fd na generovanie projektovej dokument\u00e1cie. Zdrojov\u00e9 s\u00fabory dokument\u00e1cie s\u00fa zap\u00edsan\u00e9 v Markdown a konfigurovan\u00e9 pomocou jedn\u00e9ho konfigura\u010dn\u00e9ho s\u00faboru YAML. MkDocs vytv\u00e1ra statick\u00e9 HTML str\u00e1nky, ktor\u00e9 m\u00f4\u017eu by\u0165 hostovan\u00e9 na str\u00e1nkach GitHub, Amazon S3 alebo kdeko\u013evek inde.","title":"Mkdocs"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/mkdocs/#pluginy","text":"Do MkDocs je mo\u017en\u00e9 prida\u0165 \u010fal\u0161ie pluginy, pre roz\u0161\u00edrenie funkcionality.","title":"Pluginy"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/mkdocs/#macros","text":"Plugin makr\u00e1 n\u00e1m umo\u017e\u0148uje vytvori\u0165 si vlastn\u00e9 funkcie a tie vyu\u017e\u00edva\u0165 pri p\u00edsan\u00ed dokument\u00e1cie. Makr\u00e1 s\u00fa zap\u00edsan\u00e9 v s\u00fabore main.py vo funkcii define_env , kde s\u00fa ozna\u010den\u00e9 @env.macro tagom. Aktu\u00e1lne je definovan\u00e9 jedno makro code_snippet . Toto sl\u00fa\u017ei na dosadenie \u010dast\u00ed k\u00f3du do dokument\u00e1cie. Funkcia berie dva vstupn\u00e9 argumenty: path cesta k s\u00faboru, v ktorom sa nach\u00e1dza k\u00f3d, ktor\u00fd chcem vlo\u017ei\u0165. Cesta sa zapisuje od src/ adres\u00e1ra. Pr\u00edklad z luagit repozit\u00e1ra: src/luagit/repository.lua zap\u00ed\u0161em ako luagit/repository.lua . tag n\u00e1zov tagu. Ten mus\u00ed by\u0165 unik\u00e1tny vr\u00e1mci jedn\u00e9ho s\u00faboru.","title":"Macros"},{"location":"dokumentacia_k_produktu/infrastruktura/podporne_nastroje/mkdocs/#pou\u017eitie-makra","text":"code_snippet(\"luagit/repository.lua\", \"executeOsCommand\") Makro sa vklad\u00e1 do dvoch vnoren\u00fdch {}. Pre zistenie presnej cesty k s\u00fabory je mo\u017en\u00e9 sa pozrie\u0165 do artefaktu pipeline. Pr\u00edklad pre develop . Pred vlo\u017een\u00edm \u010dasti k\u00f3du pomocou makra do dokument\u00e1cie, je potrebn\u00e9 si najprv zvolen\u00fa \u010das\u0165 k\u00f3du ozna\u010di\u0165 v pr\u00edslu\u0161nom s\u00fabore so zdrojov\u00fdm k\u00f3dom. Za\u010diatok uk\u00e1\u017eky k\u00f3du je ozna\u010den\u00fd koment\u00e1rom code_block start <<n\u00e1zov tagu>> , koniec uk\u00e1\u017eky je ozna\u010den\u00fd koment\u00e1rom code_block end <<n\u00e1zov tagu>> . Za\u010diato\u010dn\u00fd aj kone\u010dn\u00fd n\u00e1zov tagu mus\u00ed by\u0165 pre jednu uk\u00e1\u017eku k\u00f3du rovnak\u00fd. V\u017edy mus\u00ed by\u0165 zap\u00edsan\u00fd za\u010diato\u010dn\u00fd aj ukon\u010duj\u00faci tag. Uk\u00e1\u017eky k\u00f3du m\u00f4\u017eu by\u0165 do seba vnoren\u00e9 alebo sa prekr\u00fdva\u0165. Aby boli makr\u00e1 funk\u010dn\u00e9 aj pri lok\u00e1lnom spusten\u00ed mkdocs-u, je potrebn\u00e9 si stiahnu\u0165 artefakt s vygenerovan\u00fdmi snippetmi a umiestni\u0165 ho do prie\u010dinka s dokument\u00e1ciou.","title":"Pou\u017eitie makra"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/cpp_testy/","text":"C++ testy \u00b6 Pre p\u00edsanie nov\u00e9ho testu je potrebn\u00e9 vytvori\u0165 nov\u00fd projekt v Solution. Ako nov\u00fd projekt je potrebn\u00e9 Native Unit Test Project. Pre povolenie pr\u00edstupu testovacieho k\u00f3du vo funkci\u00e1ch v testovanom projekte je nutn\u00e9 prida\u0165 odkaz do projektu v testovacom projekte. Je potrebn\u00e9 prida\u0165 #include pre v\u0161etky hlavi\u010dkov\u00e9 s\u00fabory, ktor\u00e9 deklaruj\u00fa typy a funkcie, ktor\u00e9 chceme testova\u0165. Spustenie testov \u00b6 Testy sa nach\u00e1dzaj\u00fa v repozit\u00e1roch LuaInterface/tree/remake/tests a LuaGraph/tree/remake/tests v branchi remake, ktor\u00e9 s\u00fa najaktu\u00e1lnej\u0161ie. Testy sa p\u00fa\u0161\u0165aj\u00fa pomocou CI v stage QA.","title":"C++ testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/cpp_testy/#c-testy","text":"Pre p\u00edsanie nov\u00e9ho testu je potrebn\u00e9 vytvori\u0165 nov\u00fd projekt v Solution. Ako nov\u00fd projekt je potrebn\u00e9 Native Unit Test Project. Pre povolenie pr\u00edstupu testovacieho k\u00f3du vo funkci\u00e1ch v testovanom projekte je nutn\u00e9 prida\u0165 odkaz do projektu v testovacom projekte. Je potrebn\u00e9 prida\u0165 #include pre v\u0161etky hlavi\u010dkov\u00e9 s\u00fabory, ktor\u00e9 deklaruj\u00fa typy a funkcie, ktor\u00e9 chceme testova\u0165.","title":"C++ testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/cpp_testy/#spustenie-testov","text":"Testy sa nach\u00e1dzaj\u00fa v repozit\u00e1roch LuaInterface/tree/remake/tests a LuaGraph/tree/remake/tests v branchi remake, ktor\u00e9 s\u00fa najaktu\u00e1lnej\u0161ie. Testy sa p\u00fa\u0161\u0165aj\u00fa pomocou CI v stage QA.","title":"Spustenie testov"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/csharp_testy/","text":"C# testy \u00b6 Pre p\u00edsanie nov\u00e9ho testu, je potrebn\u00e9 vytvori\u0165 nov\u00fd projekt v Solution. Ako nov\u00fd projekt je potrebn\u00e9 NUnit Test Project (.NET Framework) N\u00e1sledne je potrebn\u00e9 prida\u0165 potrebn\u00e9 namespaces. Pr\u00edklad: using Lua.Common.Graph ; using NUnit.Framework ; using System ; using System.Collections.Generic ; using System.Linq ; using System.Text ; using System.Threading.Tasks ; Pre testovanie triedy je potrebn\u00e9 pou\u017e\u00edva\u0165 atrib\u00fat [TestClass] a pre testovanie met\u00f3dy triedy je potrebn\u00e9 pou\u017e\u00edva\u0165 [TestMethod] . Met\u00f3da Assert.AreEqual(x,y) porovn\u00e1va \u010di tieto dva vstupy s\u00fa rovnak\u00e9. Napr\u00edklad x je hodnota met\u00f3dy triedy, ktor\u00fa testujeme a y spr\u00e1vna hodnota, ktor\u00fa o\u010dak\u00e1vame. Spustenie testov \u00b6 Pre spustenie testov je potrebn\u00e9 nain\u0161talova\u0165 do Visual Studia komponent NUnit 3 Test Adapter. N\u00e1sledne je potrebn\u00e9 do prie\u010dinkov ( CSProjects\\Lua.Common.Tests\\bin\\Debug , CSProjects\\GraphCore.Tests\\bin\\Debug ) prekop\u00edrova\u0165 kni\u017enice lua51.dll , luagraph.dll , luainterface.dll . AllNodesHasPosition a Graph_LoadGraph aktu\u00e1lne nezbehn\u00fa, ale vo v\u00fdsledkoch predch\u00e1dzaj\u00facich testov, ktor\u00e9 vykon\u00e1vali predchadzaj\u00face t\u00edmy zbehli \u00faspe\u0161ne.","title":"C# testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/csharp_testy/#c-testy","text":"Pre p\u00edsanie nov\u00e9ho testu, je potrebn\u00e9 vytvori\u0165 nov\u00fd projekt v Solution. Ako nov\u00fd projekt je potrebn\u00e9 NUnit Test Project (.NET Framework) N\u00e1sledne je potrebn\u00e9 prida\u0165 potrebn\u00e9 namespaces. Pr\u00edklad: using Lua.Common.Graph ; using NUnit.Framework ; using System ; using System.Collections.Generic ; using System.Linq ; using System.Text ; using System.Threading.Tasks ; Pre testovanie triedy je potrebn\u00e9 pou\u017e\u00edva\u0165 atrib\u00fat [TestClass] a pre testovanie met\u00f3dy triedy je potrebn\u00e9 pou\u017e\u00edva\u0165 [TestMethod] . Met\u00f3da Assert.AreEqual(x,y) porovn\u00e1va \u010di tieto dva vstupy s\u00fa rovnak\u00e9. Napr\u00edklad x je hodnota met\u00f3dy triedy, ktor\u00fa testujeme a y spr\u00e1vna hodnota, ktor\u00fa o\u010dak\u00e1vame.","title":"C# testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/csharp_testy/#spustenie-testov","text":"Pre spustenie testov je potrebn\u00e9 nain\u0161talova\u0165 do Visual Studia komponent NUnit 3 Test Adapter. N\u00e1sledne je potrebn\u00e9 do prie\u010dinkov ( CSProjects\\Lua.Common.Tests\\bin\\Debug , CSProjects\\GraphCore.Tests\\bin\\Debug ) prekop\u00edrova\u0165 kni\u017enice lua51.dll , luagraph.dll , luainterface.dll . AllNodesHasPosition a Graph_LoadGraph aktu\u00e1lne nezbehn\u00fa, ale vo v\u00fdsledkoch predch\u00e1dzaj\u00facich testov, ktor\u00e9 vykon\u00e1vali predchadzaj\u00face t\u00edmy zbehli \u00faspe\u0161ne.","title":"Spustenie testov"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/lua_testy/","text":"Lua testy \u00b6 V projekte pre Unit testing je pou\u017eit\u00fd framework Busted. Pre nastavenie testov sa pou\u017e\u00edvaj\u00fa bloky describe a it . before_each definuje funkciu, ktor\u00e1 sa m\u00e1 vykona\u0165 pred ka\u017ed\u00fdm testovac\u00edm pr\u00edpadom a after_each definuje funkciu, ktor\u00e1 sa m\u00e1 vykona\u0165 po ka\u017edom testovacom pr\u00edpade. Uk\u00e1\u017eka testu: \u00b6 Nastavenie testovacieho modulu: Preddefinovanie objektov: Test Lua:","title":"Lua testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/lua_testy/#lua-testy","text":"V projekte pre Unit testing je pou\u017eit\u00fd framework Busted. Pre nastavenie testov sa pou\u017e\u00edvaj\u00fa bloky describe a it . before_each definuje funkciu, ktor\u00e1 sa m\u00e1 vykona\u0165 pred ka\u017ed\u00fdm testovac\u00edm pr\u00edpadom a after_each definuje funkciu, ktor\u00e1 sa m\u00e1 vykona\u0165 po ka\u017edom testovacom pr\u00edpade.","title":"Lua testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/lua_testy/#uk\u00e1\u017eka-testu","text":"Nastavenie testovacieho modulu: Preddefinovanie objektov: Test Lua:","title":"Uk\u00e1\u017eka testu:"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/terra_testy/","text":"Terra testy \u00b6 Do funkcie sa zadeklaruje local test = require(\"test\") N\u00e1sledne tento test testuje spravnos\u0165 pomocou eq. vi\u010f uk\u00e1\u017eku:","title":"Terra testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/terra_testy/#terra-testy","text":"Do funkcie sa zadeklaruje local test = require(\"test\") N\u00e1sledne tento test testuje spravnos\u0165 pomocou eq. vi\u010f uk\u00e1\u017eku:","title":"Terra testy"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/","text":"\u00davod \u00b6 Testy s\u00fa nap\u00edsan\u00e9 v C# a C++. Repozit\u00e1re 3dsoftvis_remake, LuaGraph a LuaInterface maj\u00fa plne vybudovan\u00fa CI infra\u0161trukt\u00faru. T\u00e1to infra\u0161trukt\u00fara sa star\u00e1 o to, aby sme vyv\u00edjan\u00fd projekt mali v\u017edy vo funk\u010dnom stave a v\u017edy bol pripraven\u00fd na dodanie z\u00e1kazn\u00edkovi. Infra\u0161trukt\u00fara sa star\u00e1 o build projektu a v\u0161etk\u00fdch jeho variant, p\u00fa\u0161\u0165an\u00edm automatizovan\u00fdch jednotkov\u00fdch testov, in\u0161trument\u00e1lnych testov, analyzovan\u00edm pokrytia k\u00f3du testami a zverej\u0148ovan\u00edm ich v\u00fdsledkov na GitLabe a na str\u00e1nke t\u00edmov\u00e9ho projektu vo forme artefaktov. Taktie\u017e analyzuje zdrojov\u00fd k\u00f3d a jeho kvalitu pomocou Lintu a ohlasuje mo\u017en\u00e9 s\u00e9mantick\u00e9 probl\u00e9my. Tie\u017e sa star\u00e1 o generovanie dokument\u00e1cie zo zdrojov\u00fdch k\u00f3dov pomocou Doxygenu. V\u0161etky vygenerovan\u00e9 artefakty s\u00fa pr\u00edstupn\u00e9 na webovej str\u00e1nke t\u00edmu http://team07-18.studenti.fiit.stuba.sk/ci-artifacts/ . QA \u00farove\u0148 \u00b6 T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a udr\u017eiavanie kvality a zabr\u00e1nenie regresii, teda aby po zmene k\u00f3du na\u010falej spr\u00e1vne fungoval. run_tests - T\u00e1to \u00faloha testuje C# moduly run_lua_tests - T\u00e1to \u00faloha testuje Lua moduly CMAKE \u00b6 BUILD_SOFTVIZ_MODULES_TESTS Ak je hodnota TRUE , do buildu sa zahrnie build testov pre softviz moduly Predvolen\u00e1 hodnota: FALSE V\u00fdstupn\u00fd adres\u00e1r: ./_install/SoftvizModules.Tests/ Testy pre Softviz moduly 3DSoftviz/ \u00b6 CSProjects/ - Softviz moduly (C#) spolu so svojimi testami, tie s\u00fa automaticky pribalen\u00e9 do unity projektu a obsahuj\u00fa cel\u00fa logiku ./Assets/ UnityTests - Testy pre Unity projekt V\u0161eobecn\u00e1 adresarov\u00e1 \u0161trukt\u00fara repozit\u00e1ra \u00b6 Project/ ./_install/ - obsahuje buildnut\u00e9 artefakty Softviz/ - Plne funk\u010dn\u00fd softviz projekt SoftvizModules/ - Moduly pre Softviz projekt SoftvizModules.Tests/ - Testy pre Softviz moduly ./cmake/ - Obsahuje cmake moduly ./Documentation/ - Dokument\u00e1cia k projektu ./Projects/ - Obsahuje jednotliv\u00e9 projekty Softvizu LuaDependencies/ - Lua kni\u017enice, ktor\u00e9 s\u00fa pridan\u00e9 do repozit\u00e1ra ako git submoduly 3DSoftviz/ CSProjects/ - Softviz moduly (C#) spolu so svojimi testami, tie s\u00fa automaticky pribalen\u00e9 do unity projektu a obsahuj\u00fa cel\u00fa logiku UnityProject/ - Unity projekt pre Softviz, sl\u00fa\u017ei iba ako vizualiza\u010dn\u00e1 vrstva. V\u0161etka ostatn\u00e1 logika patr\u00ed do Softviz modulov ./resources/ - Dodato\u010dn\u00e9 s\u00fabory k projektom (spolo\u010dn\u00e9 scripty, obr\u00e1zky, ...) Adresarov\u00e1 \u0161trukt\u00fara pre Unity projekt \u00b6 ./Assets/ Animations - Skripty pre anim\u00e1cie Editor - Skripty pre Unity Editor External - Extern\u00e9 assety z Assets Store Plugins - Extern\u00e9 kni\u017enice ExternalModule - Extern\u00e9 C# moduly, napr. Softviz moduly Lua - Nat\u00edvne (C, C++) kni\u017enice pre pr\u00e1cu s Lua Resources - Zdroje pre Unity - Prefabs , Textures , Materials , Fonts , ... Scenes - Unity sc\u00e9ny Scripts - Skripty pre Unity objekty, StreamingAssets - Assety, ktor\u00e9 nie s\u00fa pri builde pribalen\u00e9 do projektu, ale iba prekop\u00edrovan\u00e9 k projektu LuaScripts - V\u0161etky lua scripty, ktor\u00e9 by malo byt mo\u017en\u00e9 dynamicky meni\u0165 aj po skompilovan\u00ed unity projektu UnityTests - Testy pre Unity projekt ./ProjectSetting","title":"\u00davod"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#\u00favod","text":"Testy s\u00fa nap\u00edsan\u00e9 v C# a C++. Repozit\u00e1re 3dsoftvis_remake, LuaGraph a LuaInterface maj\u00fa plne vybudovan\u00fa CI infra\u0161trukt\u00faru. T\u00e1to infra\u0161trukt\u00fara sa star\u00e1 o to, aby sme vyv\u00edjan\u00fd projekt mali v\u017edy vo funk\u010dnom stave a v\u017edy bol pripraven\u00fd na dodanie z\u00e1kazn\u00edkovi. Infra\u0161trukt\u00fara sa star\u00e1 o build projektu a v\u0161etk\u00fdch jeho variant, p\u00fa\u0161\u0165an\u00edm automatizovan\u00fdch jednotkov\u00fdch testov, in\u0161trument\u00e1lnych testov, analyzovan\u00edm pokrytia k\u00f3du testami a zverej\u0148ovan\u00edm ich v\u00fdsledkov na GitLabe a na str\u00e1nke t\u00edmov\u00e9ho projektu vo forme artefaktov. Taktie\u017e analyzuje zdrojov\u00fd k\u00f3d a jeho kvalitu pomocou Lintu a ohlasuje mo\u017en\u00e9 s\u00e9mantick\u00e9 probl\u00e9my. Tie\u017e sa star\u00e1 o generovanie dokument\u00e1cie zo zdrojov\u00fdch k\u00f3dov pomocou Doxygenu. V\u0161etky vygenerovan\u00e9 artefakty s\u00fa pr\u00edstupn\u00e9 na webovej str\u00e1nke t\u00edmu http://team07-18.studenti.fiit.stuba.sk/ci-artifacts/ .","title":"\u00davod"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#qa-\u00farove\u0148","text":"T\u00e1to \u00farove\u0148 vykon\u00e1va testovanie a udr\u017eiavanie kvality a zabr\u00e1nenie regresii, teda aby po zmene k\u00f3du na\u010falej spr\u00e1vne fungoval. run_tests - T\u00e1to \u00faloha testuje C# moduly run_lua_tests - T\u00e1to \u00faloha testuje Lua moduly","title":"QA \u00farove\u0148"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#cmake","text":"BUILD_SOFTVIZ_MODULES_TESTS Ak je hodnota TRUE , do buildu sa zahrnie build testov pre softviz moduly Predvolen\u00e1 hodnota: FALSE V\u00fdstupn\u00fd adres\u00e1r: ./_install/SoftvizModules.Tests/ Testy pre Softviz moduly","title":"CMAKE"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#3dsoftviz","text":"CSProjects/ - Softviz moduly (C#) spolu so svojimi testami, tie s\u00fa automaticky pribalen\u00e9 do unity projektu a obsahuj\u00fa cel\u00fa logiku ./Assets/ UnityTests - Testy pre Unity projekt","title":"3DSoftviz/"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#v\u0161eobecn\u00e1-adresarov\u00e1-\u0161trukt\u00fara-repozit\u00e1ra","text":"Project/ ./_install/ - obsahuje buildnut\u00e9 artefakty Softviz/ - Plne funk\u010dn\u00fd softviz projekt SoftvizModules/ - Moduly pre Softviz projekt SoftvizModules.Tests/ - Testy pre Softviz moduly ./cmake/ - Obsahuje cmake moduly ./Documentation/ - Dokument\u00e1cia k projektu ./Projects/ - Obsahuje jednotliv\u00e9 projekty Softvizu LuaDependencies/ - Lua kni\u017enice, ktor\u00e9 s\u00fa pridan\u00e9 do repozit\u00e1ra ako git submoduly 3DSoftviz/ CSProjects/ - Softviz moduly (C#) spolu so svojimi testami, tie s\u00fa automaticky pribalen\u00e9 do unity projektu a obsahuj\u00fa cel\u00fa logiku UnityProject/ - Unity projekt pre Softviz, sl\u00fa\u017ei iba ako vizualiza\u010dn\u00e1 vrstva. V\u0161etka ostatn\u00e1 logika patr\u00ed do Softviz modulov ./resources/ - Dodato\u010dn\u00e9 s\u00fabory k projektom (spolo\u010dn\u00e9 scripty, obr\u00e1zky, ...)","title":"V\u0161eobecn\u00e1 adresarov\u00e1 \u0161trukt\u00fara repozit\u00e1ra"},{"location":"dokumentacia_k_produktu/infrastruktura/testy/uvod/#adresarov\u00e1-\u0161trukt\u00fara-pre-unity-projekt","text":"./Assets/ Animations - Skripty pre anim\u00e1cie Editor - Skripty pre Unity Editor External - Extern\u00e9 assety z Assets Store Plugins - Extern\u00e9 kni\u017enice ExternalModule - Extern\u00e9 C# moduly, napr. Softviz moduly Lua - Nat\u00edvne (C, C++) kni\u017enice pre pr\u00e1cu s Lua Resources - Zdroje pre Unity - Prefabs , Textures , Materials , Fonts , ... Scenes - Unity sc\u00e9ny Scripts - Skripty pre Unity objekty, StreamingAssets - Assety, ktor\u00e9 nie s\u00fa pri builde pribalen\u00e9 do projektu, ale iba prekop\u00edrovan\u00e9 k projektu LuaScripts - V\u0161etky lua scripty, ktor\u00e9 by malo byt mo\u017en\u00e9 dynamicky meni\u0165 aj po skompilovan\u00ed unity projektu UnityTests - Testy pre Unity projekt ./ProjectSetting","title":"Adresarov\u00e1 \u0161trukt\u00fara pre Unity projekt"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/","text":"\ud83c\udf4e MacOS \u00b6 Prerekvizity \u00b6 Mono 6.4.0 Mono predstavuje open source implement\u00e1ciu Microsoft .NET Framework. CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Unity 2018.1.9f2 Unity je v\u00fdvojov\u00e1 platforma pre tvorbu real-time 3D aplik\u00e1ci\u00ed, Potrebn\u00e9 je stiahnu\u0165 a nain\u0161talova\u0165 aplik\u00e1ciu Unity Hub, do ktor\u00e9ho je potom mo\u017en\u00e9 prida\u0165 po\u017eadovan\u00fa verziu Unity. Git potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub Postup \u00b6 Vygenerovanie ssh k\u013e\u00fa\u010da \u00b6 - Vygenerujeme ssh k\u013e\u00fa\u010d `ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"`, - Spust\u00edme ssh-agent na pozad\u00ed `eval \"$(ssh-agent -s)\"`, - Prostredn\u00edctvom \u013eubovo\u013en\u00e9ho textov\u00e9ho editora modifikujeme s\u00fabor ~/.ssh/config Host * AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa Prid\u00e1me priv\u00e1tny SSH k\u013e\u00fa\u010d do ssh-agenta, pokia\u013e sa vygenerovan\u00fd priv\u00e1tny k\u013e\u00fa\u010d nach\u00e1dza v s\u00fabore s in\u00fdm menom, n\u00e1zov id_rsa t\u00fdmto n\u00e1zvom nahrad\u00edme ssh-add -K ~/.ssh/id_rsa , pr\u00edkazom pbcopy skop\u00edrujeme verejn\u00fd k\u013e\u00fa\u010d do schr\u00e1nky (clipboard) pbcopy < ~/.ssh/id_rsa.pub , k\u013e\u00fa\u010d potom vlo\u017e\u00edme do svojho konta na port\u00e1loch GitHub a GitLab . Naklonovanie repozit\u00e1ra 3DSoftVis_Remake \u00b6 - pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH `git clone git@gitlab.com:FIIT/3DSoftVis_Remake/3dsoftvis_remake.git` a prejdeme do adres\u00e1ra `cd 3dsoftvis_remake/`, V\u00fdber vetvy \u00b6 - pr\u00edkazom `git checkout zemko-us-42` vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade pracovn\u00fa vetvu pre platformu macOS Inicializ\u00e1cia sub-modulov \u00b6 - inicializ\u00e1ciu vykon\u00e1me pr\u00edkazom `git submodule update --init --recursive`, Konfigur\u00e1cia CMake \u00b6 - otvor\u00edme program CMake, - ako `source code` zvol\u00edme prie\u010dinok `3dsoftvis_remake`, - ako `build binaries` zvol\u00edme prie\u010dinok `3dsoftvis_remake/_build`, - stla\u010d\u00edme tla\u010didlo configure, - ako gener\u00e1tor pou\u017eijeme `Unix Makefiles` a vyberieme mo\u017enos\u0165 `Use default native compilers`, - vyberieme mo\u017enosti `BUILD_DOXYGEN_DOCUMENTATION`, `BUILD_SOFTVIZ_MODULES_TESTS`, `BUILD_UNITY`, `USE_TERRA_BINARIES`, - ako `CMAKE_INSTALL_PREFIX` zvol\u00edme prie\u010dinok `3dsoftvis_remake/_install`, - stla\u010d\u00edme tla\u010didlo configure, - ako `UNITY EXECUTABLE` nastav\u00edme cestu k `Unity.app`, - ako `UNITY_TARGET_PLATFORM` zvol\u00edme MacOS, - stla\u010d\u00edme tla\u010didlo generate Build \u00b6 - v pr\u00edkazovom riadku prejdeme do adres\u00e1ra `3dsoftvis_remake/_build`, - build vykon\u00e1me pr\u00edkazom `make CopyExternalDataToUnity`, Import do Unity \u00b6 - spust\u00edme aplik\u00e1ciu Unity Hub, - vyberieme mo\u017enos\u0165 Add, - vyh\u013ead\u00e1me podadres\u00e1r `3dsoftvis_remake/Projects/3DSoftviz/UnityProject` - vyberieme mo\u017enos\u0165 Open. Testy \u00b6 - testy pre C# moduly - SoftvisModules - je mo\u017en\u00e9 zostavi\u0165 pr\u00edkazom `make SoftvizModulesTests` z adres\u00e1ra `3dsoftvis_remake/_build`, - testy sa potom nach\u00e1dzaj\u00fa v adres\u00e1ri `3dsoftvis_remake/_install/SoftvizModules.Tests`, - prejdeme do adres\u00e1ra `3dsoftvis_remake/Projects/3DSoftviz/CSProjects/`, - spust\u00edme pr\u00edkaz `nuget restore . `, ktor\u00fd nain\u0161taluje z\u00e1vislosti potrebn\u00e9 pre sp\u00fa\u0161\u0165anie testov, - prejdeme do adres\u00e1ra `packages/NUnit.ConsoleRunner.3.9.0/tools/`, - n\u00e1sledne je mo\u017en\u00e9 testy spusti\u0165 pr\u00edkazom `mono nunit3-console.exe ../../../../../../_install/SoftvizModules.Tests/*.dll` Probl\u00e9my \u00b6 Terra v projekte sa vyu\u017e\u00edva nadstavba nad jazykom Lua - Terra (pre layouter v Unity vrstve), pou\u017eit\u00e1 implement\u00e1cia Terra v sebe zah\u0155\u0148a Lua kompil\u00e1tor, ktor\u00fd m\u00e1 na platforme macOS probl\u00e9m s alok\u00e1ciou pam\u00e4ti, namiesto Terra je moment\u00e1lne pou\u017eit\u00fd n\u00e1stroj Luapower, resp. LuaJIT, ktor\u00fd probl\u00e9m s alok\u00e1ciou pam\u00e4ti nem\u00e1, probl\u00e9mom je v\u0161ak implement\u00e1cia Terra, nako\u013eko obsahuje bug, ktor\u00fd moment\u00e1lne neumo\u017e\u0148uje mo\u017enosti nadstavby Terra vyu\u017ei\u0165. Unity pri snahe o spustenie projektu aplik\u00e1cia vyp\u00ed\u0161e chybov\u00e9 hl\u00e1senie DllNotFoundException: luainterface , probl\u00e9m m\u00f4\u017ee sp\u00f4sobova\u0165 Terra, nako\u013eko ju vyu\u017e\u00edva layouter, \u010fal\u0161\u00edm probl\u00e9mom m\u00f4\u017ee by\u0165 nastavenie ciest Testy po zmen\u00e1ch CMakeLists.txt s\u00faborov a pou\u017eit\u00ed implement\u00e1cie Luapower s\u00fa uspe\u0161ne vykonan\u00e9 v\u0161etky testy zameran\u00e9 na modul LuaInterface pri testoch Lua.Common.Tests je \u00faspe\u0161ne vykonan\u00e1 v\u00e4\u010d\u0161ina testov, ne\u00faspe\u0161ne s\u00fa vykonan\u00e9 2 testy zameran\u00e9 na modul LuaGraph - GraphObjectRawDataAreLoadedCorrectly a LuaGraphLoadsMockedLuaGraphCorrectly, testy GraphCore.Tests s\u00fa ne\u00faspe\u0161n\u00e9 v\u0161etky, chyba vznik\u00e1 pri volan\u00ed kon\u0161truktora modulu LuaGraph.","title":"\ud83c\udf4e MacOS"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#-macos","text":"","title":"\ud83c\udf4e MacOS"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#prerekvizity","text":"Mono 6.4.0 Mono predstavuje open source implement\u00e1ciu Microsoft .NET Framework. CMake 3.15.4 CMake je n\u00e1stroj na spr\u00e1vu procesu zostavovania softv\u00e9ru, podporuje adres\u00e1rov\u00fa hierarchiu a viacn\u00e1sobn\u00e9 z\u00e1vislosti. Doxygen 1.8.16 Doxygen je n\u00e1stroj na generovanie dokument\u00e1cie z anotovan\u00e9ho zdrojov\u00e9ho k\u00f3du aplik\u00e1cie. Unity 2018.1.9f2 Unity je v\u00fdvojov\u00e1 platforma pre tvorbu real-time 3D aplik\u00e1ci\u00ed, Potrebn\u00e9 je stiahnu\u0165 a nain\u0161talova\u0165 aplik\u00e1ciu Unity Hub, do ktor\u00e9ho je potom mo\u017en\u00e9 prida\u0165 po\u017eadovan\u00fa verziu Unity. Git potrebn\u00e9 je nahra\u0165 svoj verejn\u00fd k\u013e\u00fa\u010d na GitLab , ale aj GitHub","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#postup","text":"","title":"Postup"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#vygenerovanie-ssh-k\u013e\u00fa\u010da","text":"- Vygenerujeme ssh k\u013e\u00fa\u010d `ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"`, - Spust\u00edme ssh-agent na pozad\u00ed `eval \"$(ssh-agent -s)\"`, - Prostredn\u00edctvom \u013eubovo\u013en\u00e9ho textov\u00e9ho editora modifikujeme s\u00fabor ~/.ssh/config Host * AddKeysToAgent yes UseKeychain yes IdentityFile ~/.ssh/id_rsa Prid\u00e1me priv\u00e1tny SSH k\u013e\u00fa\u010d do ssh-agenta, pokia\u013e sa vygenerovan\u00fd priv\u00e1tny k\u013e\u00fa\u010d nach\u00e1dza v s\u00fabore s in\u00fdm menom, n\u00e1zov id_rsa t\u00fdmto n\u00e1zvom nahrad\u00edme ssh-add -K ~/.ssh/id_rsa , pr\u00edkazom pbcopy skop\u00edrujeme verejn\u00fd k\u013e\u00fa\u010d do schr\u00e1nky (clipboard) pbcopy < ~/.ssh/id_rsa.pub , k\u013e\u00fa\u010d potom vlo\u017e\u00edme do svojho konta na port\u00e1loch GitHub a GitLab .","title":"Vygenerovanie ssh k\u013e\u00fa\u010da"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#naklonovanie-repozit\u00e1ra-3dsoftvis_remake","text":"- pokia\u013e sme nastavili SSH k\u013e\u00fa\u010d, repozit\u00e1r naklonujeme prostredn\u00edctvom SSH `git clone git@gitlab.com:FIIT/3DSoftVis_Remake/3dsoftvis_remake.git` a prejdeme do adres\u00e1ra `cd 3dsoftvis_remake/`,","title":"Naklonovanie repozit\u00e1ra 3DSoftVis_Remake"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#v\u00fdber-vetvy","text":"- pr\u00edkazom `git checkout zemko-us-42` vyberieme po\u017eadovan\u00fa vetvu - v na\u0161om pr\u00edpade pracovn\u00fa vetvu pre platformu macOS","title":"V\u00fdber vetvy"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#inicializ\u00e1cia-sub-modulov","text":"- inicializ\u00e1ciu vykon\u00e1me pr\u00edkazom `git submodule update --init --recursive`,","title":"Inicializ\u00e1cia sub-modulov"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#konfigur\u00e1cia-cmake","text":"- otvor\u00edme program CMake, - ako `source code` zvol\u00edme prie\u010dinok `3dsoftvis_remake`, - ako `build binaries` zvol\u00edme prie\u010dinok `3dsoftvis_remake/_build`, - stla\u010d\u00edme tla\u010didlo configure, - ako gener\u00e1tor pou\u017eijeme `Unix Makefiles` a vyberieme mo\u017enos\u0165 `Use default native compilers`, - vyberieme mo\u017enosti `BUILD_DOXYGEN_DOCUMENTATION`, `BUILD_SOFTVIZ_MODULES_TESTS`, `BUILD_UNITY`, `USE_TERRA_BINARIES`, - ako `CMAKE_INSTALL_PREFIX` zvol\u00edme prie\u010dinok `3dsoftvis_remake/_install`, - stla\u010d\u00edme tla\u010didlo configure, - ako `UNITY EXECUTABLE` nastav\u00edme cestu k `Unity.app`, - ako `UNITY_TARGET_PLATFORM` zvol\u00edme MacOS, - stla\u010d\u00edme tla\u010didlo generate","title":"Konfigur\u00e1cia CMake"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#build","text":"- v pr\u00edkazovom riadku prejdeme do adres\u00e1ra `3dsoftvis_remake/_build`, - build vykon\u00e1me pr\u00edkazom `make CopyExternalDataToUnity`,","title":"Build"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#import-do-unity","text":"- spust\u00edme aplik\u00e1ciu Unity Hub, - vyberieme mo\u017enos\u0165 Add, - vyh\u013ead\u00e1me podadres\u00e1r `3dsoftvis_remake/Projects/3DSoftviz/UnityProject` - vyberieme mo\u017enos\u0165 Open.","title":"Import do Unity"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#testy","text":"- testy pre C# moduly - SoftvisModules - je mo\u017en\u00e9 zostavi\u0165 pr\u00edkazom `make SoftvizModulesTests` z adres\u00e1ra `3dsoftvis_remake/_build`, - testy sa potom nach\u00e1dzaj\u00fa v adres\u00e1ri `3dsoftvis_remake/_install/SoftvizModules.Tests`, - prejdeme do adres\u00e1ra `3dsoftvis_remake/Projects/3DSoftviz/CSProjects/`, - spust\u00edme pr\u00edkaz `nuget restore . `, ktor\u00fd nain\u0161taluje z\u00e1vislosti potrebn\u00e9 pre sp\u00fa\u0161\u0165anie testov, - prejdeme do adres\u00e1ra `packages/NUnit.ConsoleRunner.3.9.0/tools/`, - n\u00e1sledne je mo\u017en\u00e9 testy spusti\u0165 pr\u00edkazom `mono nunit3-console.exe ../../../../../../_install/SoftvizModules.Tests/*.dll`","title":"Testy"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/macos/#probl\u00e9my","text":"Terra v projekte sa vyu\u017e\u00edva nadstavba nad jazykom Lua - Terra (pre layouter v Unity vrstve), pou\u017eit\u00e1 implement\u00e1cia Terra v sebe zah\u0155\u0148a Lua kompil\u00e1tor, ktor\u00fd m\u00e1 na platforme macOS probl\u00e9m s alok\u00e1ciou pam\u00e4ti, namiesto Terra je moment\u00e1lne pou\u017eit\u00fd n\u00e1stroj Luapower, resp. LuaJIT, ktor\u00fd probl\u00e9m s alok\u00e1ciou pam\u00e4ti nem\u00e1, probl\u00e9mom je v\u0161ak implement\u00e1cia Terra, nako\u013eko obsahuje bug, ktor\u00fd moment\u00e1lne neumo\u017e\u0148uje mo\u017enosti nadstavby Terra vyu\u017ei\u0165. Unity pri snahe o spustenie projektu aplik\u00e1cia vyp\u00ed\u0161e chybov\u00e9 hl\u00e1senie DllNotFoundException: luainterface , probl\u00e9m m\u00f4\u017ee sp\u00f4sobova\u0165 Terra, nako\u013eko ju vyu\u017e\u00edva layouter, \u010fal\u0161\u00edm probl\u00e9mom m\u00f4\u017ee by\u0165 nastavenie ciest Testy po zmen\u00e1ch CMakeLists.txt s\u00faborov a pou\u017eit\u00ed implement\u00e1cie Luapower s\u00fa uspe\u0161ne vykonan\u00e9 v\u0161etky testy zameran\u00e9 na modul LuaInterface pri testoch Lua.Common.Tests je \u00faspe\u0161ne vykonan\u00e1 v\u00e4\u010d\u0161ina testov, ne\u00faspe\u0161ne s\u00fa vykonan\u00e9 2 testy zameran\u00e9 na modul LuaGraph - GraphObjectRawDataAreLoadedCorrectly a LuaGraphLoadsMockedLuaGraphCorrectly, testy GraphCore.Tests s\u00fa ne\u00faspe\u0161n\u00e9 v\u0161etky, chyba vznik\u00e1 pri volan\u00ed kon\u0161truktora modulu LuaGraph.","title":"Probl\u00e9my"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/","text":"\ud83d\udda5\ufe0f Windows \u00b6 Prerekvizity \u00b6 Visual Studio 2019 s nasledovn\u00fdmi komponentmi .net framework v4.7.1 Desktop C++ development Visual Studio Tools for Unity Unity editor 2018.3.7f2 Cmake Doxygen Git for Windows vytvoren\u00fd nezaheslovan\u00fd SSH k\u013e\u00fa\u010d a nahran\u00fd na GitLabe aj GitHube Postup \u00b6 Stiahnutie zdroj\u00e1kov \u00b6 vo vhodnom prie\u010dinku vykon\u00e1me git clone git@gitlab.com:FIIT/3DSoftVis_Remake/3dsoftvis_remake.git prepneme na develop vetvu git checkout develop inicializujeme z\u00e1vislosti git submodule update --init Kofigur\u00e1cia build syst\u00e9mu \u00b6 otvor\u00edme CMake ako source code zvol\u00edme prie\u010dinok 3dsoftvis_remake ako build binaries vytvor\u00edme a zvol\u00edme 3dsoftvis_remake_build klik na configure v prvotnej konfiguracii vyberieme gener\u00e1tor Visual Studio 2019 architekt\u00faru x64 za\u0161krtneme build_unity a use_terra v niektor\u00fdch pr\u00edpadoch je potrebn\u00e9 nakonfigurova\u0165 unity_executable ako cestu k unity.exe klik na generate Vytvorenie premenej prostredia INCLUDE_PATH \u00b6 otvor\u00edme vlastnosti po\u010d\u00edta\u010da > roz\u0161\u00edren\u00e9 nastavenia > premenn\u00e9 prostredia > nov\u00e1 n\u00e1zov INCLUDE_PATH v hodnote skontrolujeme a prisp\u00f4sob\u00edme verzie v cest\u00e1ch pre prehladnos\u0165 uv\u00e1dzame hodnotu rozdelen\u00fa na riadky, ale pred pou\u017eit\u00edm ju je potrebn\u00e9 spoji\u0165 do jedn\u00e9ho riadka bez medzier C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.24.28314\\include; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\ucrt; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\um; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\shared; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\winrt; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\cppwinrt Build z\u00e1vislost\u00ed \u00b6 otvor\u00edme solution 3dsoftvis_remake_build\\3DSoftviz.sln vo Visual Studio klik prav\u00fdm na CopyExternalDataToUnity > build Spustenie Unity \u00b6 otvor\u00edme 3dsoftvis_remake\\Projects\\3DSoftviz\\UnityProject v Unity zmen\u00edme nasledovn\u00e9 a re\u0161tartujeme Unity Unity menu > edit > preferences > external tools > editor > VS2019 \u010cast\u00e9 probl\u00e9my \u00b6 error CS1704: An assembly with the same simple name 'SyntaxTree.VisualStudio.Unity.Bridge' has already been imported. t\u00e1to chyba by sa mala vyskytova\u0165 len pri pou\u017eit\u00ed VS2019 pre jej odstr\u00e1nenie vyma\u017ete cel\u00fd prie\u010dinok Projects\\3DSoftviz\\UnityProject\\Assets\\UnityVS pri pou\u017eit\u00ed VS2017 b\u00fdva opa\u010dn\u00fd probl\u00e9m, \"SyntaxTree\" asset je potrebn\u00e9 importova\u0165 v Unity importujeme Asset Visual Studio 2017 Tools.unitypackage z Program Files (x86)/Microsoft Visual Studio Tools for Unity cmake nevie vygenerova\u0165 projekt, ak je na po\u010d\u00edta\u010di viacero verzi\u00ed Visual Studia a zvol\u00ed sa tak\u00e1, ktor\u00e1 nem\u00e1 komponent Desktop C++ development ak pri kroku Build z\u00e1vislost\u00ed neprebehn\u00fa v\u0161etky buildy \u00faspe\u0161ne (28 suceeded) a buildy, ktor\u00e9 zlyhali hl\u00e1sia zablokovan\u00fd pr\u00edstup k repozit\u00e1ru, je pravdepodobn\u00e9 \u017ee m\u00e1te vytvoren\u00fd zaheslovan\u00fd SSH k\u013e\u00fa\u010d alebo ho m\u00e1te nespr\u00e1vne nahoden\u00fd na gitlabe/githube. Treba si vytvori\u0165 bu\u010f nov\u00fd nezaheslovan\u00fd SSH k\u013e\u00fa\u010d a spusti\u0165 pr\u00edkazy ssh git@gitlab.com a ssh git@github.com , ktor\u00e9 by V\u00e1m mali da\u0165 nasleduj\u00faci v\u00fdstup: Welcome to GitLab, @username! Hi username! You've successfully authenticated, but GitHub does not provide shell access. Probl\u00e9my \u010dastej\u0161ie evidujeme aj v skupinovom OneNote , pr\u00edstupn\u00fd po pridan\u00ed do MS Teams","title":"\ud83d\udda5\ufe0f Windows"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#-windows","text":"","title":"\ud83d\udda5\ufe0f Windows"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#prerekvizity","text":"Visual Studio 2019 s nasledovn\u00fdmi komponentmi .net framework v4.7.1 Desktop C++ development Visual Studio Tools for Unity Unity editor 2018.3.7f2 Cmake Doxygen Git for Windows vytvoren\u00fd nezaheslovan\u00fd SSH k\u013e\u00fa\u010d a nahran\u00fd na GitLabe aj GitHube","title":"Prerekvizity"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#postup","text":"","title":"Postup"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#stiahnutie-zdroj\u00e1kov","text":"vo vhodnom prie\u010dinku vykon\u00e1me git clone git@gitlab.com:FIIT/3DSoftVis_Remake/3dsoftvis_remake.git prepneme na develop vetvu git checkout develop inicializujeme z\u00e1vislosti git submodule update --init","title":"Stiahnutie zdroj\u00e1kov"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#kofigur\u00e1cia-build-syst\u00e9mu","text":"otvor\u00edme CMake ako source code zvol\u00edme prie\u010dinok 3dsoftvis_remake ako build binaries vytvor\u00edme a zvol\u00edme 3dsoftvis_remake_build klik na configure v prvotnej konfiguracii vyberieme gener\u00e1tor Visual Studio 2019 architekt\u00faru x64 za\u0161krtneme build_unity a use_terra v niektor\u00fdch pr\u00edpadoch je potrebn\u00e9 nakonfigurova\u0165 unity_executable ako cestu k unity.exe klik na generate","title":"Kofigur\u00e1cia build syst\u00e9mu"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#vytvorenie-premenej-prostredia-include_path","text":"otvor\u00edme vlastnosti po\u010d\u00edta\u010da > roz\u0161\u00edren\u00e9 nastavenia > premenn\u00e9 prostredia > nov\u00e1 n\u00e1zov INCLUDE_PATH v hodnote skontrolujeme a prisp\u00f4sob\u00edme verzie v cest\u00e1ch pre prehladnos\u0165 uv\u00e1dzame hodnotu rozdelen\u00fa na riadky, ale pred pou\u017eit\u00edm ju je potrebn\u00e9 spoji\u0165 do jedn\u00e9ho riadka bez medzier C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Tools\\MSVC\\14.24.28314\\include; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\ucrt; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\um; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\shared; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\winrt; C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.17763.0\\cppwinrt","title":"Vytvorenie premenej prostredia INCLUDE_PATH"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#build-z\u00e1vislost\u00ed","text":"otvor\u00edme solution 3dsoftvis_remake_build\\3DSoftviz.sln vo Visual Studio klik prav\u00fdm na CopyExternalDataToUnity > build","title":"Build z\u00e1vislost\u00ed"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#spustenie-unity","text":"otvor\u00edme 3dsoftvis_remake\\Projects\\3DSoftviz\\UnityProject v Unity zmen\u00edme nasledovn\u00e9 a re\u0161tartujeme Unity Unity menu > edit > preferences > external tools > editor > VS2019","title":"Spustenie Unity"},{"location":"dokumentacia_k_produktu/prirucky/instalacna_prirucka/windows/#\u010dast\u00e9-probl\u00e9my","text":"error CS1704: An assembly with the same simple name 'SyntaxTree.VisualStudio.Unity.Bridge' has already been imported. t\u00e1to chyba by sa mala vyskytova\u0165 len pri pou\u017eit\u00ed VS2019 pre jej odstr\u00e1nenie vyma\u017ete cel\u00fd prie\u010dinok Projects\\3DSoftviz\\UnityProject\\Assets\\UnityVS pri pou\u017eit\u00ed VS2017 b\u00fdva opa\u010dn\u00fd probl\u00e9m, \"SyntaxTree\" asset je potrebn\u00e9 importova\u0165 v Unity importujeme Asset Visual Studio 2017 Tools.unitypackage z Program Files (x86)/Microsoft Visual Studio Tools for Unity cmake nevie vygenerova\u0165 projekt, ak je na po\u010d\u00edta\u010di viacero verzi\u00ed Visual Studia a zvol\u00ed sa tak\u00e1, ktor\u00e1 nem\u00e1 komponent Desktop C++ development ak pri kroku Build z\u00e1vislost\u00ed neprebehn\u00fa v\u0161etky buildy \u00faspe\u0161ne (28 suceeded) a buildy, ktor\u00e9 zlyhali hl\u00e1sia zablokovan\u00fd pr\u00edstup k repozit\u00e1ru, je pravdepodobn\u00e9 \u017ee m\u00e1te vytvoren\u00fd zaheslovan\u00fd SSH k\u013e\u00fa\u010d alebo ho m\u00e1te nespr\u00e1vne nahoden\u00fd na gitlabe/githube. Treba si vytvori\u0165 bu\u010f nov\u00fd nezaheslovan\u00fd SSH k\u013e\u00fa\u010d a spusti\u0165 pr\u00edkazy ssh git@gitlab.com a ssh git@github.com , ktor\u00e9 by V\u00e1m mali da\u0165 nasleduj\u00faci v\u00fdstup: Welcome to GitLab, @username! Hi username! You've successfully authenticated, but GitHub does not provide shell access. Probl\u00e9my \u010dastej\u0161ie evidujeme aj v skupinovom OneNote , pr\u00edstupn\u00fd po pridan\u00ed do MS Teams","title":"\u010cast\u00e9 probl\u00e9my"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/","text":"\ud83e\udd7d AR + VR \u00b6 V AR a VR prostred\u00ed je mo\u017en\u00e9 sa pohybova\u0165 prirodzen\u00fdm sp\u00f4sobom, tak ako v re\u00e1lnom prostred\u00ed. Headset sa star\u00e1 o mapovanie poz\u00edcie v re\u00e1lnom prostred\u00ed do virtu\u00e1lneho prostredia. Interakcia s prostred\u00edm je rie\u0161en\u00e1 sledovan\u00edm r\u00fak pou\u017e\u00edvate\u013ea a ich mapovan\u00edm do virtu\u00e1lneho prostredia. Ovl\u00e1dacie menu je mo\u017en\u00e9 otvori\u0165 nato\u010den\u00edm \u013eavej dlane smerom k tv\u00e1ri. Interakcia \u00b6 V sc\u00e9ne je zapnut\u00e1 fyzick\u00e1 interakcia. To znamen\u00e1, \u017ee rukou m\u00f4\u017eeme udiera\u0165, uchopi\u0165 a h\u00e1dza\u0165 uzlami. Uchopenie je nutn\u00e9 vykon\u00e1va\u0165 troma prstami - palec, ukazov\u00e1k a prostredn\u00edk. HoverUI \u00b6 HoverUI menu sa zobraz\u00ed len pri nato\u010den\u00ed \u013eavej dlane smerom na kameru. Stla\u010denie jednotliv\u00fdch tla\u010didiel sa realizuje prostredn\u00edctvom pribl\u00ed\u017eenia prav\u00e9ho ukazov\u00e1ka na tla\u010didlo. Ak tla\u010didlo zasvieti na svetlo-modro, znamen\u00e1 to, \u017ee kurzor na pravom ukazov\u00e1ku sa dostal k jeho bl\u00edzkosti. Zelen\u00e1 farba znamen\u00e1, \u017ee sa spustila udalos\u0165 \u201ckliknutia\u201d. Pomocou tla\u010didiel je mo\u017en\u00e9 manipulova\u0165 s cel\u00fdm grafom, kontrolova\u0165 layoutovanie, zmeni\u0165 jednotliv\u00e9 faktory grafu alebo zmeni\u0165 vizu\u00e1lne mapovanie. Vysvetlenie legendy: Manipulation - obsahuje tla\u010didl\u00e1, ktor\u00e9 sa t\u00fdkaj\u00fa manipul\u00e1cie s grafom (napr. umiestnenie grafu na ur\u010dit\u00e9 miesto alebo \u0161k\u00e1lovanie grafu). Layout - obsahuje tla\u010didl\u00e1 t\u00fdkaj\u00face sa layoutovania grafu (napr. \u0161tart/stop layoutu, pauza layoutu, zmena layouterov, zmena builderov layoutu, zmena layout funkci\u00ed a zmena premenn\u00fdch a funkci\u00ed). Factors - nastavenie faktorov (attractive a repulsive faktory). Visual Mapping - zmena vizu\u00e1lneho mapovania pre jednotliv\u00e9 Lua objekty - funkcie, prie\u010dinky, rozhrania, glob\u00e1lne funkcie a moduly. Pre ka\u017ed\u00fd typ objektu je na v\u00fdber zo \u0161iestich tvarov. Minimum Node Distance - nastavenie minim\u00e1lnej vzdialenosti medzi uzlami. Back - tla\u010didlo pre n\u00e1vrat do rodi\u010dovsk\u00e9ho menu. \u25c4 - tla\u010didlo pre n\u00e1vrat do rodi\u010dovsk\u00e9ho menu. Toto tla\u010didlo sa taktie\u017e d\u00e1 stla\u010di\u0165 zovret\u00edm \u013eavej dlane do p\u00e4ste. \u00b7\ud83e\udc08) - tla\u010d\u00eddlo pre skrytie/zobrazenie menu. Selekcia \u00b6 Selekciu uzlov a hr\u00e1n je mo\u017en\u00e9 vykona\u0165 gestom pi\u0161tole. Teda natiahnut\u00edm ukazov\u00e1ku a prostredn\u00edku a stiahnut\u00edm prstenn\u00edka a mal\u00ed\u010dka. Palec pri tomto geste sl\u00fa\u017ei na selekciu a deselekciu objektu, na ktor\u00fd t\u00fdmto gestom ukazujeme. Zdvihnut\u00edm palca sa objekt ozna\u010d\u00ed, zlo\u017een\u00edm sa odzna\u010d\u00ed. Obmedzova\u010de \u00b6 Pre zlep\u0161enie \u010ditate\u013enosti je mo\u017en\u00e9 pou\u017ei\u0165 obmedzova\u010de, ktor\u00e9 vedia dr\u017ea\u0165 a h\u00fdba\u0165 uzly vo svojom priestore a na ktor\u00fdch povrch sa uzly via\u017eu. Je mo\u017en\u00e9 ich vytvori\u0165 pomocou polo\u017eky \u201cSpawn restriction\u201d v HoverUI menu. Je mo\u017en\u00e9 prida\u0165 gu\u013eu, kocku, alebo plochu, ktor\u00e1 sa pred nami vytvor\u00ed. Tento obmedzova\u010d je potom mo\u017en\u00e9 pres\u00fava\u0165 a meni\u0165 jeho ve\u013ekos\u0165. Pre pridanie uzlov do tohto objektu sta\u010d\u00ed jednoducho uzol chyti\u0165 a presun\u00fa\u0165 ho dovn\u00fatra. Pre pridanie viacer\u00fdch uzlov naraz je potrebn\u00e9 si ich ozna\u010di\u0165. Pre ozna\u010denie v\u0161etk\u00fdch uzlov je mo\u017en\u00e9 tie\u017e pou\u017ei\u0165 funkciu poskytnut\u00fa v HoverUI menu.","title":"\ud83e\udd7d AR + VR"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/#-ar--vr","text":"V AR a VR prostred\u00ed je mo\u017en\u00e9 sa pohybova\u0165 prirodzen\u00fdm sp\u00f4sobom, tak ako v re\u00e1lnom prostred\u00ed. Headset sa star\u00e1 o mapovanie poz\u00edcie v re\u00e1lnom prostred\u00ed do virtu\u00e1lneho prostredia. Interakcia s prostred\u00edm je rie\u0161en\u00e1 sledovan\u00edm r\u00fak pou\u017e\u00edvate\u013ea a ich mapovan\u00edm do virtu\u00e1lneho prostredia. Ovl\u00e1dacie menu je mo\u017en\u00e9 otvori\u0165 nato\u010den\u00edm \u013eavej dlane smerom k tv\u00e1ri.","title":"\ud83e\udd7d AR + VR"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/#interakcia","text":"V sc\u00e9ne je zapnut\u00e1 fyzick\u00e1 interakcia. To znamen\u00e1, \u017ee rukou m\u00f4\u017eeme udiera\u0165, uchopi\u0165 a h\u00e1dza\u0165 uzlami. Uchopenie je nutn\u00e9 vykon\u00e1va\u0165 troma prstami - palec, ukazov\u00e1k a prostredn\u00edk.","title":"Interakcia"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/#hoverui","text":"HoverUI menu sa zobraz\u00ed len pri nato\u010den\u00ed \u013eavej dlane smerom na kameru. Stla\u010denie jednotliv\u00fdch tla\u010didiel sa realizuje prostredn\u00edctvom pribl\u00ed\u017eenia prav\u00e9ho ukazov\u00e1ka na tla\u010didlo. Ak tla\u010didlo zasvieti na svetlo-modro, znamen\u00e1 to, \u017ee kurzor na pravom ukazov\u00e1ku sa dostal k jeho bl\u00edzkosti. Zelen\u00e1 farba znamen\u00e1, \u017ee sa spustila udalos\u0165 \u201ckliknutia\u201d. Pomocou tla\u010didiel je mo\u017en\u00e9 manipulova\u0165 s cel\u00fdm grafom, kontrolova\u0165 layoutovanie, zmeni\u0165 jednotliv\u00e9 faktory grafu alebo zmeni\u0165 vizu\u00e1lne mapovanie. Vysvetlenie legendy: Manipulation - obsahuje tla\u010didl\u00e1, ktor\u00e9 sa t\u00fdkaj\u00fa manipul\u00e1cie s grafom (napr. umiestnenie grafu na ur\u010dit\u00e9 miesto alebo \u0161k\u00e1lovanie grafu). Layout - obsahuje tla\u010didl\u00e1 t\u00fdkaj\u00face sa layoutovania grafu (napr. \u0161tart/stop layoutu, pauza layoutu, zmena layouterov, zmena builderov layoutu, zmena layout funkci\u00ed a zmena premenn\u00fdch a funkci\u00ed). Factors - nastavenie faktorov (attractive a repulsive faktory). Visual Mapping - zmena vizu\u00e1lneho mapovania pre jednotliv\u00e9 Lua objekty - funkcie, prie\u010dinky, rozhrania, glob\u00e1lne funkcie a moduly. Pre ka\u017ed\u00fd typ objektu je na v\u00fdber zo \u0161iestich tvarov. Minimum Node Distance - nastavenie minim\u00e1lnej vzdialenosti medzi uzlami. Back - tla\u010didlo pre n\u00e1vrat do rodi\u010dovsk\u00e9ho menu. \u25c4 - tla\u010didlo pre n\u00e1vrat do rodi\u010dovsk\u00e9ho menu. Toto tla\u010didlo sa taktie\u017e d\u00e1 stla\u010di\u0165 zovret\u00edm \u013eavej dlane do p\u00e4ste. \u00b7\ud83e\udc08) - tla\u010d\u00eddlo pre skrytie/zobrazenie menu.","title":"HoverUI"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/#selekcia","text":"Selekciu uzlov a hr\u00e1n je mo\u017en\u00e9 vykona\u0165 gestom pi\u0161tole. Teda natiahnut\u00edm ukazov\u00e1ku a prostredn\u00edku a stiahnut\u00edm prstenn\u00edka a mal\u00ed\u010dka. Palec pri tomto geste sl\u00fa\u017ei na selekciu a deselekciu objektu, na ktor\u00fd t\u00fdmto gestom ukazujeme. Zdvihnut\u00edm palca sa objekt ozna\u010d\u00ed, zlo\u017een\u00edm sa odzna\u010d\u00ed.","title":"Selekcia"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/ar_a_vr/#obmedzova\u010de","text":"Pre zlep\u0161enie \u010ditate\u013enosti je mo\u017en\u00e9 pou\u017ei\u0165 obmedzova\u010de, ktor\u00e9 vedia dr\u017ea\u0165 a h\u00fdba\u0165 uzly vo svojom priestore a na ktor\u00fdch povrch sa uzly via\u017eu. Je mo\u017en\u00e9 ich vytvori\u0165 pomocou polo\u017eky \u201cSpawn restriction\u201d v HoverUI menu. Je mo\u017en\u00e9 prida\u0165 gu\u013eu, kocku, alebo plochu, ktor\u00e1 sa pred nami vytvor\u00ed. Tento obmedzova\u010d je potom mo\u017en\u00e9 pres\u00fava\u0165 a meni\u0165 jeho ve\u013ekos\u0165. Pre pridanie uzlov do tohto objektu sta\u010d\u00ed jednoducho uzol chyti\u0165 a presun\u00fa\u0165 ho dovn\u00fatra. Pre pridanie viacer\u00fdch uzlov naraz je potrebn\u00e9 si ich ozna\u010di\u0165. Pre ozna\u010denie v\u0161etk\u00fdch uzlov je mo\u017en\u00e9 tie\u017e pou\u017ei\u0165 funkciu poskytnut\u00fa v HoverUI menu.","title":"Obmedzova\u010de"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/desktop/","text":"\ud83d\udda5\ufe0f Desktop \u00b6 Na interakciu so sc\u00e9nou je mo\u017en\u00e9 pou\u017ei\u0165 kl\u00e1vesnicu a my\u0161. Pohyb po sc\u00e9ne je rie\u0161en\u00fd kl\u00e1vesami W (dopredu), A (do\u013eava), S (dozadu) a D (doprava). Ot\u00e1\u010danie kamery je umo\u017enen\u00e9 pohybom my\u0161i v smere \u017eelan\u00e9ho oto\u010denia. T\u00e1to sc\u00e9na disponuje grafick\u00fdm pou\u017e\u00edvate\u013esk\u00fdm rozhran\u00edm. Jeho zobrazenie a skrytie sa vykon\u00e1va stla\u010den\u00edm kl\u00e1vesy M. Toto pou\u017e\u00edvate\u013esk\u00e9 rozhranie poskytuje viacero funkci\u00ed. Ovl\u00e1danie \u00b6 Layout control - tla\u010didl\u00e1 pre spustenie a zastavenie layoutovania grafu. Layout settings - posuvn\u00edky nastaven\u00ed pre Fruchterman-Reinfoldov\u00fd layoutovac\u00ed algoritmus (\u010derven\u00fd - nastavenie ve\u013ekosti pr\u00ed\u0165a\u017elivej sily, modr\u00fd - nastavenie odpudivej sily, oran\u017eov\u00fd - nastavenie minim\u00e1lnej d\u013a\u017eky hr\u00e1n grafu). Visual mapping - nastavenie vizu\u00e1lneho mapovania jednotliv\u00fdch typov uzlov. Pre ka\u017ed\u00fd je mo\u017en\u00e9 zvoli\u0165 r\u00f4zne geometrick\u00e9 \u00fatvary. Pri zobrazen\u00ed menu ot\u00e1\u010danie kamery zablokovan\u00e9 a my\u0161ou je mo\u017en\u00e9: LMB - ozna\u010dit objekt. CTRL + LMB - ozna\u010dit viacero objektov. SRCOLL - zoomova\u0165 k / od ona\u010den\u00e9ho(n\u00fdch) objekt(ov). MMB + pohyb my\u0161i - kr\u00fa\u017eenie okolo ozna\u010den\u00e9ho(n\u00fdch) objekt(ov). \u010eal\u0161ie kl\u00e1vesy akci\u00ed: P - zapnutie a vypnutie gravit\u00e1cie. G - zapnutie a vypnutie h\u00fdbania grafu za uzol. F - zapnutie a vypnutie fyziky. V - zmena layoutovania grafu. B - layoutovanie grafu na plochu. K - prep\u00ednanie medzi vizualizovanim uzlov kockou a gu\u013eou. J - prep\u00ednanie medzi vizualizovanim hr\u00e1n ku\u017ee\u013eom a hranolom. I - skrytie hr\u00e1n grafu. + - zv\u00e4\u010d\u0161enie grafu. - - zmen\u0161enie grafu. O - ozna\u010denie v\u0161ekt\u00fdch popiskov. PgUp - pribl\u00ed\u017eenie sa k zdrojov\u00e9mu uzlu. PgDn - pribl\u00ed\u017eenie sa k cie\u013eov\u00e9mu uzlu. Home - pribl\u00ed\u017eenie sa k ozna\u010den\u00e9mu uzlu. Z - zoom-to-fit (pribl\u00ed\u017eenie / oddialenie kamery tak, aby bol vidite\u013en\u00fd cel\u00fd graf).","title":"\ud83d\udda5\ufe0f Desktop"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/desktop/#-desktop","text":"Na interakciu so sc\u00e9nou je mo\u017en\u00e9 pou\u017ei\u0165 kl\u00e1vesnicu a my\u0161. Pohyb po sc\u00e9ne je rie\u0161en\u00fd kl\u00e1vesami W (dopredu), A (do\u013eava), S (dozadu) a D (doprava). Ot\u00e1\u010danie kamery je umo\u017enen\u00e9 pohybom my\u0161i v smere \u017eelan\u00e9ho oto\u010denia. T\u00e1to sc\u00e9na disponuje grafick\u00fdm pou\u017e\u00edvate\u013esk\u00fdm rozhran\u00edm. Jeho zobrazenie a skrytie sa vykon\u00e1va stla\u010den\u00edm kl\u00e1vesy M. Toto pou\u017e\u00edvate\u013esk\u00e9 rozhranie poskytuje viacero funkci\u00ed.","title":"\ud83d\udda5\ufe0f Desktop"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/desktop/#ovl\u00e1danie","text":"Layout control - tla\u010didl\u00e1 pre spustenie a zastavenie layoutovania grafu. Layout settings - posuvn\u00edky nastaven\u00ed pre Fruchterman-Reinfoldov\u00fd layoutovac\u00ed algoritmus (\u010derven\u00fd - nastavenie ve\u013ekosti pr\u00ed\u0165a\u017elivej sily, modr\u00fd - nastavenie odpudivej sily, oran\u017eov\u00fd - nastavenie minim\u00e1lnej d\u013a\u017eky hr\u00e1n grafu). Visual mapping - nastavenie vizu\u00e1lneho mapovania jednotliv\u00fdch typov uzlov. Pre ka\u017ed\u00fd je mo\u017en\u00e9 zvoli\u0165 r\u00f4zne geometrick\u00e9 \u00fatvary. Pri zobrazen\u00ed menu ot\u00e1\u010danie kamery zablokovan\u00e9 a my\u0161ou je mo\u017en\u00e9: LMB - ozna\u010dit objekt. CTRL + LMB - ozna\u010dit viacero objektov. SRCOLL - zoomova\u0165 k / od ona\u010den\u00e9ho(n\u00fdch) objekt(ov). MMB + pohyb my\u0161i - kr\u00fa\u017eenie okolo ozna\u010den\u00e9ho(n\u00fdch) objekt(ov). \u010eal\u0161ie kl\u00e1vesy akci\u00ed: P - zapnutie a vypnutie gravit\u00e1cie. G - zapnutie a vypnutie h\u00fdbania grafu za uzol. F - zapnutie a vypnutie fyziky. V - zmena layoutovania grafu. B - layoutovanie grafu na plochu. K - prep\u00ednanie medzi vizualizovanim uzlov kockou a gu\u013eou. J - prep\u00ednanie medzi vizualizovanim hr\u00e1n ku\u017ee\u013eom a hranolom. I - skrytie hr\u00e1n grafu. + - zv\u00e4\u010d\u0161enie grafu. - - zmen\u0161enie grafu. O - ozna\u010denie v\u0161ekt\u00fdch popiskov. PgUp - pribl\u00ed\u017eenie sa k zdrojov\u00e9mu uzlu. PgDn - pribl\u00ed\u017eenie sa k cie\u013eov\u00e9mu uzlu. Home - pribl\u00ed\u017eenie sa k ozna\u010den\u00e9mu uzlu. Z - zoom-to-fit (pribl\u00ed\u017eenie / oddialenie kamery tak, aby bol vidite\u013en\u00fd cel\u00fd graf).","title":"Ovl\u00e1danie"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/","text":"\ud83e\uddf2 Magnety \u00b6 Magnety sl\u00fa\u017eia na interakciu s grafom. Do sc\u00e9ny je po\u010das behu programu mo\u017en\u00e9 prid\u00e1va\u0165 r\u00f4zne typy magnetov, ktor\u00e9 k sebe pri\u0165ahuj\u00fa alebo odpudzuj\u00fa uzly grafu, ka\u017ed\u00fd v\u0161ak in\u00fdm sp\u00f4sobom. V tejto pr\u00edru\u010dke je op\u00edsan\u00e9, ako pracova\u0165 s magnetmi celkovo a z\u00e1rove\u0148 ako pracova\u0165 s jednotliv\u00fdmi druhmi magnetov samostatne. Ovl\u00e1danie magnetov v\u0161eobecne \u00b6 Do magnetov\u00e9ho menu je mo\u017en\u00e9 dosa\u0165 sa z hlavn\u00e9ho menu pomocou stla\u010denia kl\u00e1vesy \"M\". To znamen\u00e1, \u017ee ke\u010f po\u010das behu programu stla\u010d\u00edme kl\u00e1vesu \"M\", dostaneme sa do hlavn\u00e9ho menu. Ak n\u00e1sledne op\u00e4tovne stla\u010d\u00edme kl\u00e1vesu \"M\", dostaneme sa do magnetov\u00e9ho menu. Tretie stla\u010denie kl\u00e1vesy sp\u00f4sob\u00ed \u00fapln\u00e9 zavretie v\u0161etk\u00fdch menu a n\u00e1vrat do sc\u00e9ny. Pridanie magnetu \u00b6 Na pridanie magnetu do sc\u00e9ny sl\u00fa\u017ei v magnetovom menu horn\u00e1 rada tla\u010didiel, kde je mo\u017en\u00e9 zvoli\u0165 si pr\u00edslu\u0161n\u00fd typ magnetu. Po stla\u010den\u00ed tla\u010didla s n\u00e1zvom pr\u00edslu\u0161n\u00e9ho magnetu, ktor\u00fd chceme prida\u0165 do sc\u00e9ny sa magnet zobraz\u00ed v sc\u00e9ne v takzvanom \"prid\u00e1vacom m\u00f3de\". Magnet je vtedy prieh\u013eadn\u00fd a vieme s n\u00edm h\u00fdba\u0165 (rovnako, ako sa pohybujeme v sc\u00e9ne - pomocou tla\u010didiel a my\u0161i). Ke\u010f magnet dostaneme do poz\u00edcie, kde ho chceme umiestni\u0165, pre potvrdenie poz\u00edcie stla\u010d\u00edme Enter. V pr\u00edpade, \u017ee prid\u00e1vanie magnetu chceme ukon\u010di\u0165, je mo\u017en\u00e9 pou\u017ei\u0165 bu\u010f tla\u010didlo Esc alebo tla\u010didlo \"M\". Zmena poz\u00edcie magnetu \u00b6 Magnet, ktor\u00fd je pridan\u00fd v sc\u00e9ne je nehybn\u00fd. Zmenu jeho poz\u00edcie v\u0161ak vieme vyn\u00fati\u0165 tla\u010didlom v menu \"Change position\". Po ozna\u010den\u00ed magnetu (klik my\u0161ou), ktor\u00fd chceme presun\u00fa\u0165 a stla\u010den\u00ed tla\u010didla \"Change position\" (toto tla\u010didlo je mo\u017en\u00e9 stla\u010di\u0165 len v pr\u00edpade, \u017ee je ozna\u010den\u00fd pr\u00e1ve jeden magnet) sa dostane magnet do podobn\u00e9ho m\u00f3du ako v pr\u00edpade prid\u00e1vania magnetu. S magnetom je vtedy mo\u017en\u00e9 h\u00fdba\u0165 rovnako ako pri prid\u00e1van\u00ed a taktie\u017e nov\u00fa poz\u00edciu magnetu potvrd\u00edme kl\u00e1vesou Enter. Vymazanie magnetu \u00b6 Magnet (alebo viacer\u00e9 magnety) je mo\u017en\u00e9 vymaza\u0165 tla\u010didlom \"Delete magnet\". Najprv treba ozna\u010di\u0165 magnet/magnety, ktor\u00e9 chceme vymaza\u0165 a n\u00e1sledne stla\u010di\u0165 tla\u010didlo \"Delete magnet\". Ozna\u010denie magnetov \u00b6 Ozna\u010dovanie magnetov funguje rovnako ako ozna\u010dovanie in\u00fdch objektov v sc\u00e9ne. Po kliknut\u00ed na objekt (magnet) sa tento ozna\u010d\u00ed. V pr\u00edpade, \u017ee ich chceme ozna\u010di\u0165 viac, je mo\u017en\u00e9 ich ozna\u010dova\u0165 so stla\u010denou kl\u00e1vesou Ctrl. V pr\u00edpade, \u017ee m\u00e1me v sc\u00e9ne vlo\u017een\u00fdch ve\u013ea magnetov a chceme nad v\u0161etk\u00fdmi naraz vykona\u0165 nejak\u00fa oper\u00e1ciu (napr\u00edklad ich v\u0161etky vymaza\u0165, alebo schova\u0165), m\u00f4\u017eeme pou\u017ei\u0165 tla\u010didlo \"Select all magnets\", ktor\u00fdm ozna\u010d\u00edme v\u0161etky magnety, ktor\u00e9 s\u00fa aktu\u00e1lne vlo\u017een\u00e9 v sc\u00e9ne. Skrytie a zobrazenie magnetov \u00b6 Nie v\u017edy chceme, aby sme mali magnety vidite\u013en\u00e9 v sc\u00e9ne. Niekedy potrebujeme, aby plnili svoju funkcionalitu, ale nechceme, aby boli vidite\u013en\u00e9, aby sme mali graf preh\u013eadnej\u0161\u00ed. Na ovl\u00e1danie tejto funkcionality n\u00e1m sl\u00fa\u017eia dve tla\u010didl\u00e1 - \"Hide selected magnets\" a \"Show hidden magnets\". Tla\u010didlo \"Hide selected magnets\" funguje podobne ako pri vymazan\u00ed magnetov, najprv musia by\u0165 ozna\u010den\u00e9 magnety, ktor\u00e9 chceme skry\u0165 a po stla\u010den\u00ed tla\u010didla sa funkcionalita schovania na tieto ozna\u010den\u00e9 magnety aplikuje. Tla\u010didlo \"Show hidden magnets\" len zobraz\u00ed v\u0161etky skryt\u00e9 magnety (v pr\u00edpade, \u017ee nejak\u00e9 tak\u00e9 s\u00fa). To znamen\u00e1, \u017ee po stla\u010den\u00ed tohto tla\u010didla s\u00fa v\u0161etky magnety, ktor\u00e9 s\u00fa v sc\u00e9ne, vidite\u013en\u00e9. Zmena typu magnetu \u00b6 Ako bolo spomenut\u00e9, magnet m\u00f4\u017ee by\u0165 r\u00f4zneho druhu. Existuj\u00fa dokopy 3 druhy magnetov: tak\u00e9, ktor\u00e9 interaguj\u00fa s uzlami grafu na z\u00e1klade spojenia pomocou meta-hrany, tak\u00e9, ktor\u00e9 interaguj\u00fa s uzlami na z\u00e1klade definovanej vzdialenosti od magnetu a tak\u00e9, ktor\u00e9 interaguj\u00fa na z\u00e1klade nejakej definovanej funkcie (podmienky). V magnetovom menu je predpripraven\u00fd ovl\u00e1dac\u00ed prvok na zmenu typu magnetu, av\u0161ak t\u00e1to funkcionalita zatia\u013e nie je implementovan\u00e1, tak\u017ee s t\u00fdmto ovl\u00e1dac\u00edm prvkom nie je mo\u017en\u00e9 interagova\u0165. Magnet interaguj\u00faci na z\u00e1klade spojenia s uzlami \u00b6 Tento typ magnetu pri\u0165ahuje uzly, s ktor\u00fdmi je spojen\u00fd meta-hranou. Na pridanie tohto magnetu do sc\u00e9ny pou\u017eijeme tla\u010didlo \"Edge magnet\". Samotn\u00e9 prid\u00e1vanie je op\u00edsan\u00e9 vy\u0161\u0161ie vo v\u0161eobecnej \u010dasti \"Pridanie magnetu\". Spojenie magnetov s uzlami \u00b6 Na to, aby tento typ magnetu pri\u0165ahoval uzly, ho po pridan\u00ed do sc\u00e9ny mus\u00edme spoji\u0165 s uzlami, ktor\u00e9 chceme, aby pri\u0165ahoval. Na to sl\u00fa\u017ei tla\u010didlo \"Connect magnet\", ktor\u00e9 m\u00f4\u017eme n\u00e1js\u0165 v magnetovom menu. Toto tla\u010didlo je mo\u017en\u00e9 pou\u017ei\u0165 len vtedy, ke\u010f je ozna\u010den\u00fd pr\u00e1ve jeden magnet a z\u00e1rove\u0148 je to magnettypu \"Edge magnet\". Po stla\u010den\u00ed tla\u010didla sa dostaneme do \"sp\u00e1jacieho m\u00f3du\", kedy si pomocou my\u0161i m\u00f4\u017eme vybra\u0165 jeden alebo viacero uzlov grafu, s ktor\u00fdmi chceme magnet spoji\u0165. Po ozna\u010den\u00ed uzlov tla\u010didlom Enter potvrd\u00edme vo\u013ebu a magnet sa s uzlami spoj\u00ed hranami. Z\u00e1rove\u0148 magnet hne\u010f za\u010dne uzly pri\u0165ahova\u0165. Sp\u00e1jac\u00ed m\u00f3d m\u00f4\u017eme kedyko\u013evek ukon\u010di\u0165 pomocou kl\u00e1vesy Esc alebo \"M\". Magnet je mo\u017en\u00e9 spoji\u0165 s \u013eubovoln\u00fdm po\u010dtom uzlov. Takisto je mo\u017en\u00e9 k magnetu, ktor\u00fd u\u017e je spojen\u00fd s nejak\u00fdmi uzlami kedyko\u013evek prida\u0165 nov\u00e9 spojenia. Zmazanie existuj\u00facich spojen\u00ed \u00b6 Nepotrebn\u00e9 alebo nevyhovuj\u00face spojenia je mo\u017en\u00e9 kedyko\u013evek odstr\u00e1ni\u0165. Jednak sa v\u0161etky spojenia magnetu odstr\u00e1nia, pokia\u013e odstr\u00e1nime samotn\u00fd magnet. Taktie\u017e je mo\u017en\u00e9 spojenia odstra\u0148ova\u0165 aj jednotlivo, bez toho, \u017ee by sme museli odstr\u00e1ni\u0165 cel\u00fd magnet. Na toto n\u00e1m sl\u00fa\u017ei tla\u010didlo \"Delete connection\". Tla\u010didlo je mo\u017en\u00e9 pou\u017ei\u0165, ke\u010f je ozna\u010den\u00e1 jedna alebo viac meta-hr\u00e1n. Meta hrany ozna\u010dujeme rovnako ako ostatn\u00e9 objekty v sc\u00e9ne kliknut\u00edm my\u0161ou (pr\u00edpadne klikan\u00edm my\u0161ou so stla\u010denou kl\u00e1vesou Ctrl, ak chceme ozna\u010di\u0165 viacero hr\u00e1n). Naraz m\u00f4\u017eme odstr\u00e1ni\u0165 meta-hrany patriace aj viacer\u00fdm magnetom. Po ozna\u010den\u00ed v\u0161etk\u00fdch meta-hr\u00e1n, ktor\u00e9 chceme vymaza\u0165 sta\u010d\u00ed stla\u010di\u0165 tla\u010didlo \"Delete connection\" a t\u00fdmto sa spojenia odstr\u00e1nia. Magnet interaguj\u00faci na z\u00e1klade vzdialenosti \u00b6 \u010eal\u0161\u00edm typom magnetu je magnet, ktor\u00fd pri\u0165ahuje alebo odpudzuje uzly na z\u00e1klade vzdialenosti od magnetu. Na pridanie tohto typu magnetu do sc\u00e9ny pou\u017eijeme tla\u010didlo \"Distance magnet\". Samotn\u00e9 prid\u00e1vanie je op\u00edsan\u00e9 vy\u0161\u0161ie vo v\u0161eobecnej \u010dasti \"Pridanie magnetu\". Nastavenie vzdialenosti \u00b6 Na to, aby tento magnet fungoval mu mus\u00edme nastavi\u0165 vzdialenos\u0165, v akej m\u00e1 okolit\u00e9 uzly pri\u0165ahova\u0165. Po pridan\u00ed tohto magnetu do sc\u00e9ny m\u00f4\u017eme vidie\u0165, \u017ee je okolo magnetu zobrazen\u00e9 modr\u00e9 (maxim\u00e1lna vzdialenos\u0165) a \u010derven\u00e9 (minim\u00e1lna vzdialenos\u0165) magnetick\u00e9 pole. Tieto vzdialenosti s\u00fa na za\u010diatku nastaven\u00e9 na preddefinovan\u00e9 mal\u00e9 hodnoty. Tieto hodnoty je mo\u017en\u00e9 zmeni\u0165 pomocou sliderov, ktor\u00e9 n\u00e1jdeme v \u013eavom hornom rohu obrazovky ved\u013ea magnetov\u00e9ho menu. Slidery je mo\u017en\u00e9 pou\u017ei\u0165 po ozna\u010den\u00ed magnetu, ktor\u00e9mu chceme meni\u0165 vzdialenosti. Rovnako, ako pri vy\u0161\u0161ie spom\u00ednanom type magnetu, op\u00e4\u0165 mus\u00ed by\u0165 ozna\u010dn\u00fd pr\u00e1ve jeden magnet, na to aby sme mu mohli meni\u0165 vzdialenos\u0165 a z\u00e1rove\u0148 tento magnet mus\u00ed by\u0165 typu \"Distance magnet\". Pomocou sliderov vieme magnetu nastavi\u0165 dve vzdialenosti: modr\u00e9 pole p\u00f4sobnosti (maximum radius) - to je tak\u00e9, v ktorom ke\u010f sa ocitn\u00fa uzly grafu, magnet ich za\u010dne k sebe pri\u0165ahova\u0165, a \u010derven\u00e9 pole p\u00f4sobnosti (minimum radius) - to je tak\u00e9, za ktor\u00e9 sa pri\u0165ahovan\u00e9 uzly grafu nikdy nedostan\u00fa, aby sa nepritiahli \u00faplne k magnetu. V kone\u010dnom d\u00f4sledku to vyzer\u00e1 tak, \u017ee pri\u0165ahovan\u00e9 uzly grafu sa zastavia na povrchu \u010derven\u00e9ho pola p\u00f4sobnosti, na ktorom ostan\u00fa \"nalepen\u00e9\". Z tohto vypl\u00fdva, \u017ee minim\u00e1lna vzdialenos\u0165 a teda \u010derven\u00e9 pole p\u00f4sobnosti nikdy nem\u00f4\u017ee by\u0165 v\u00e4\u010d\u0161ie, ako maxim\u00e1lna vzdialenos\u0165 a teda modr\u00e9 pole p\u00f4sobnosti. Sliderom \"Maximum radius\" sa nastavuje ve\u013ekos\u0165 pol\u00ed celkovo, t.j. h\u00fdbu sa obe polia p\u00f4sobnosti, pri\u010dom je zachovan\u00fd pomer ich ve\u013ekost\u00ed, a sliderom \"Minimum radius\" sa nastavuje ve\u013ekos\u0165 men\u0161ieho po\u013ea vo\u010di tomu v\u00e4\u010d\u0161iemu. Po nastaven\u00ed ve\u013ekost\u00ed nie je toto nastavenie nijako potrebn\u00e9 potvrdi\u0165, nastavenie m\u00e1 \u00fa\u010dinnos\u0165 hne\u010f ako je h\u00fdban\u00e9 so slidermi. Magnet interaguj\u00faci na z\u00e1klade funkcie \u00b6 Tento typ magnetu zatia\u013e nie je implementovan\u00fd.","title":"\ud83e\uddf2 Magnety"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#-magnety","text":"Magnety sl\u00fa\u017eia na interakciu s grafom. Do sc\u00e9ny je po\u010das behu programu mo\u017en\u00e9 prid\u00e1va\u0165 r\u00f4zne typy magnetov, ktor\u00e9 k sebe pri\u0165ahuj\u00fa alebo odpudzuj\u00fa uzly grafu, ka\u017ed\u00fd v\u0161ak in\u00fdm sp\u00f4sobom. V tejto pr\u00edru\u010dke je op\u00edsan\u00e9, ako pracova\u0165 s magnetmi celkovo a z\u00e1rove\u0148 ako pracova\u0165 s jednotliv\u00fdmi druhmi magnetov samostatne.","title":"\ud83e\uddf2 Magnety"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#ovl\u00e1danie-magnetov-v\u0161eobecne","text":"Do magnetov\u00e9ho menu je mo\u017en\u00e9 dosa\u0165 sa z hlavn\u00e9ho menu pomocou stla\u010denia kl\u00e1vesy \"M\". To znamen\u00e1, \u017ee ke\u010f po\u010das behu programu stla\u010d\u00edme kl\u00e1vesu \"M\", dostaneme sa do hlavn\u00e9ho menu. Ak n\u00e1sledne op\u00e4tovne stla\u010d\u00edme kl\u00e1vesu \"M\", dostaneme sa do magnetov\u00e9ho menu. Tretie stla\u010denie kl\u00e1vesy sp\u00f4sob\u00ed \u00fapln\u00e9 zavretie v\u0161etk\u00fdch menu a n\u00e1vrat do sc\u00e9ny.","title":"Ovl\u00e1danie magnetov v\u0161eobecne"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#pridanie-magnetu","text":"Na pridanie magnetu do sc\u00e9ny sl\u00fa\u017ei v magnetovom menu horn\u00e1 rada tla\u010didiel, kde je mo\u017en\u00e9 zvoli\u0165 si pr\u00edslu\u0161n\u00fd typ magnetu. Po stla\u010den\u00ed tla\u010didla s n\u00e1zvom pr\u00edslu\u0161n\u00e9ho magnetu, ktor\u00fd chceme prida\u0165 do sc\u00e9ny sa magnet zobraz\u00ed v sc\u00e9ne v takzvanom \"prid\u00e1vacom m\u00f3de\". Magnet je vtedy prieh\u013eadn\u00fd a vieme s n\u00edm h\u00fdba\u0165 (rovnako, ako sa pohybujeme v sc\u00e9ne - pomocou tla\u010didiel a my\u0161i). Ke\u010f magnet dostaneme do poz\u00edcie, kde ho chceme umiestni\u0165, pre potvrdenie poz\u00edcie stla\u010d\u00edme Enter. V pr\u00edpade, \u017ee prid\u00e1vanie magnetu chceme ukon\u010di\u0165, je mo\u017en\u00e9 pou\u017ei\u0165 bu\u010f tla\u010didlo Esc alebo tla\u010didlo \"M\".","title":"Pridanie magnetu"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#zmena-poz\u00edcie-magnetu","text":"Magnet, ktor\u00fd je pridan\u00fd v sc\u00e9ne je nehybn\u00fd. Zmenu jeho poz\u00edcie v\u0161ak vieme vyn\u00fati\u0165 tla\u010didlom v menu \"Change position\". Po ozna\u010den\u00ed magnetu (klik my\u0161ou), ktor\u00fd chceme presun\u00fa\u0165 a stla\u010den\u00ed tla\u010didla \"Change position\" (toto tla\u010didlo je mo\u017en\u00e9 stla\u010di\u0165 len v pr\u00edpade, \u017ee je ozna\u010den\u00fd pr\u00e1ve jeden magnet) sa dostane magnet do podobn\u00e9ho m\u00f3du ako v pr\u00edpade prid\u00e1vania magnetu. S magnetom je vtedy mo\u017en\u00e9 h\u00fdba\u0165 rovnako ako pri prid\u00e1van\u00ed a taktie\u017e nov\u00fa poz\u00edciu magnetu potvrd\u00edme kl\u00e1vesou Enter.","title":"Zmena poz\u00edcie magnetu"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#vymazanie-magnetu","text":"Magnet (alebo viacer\u00e9 magnety) je mo\u017en\u00e9 vymaza\u0165 tla\u010didlom \"Delete magnet\". Najprv treba ozna\u010di\u0165 magnet/magnety, ktor\u00e9 chceme vymaza\u0165 a n\u00e1sledne stla\u010di\u0165 tla\u010didlo \"Delete magnet\".","title":"Vymazanie magnetu"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#ozna\u010denie-magnetov","text":"Ozna\u010dovanie magnetov funguje rovnako ako ozna\u010dovanie in\u00fdch objektov v sc\u00e9ne. Po kliknut\u00ed na objekt (magnet) sa tento ozna\u010d\u00ed. V pr\u00edpade, \u017ee ich chceme ozna\u010di\u0165 viac, je mo\u017en\u00e9 ich ozna\u010dova\u0165 so stla\u010denou kl\u00e1vesou Ctrl. V pr\u00edpade, \u017ee m\u00e1me v sc\u00e9ne vlo\u017een\u00fdch ve\u013ea magnetov a chceme nad v\u0161etk\u00fdmi naraz vykona\u0165 nejak\u00fa oper\u00e1ciu (napr\u00edklad ich v\u0161etky vymaza\u0165, alebo schova\u0165), m\u00f4\u017eeme pou\u017ei\u0165 tla\u010didlo \"Select all magnets\", ktor\u00fdm ozna\u010d\u00edme v\u0161etky magnety, ktor\u00e9 s\u00fa aktu\u00e1lne vlo\u017een\u00e9 v sc\u00e9ne.","title":"Ozna\u010denie magnetov"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#skrytie-a-zobrazenie-magnetov","text":"Nie v\u017edy chceme, aby sme mali magnety vidite\u013en\u00e9 v sc\u00e9ne. Niekedy potrebujeme, aby plnili svoju funkcionalitu, ale nechceme, aby boli vidite\u013en\u00e9, aby sme mali graf preh\u013eadnej\u0161\u00ed. Na ovl\u00e1danie tejto funkcionality n\u00e1m sl\u00fa\u017eia dve tla\u010didl\u00e1 - \"Hide selected magnets\" a \"Show hidden magnets\". Tla\u010didlo \"Hide selected magnets\" funguje podobne ako pri vymazan\u00ed magnetov, najprv musia by\u0165 ozna\u010den\u00e9 magnety, ktor\u00e9 chceme skry\u0165 a po stla\u010den\u00ed tla\u010didla sa funkcionalita schovania na tieto ozna\u010den\u00e9 magnety aplikuje. Tla\u010didlo \"Show hidden magnets\" len zobraz\u00ed v\u0161etky skryt\u00e9 magnety (v pr\u00edpade, \u017ee nejak\u00e9 tak\u00e9 s\u00fa). To znamen\u00e1, \u017ee po stla\u010den\u00ed tohto tla\u010didla s\u00fa v\u0161etky magnety, ktor\u00e9 s\u00fa v sc\u00e9ne, vidite\u013en\u00e9.","title":"Skrytie a zobrazenie magnetov"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#zmena-typu-magnetu","text":"Ako bolo spomenut\u00e9, magnet m\u00f4\u017ee by\u0165 r\u00f4zneho druhu. Existuj\u00fa dokopy 3 druhy magnetov: tak\u00e9, ktor\u00e9 interaguj\u00fa s uzlami grafu na z\u00e1klade spojenia pomocou meta-hrany, tak\u00e9, ktor\u00e9 interaguj\u00fa s uzlami na z\u00e1klade definovanej vzdialenosti od magnetu a tak\u00e9, ktor\u00e9 interaguj\u00fa na z\u00e1klade nejakej definovanej funkcie (podmienky). V magnetovom menu je predpripraven\u00fd ovl\u00e1dac\u00ed prvok na zmenu typu magnetu, av\u0161ak t\u00e1to funkcionalita zatia\u013e nie je implementovan\u00e1, tak\u017ee s t\u00fdmto ovl\u00e1dac\u00edm prvkom nie je mo\u017en\u00e9 interagova\u0165.","title":"Zmena typu magnetu"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#magnet-interaguj\u00faci-na-z\u00e1klade-spojenia-s-uzlami","text":"Tento typ magnetu pri\u0165ahuje uzly, s ktor\u00fdmi je spojen\u00fd meta-hranou. Na pridanie tohto magnetu do sc\u00e9ny pou\u017eijeme tla\u010didlo \"Edge magnet\". Samotn\u00e9 prid\u00e1vanie je op\u00edsan\u00e9 vy\u0161\u0161ie vo v\u0161eobecnej \u010dasti \"Pridanie magnetu\".","title":"Magnet interaguj\u00faci na z\u00e1klade spojenia s uzlami"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#spojenie-magnetov-s-uzlami","text":"Na to, aby tento typ magnetu pri\u0165ahoval uzly, ho po pridan\u00ed do sc\u00e9ny mus\u00edme spoji\u0165 s uzlami, ktor\u00e9 chceme, aby pri\u0165ahoval. Na to sl\u00fa\u017ei tla\u010didlo \"Connect magnet\", ktor\u00e9 m\u00f4\u017eme n\u00e1js\u0165 v magnetovom menu. Toto tla\u010didlo je mo\u017en\u00e9 pou\u017ei\u0165 len vtedy, ke\u010f je ozna\u010den\u00fd pr\u00e1ve jeden magnet a z\u00e1rove\u0148 je to magnettypu \"Edge magnet\". Po stla\u010den\u00ed tla\u010didla sa dostaneme do \"sp\u00e1jacieho m\u00f3du\", kedy si pomocou my\u0161i m\u00f4\u017eme vybra\u0165 jeden alebo viacero uzlov grafu, s ktor\u00fdmi chceme magnet spoji\u0165. Po ozna\u010den\u00ed uzlov tla\u010didlom Enter potvrd\u00edme vo\u013ebu a magnet sa s uzlami spoj\u00ed hranami. Z\u00e1rove\u0148 magnet hne\u010f za\u010dne uzly pri\u0165ahova\u0165. Sp\u00e1jac\u00ed m\u00f3d m\u00f4\u017eme kedyko\u013evek ukon\u010di\u0165 pomocou kl\u00e1vesy Esc alebo \"M\". Magnet je mo\u017en\u00e9 spoji\u0165 s \u013eubovoln\u00fdm po\u010dtom uzlov. Takisto je mo\u017en\u00e9 k magnetu, ktor\u00fd u\u017e je spojen\u00fd s nejak\u00fdmi uzlami kedyko\u013evek prida\u0165 nov\u00e9 spojenia.","title":"Spojenie magnetov s uzlami"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#zmazanie-existuj\u00facich-spojen\u00ed","text":"Nepotrebn\u00e9 alebo nevyhovuj\u00face spojenia je mo\u017en\u00e9 kedyko\u013evek odstr\u00e1ni\u0165. Jednak sa v\u0161etky spojenia magnetu odstr\u00e1nia, pokia\u013e odstr\u00e1nime samotn\u00fd magnet. Taktie\u017e je mo\u017en\u00e9 spojenia odstra\u0148ova\u0165 aj jednotlivo, bez toho, \u017ee by sme museli odstr\u00e1ni\u0165 cel\u00fd magnet. Na toto n\u00e1m sl\u00fa\u017ei tla\u010didlo \"Delete connection\". Tla\u010didlo je mo\u017en\u00e9 pou\u017ei\u0165, ke\u010f je ozna\u010den\u00e1 jedna alebo viac meta-hr\u00e1n. Meta hrany ozna\u010dujeme rovnako ako ostatn\u00e9 objekty v sc\u00e9ne kliknut\u00edm my\u0161ou (pr\u00edpadne klikan\u00edm my\u0161ou so stla\u010denou kl\u00e1vesou Ctrl, ak chceme ozna\u010di\u0165 viacero hr\u00e1n). Naraz m\u00f4\u017eme odstr\u00e1ni\u0165 meta-hrany patriace aj viacer\u00fdm magnetom. Po ozna\u010den\u00ed v\u0161etk\u00fdch meta-hr\u00e1n, ktor\u00e9 chceme vymaza\u0165 sta\u010d\u00ed stla\u010di\u0165 tla\u010didlo \"Delete connection\" a t\u00fdmto sa spojenia odstr\u00e1nia.","title":"Zmazanie existuj\u00facich spojen\u00ed"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#magnet-interaguj\u00faci-na-z\u00e1klade-vzdialenosti","text":"\u010eal\u0161\u00edm typom magnetu je magnet, ktor\u00fd pri\u0165ahuje alebo odpudzuje uzly na z\u00e1klade vzdialenosti od magnetu. Na pridanie tohto typu magnetu do sc\u00e9ny pou\u017eijeme tla\u010didlo \"Distance magnet\". Samotn\u00e9 prid\u00e1vanie je op\u00edsan\u00e9 vy\u0161\u0161ie vo v\u0161eobecnej \u010dasti \"Pridanie magnetu\".","title":"Magnet interaguj\u00faci na z\u00e1klade vzdialenosti"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#nastavenie-vzdialenosti","text":"Na to, aby tento magnet fungoval mu mus\u00edme nastavi\u0165 vzdialenos\u0165, v akej m\u00e1 okolit\u00e9 uzly pri\u0165ahova\u0165. Po pridan\u00ed tohto magnetu do sc\u00e9ny m\u00f4\u017eme vidie\u0165, \u017ee je okolo magnetu zobrazen\u00e9 modr\u00e9 (maxim\u00e1lna vzdialenos\u0165) a \u010derven\u00e9 (minim\u00e1lna vzdialenos\u0165) magnetick\u00e9 pole. Tieto vzdialenosti s\u00fa na za\u010diatku nastaven\u00e9 na preddefinovan\u00e9 mal\u00e9 hodnoty. Tieto hodnoty je mo\u017en\u00e9 zmeni\u0165 pomocou sliderov, ktor\u00e9 n\u00e1jdeme v \u013eavom hornom rohu obrazovky ved\u013ea magnetov\u00e9ho menu. Slidery je mo\u017en\u00e9 pou\u017ei\u0165 po ozna\u010den\u00ed magnetu, ktor\u00e9mu chceme meni\u0165 vzdialenosti. Rovnako, ako pri vy\u0161\u0161ie spom\u00ednanom type magnetu, op\u00e4\u0165 mus\u00ed by\u0165 ozna\u010dn\u00fd pr\u00e1ve jeden magnet, na to aby sme mu mohli meni\u0165 vzdialenos\u0165 a z\u00e1rove\u0148 tento magnet mus\u00ed by\u0165 typu \"Distance magnet\". Pomocou sliderov vieme magnetu nastavi\u0165 dve vzdialenosti: modr\u00e9 pole p\u00f4sobnosti (maximum radius) - to je tak\u00e9, v ktorom ke\u010f sa ocitn\u00fa uzly grafu, magnet ich za\u010dne k sebe pri\u0165ahova\u0165, a \u010derven\u00e9 pole p\u00f4sobnosti (minimum radius) - to je tak\u00e9, za ktor\u00e9 sa pri\u0165ahovan\u00e9 uzly grafu nikdy nedostan\u00fa, aby sa nepritiahli \u00faplne k magnetu. V kone\u010dnom d\u00f4sledku to vyzer\u00e1 tak, \u017ee pri\u0165ahovan\u00e9 uzly grafu sa zastavia na povrchu \u010derven\u00e9ho pola p\u00f4sobnosti, na ktorom ostan\u00fa \"nalepen\u00e9\". Z tohto vypl\u00fdva, \u017ee minim\u00e1lna vzdialenos\u0165 a teda \u010derven\u00e9 pole p\u00f4sobnosti nikdy nem\u00f4\u017ee by\u0165 v\u00e4\u010d\u0161ie, ako maxim\u00e1lna vzdialenos\u0165 a teda modr\u00e9 pole p\u00f4sobnosti. Sliderom \"Maximum radius\" sa nastavuje ve\u013ekos\u0165 pol\u00ed celkovo, t.j. h\u00fdbu sa obe polia p\u00f4sobnosti, pri\u010dom je zachovan\u00fd pomer ich ve\u013ekost\u00ed, a sliderom \"Minimum radius\" sa nastavuje ve\u013ekos\u0165 men\u0161ieho po\u013ea vo\u010di tomu v\u00e4\u010d\u0161iemu. Po nastaven\u00ed ve\u013ekost\u00ed nie je toto nastavenie nijako potrebn\u00e9 potvrdi\u0165, nastavenie m\u00e1 \u00fa\u010dinnos\u0165 hne\u010f ako je h\u00fdban\u00e9 so slidermi.","title":"Nastavenie vzdialenosti"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/magnety/#magnet-interaguj\u00faci-na-z\u00e1klade-funkcie","text":"Tento typ magnetu zatia\u013e nie je implementovan\u00fd.","title":"Magnet interaguj\u00faci na z\u00e1klade funkcie"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/moonscript_projekty/","text":"\ud83c\udf13 Anal\u00fdza Moonscript projektov \u00b6 Be\u017ene sa softv\u00e9r 3DSoftViz pou\u017e\u00edva na analyzovanie Lua projektov. Jeho implement\u00e1cia v\u0161ak umo\u017e\u0148uje analyzovanie aj Moonscript projektov. Potrebn\u00e9 kroky pre analyzovanie Moonscript projektov s\u00fa: V \u010dasti Unity otvori\u0165 s\u00fabor GraphLoader.cs V \u010dasti, kde sa prid\u00e1va konfigur\u00e1cia - teda v Configuration.Add(): Nastavi\u0165 cestu k Moonscript projektu Nastavi\u0165 atrib\u00fat GraphExtractor na \"GraphExtractor.MoonscriptGraph\", \u010do zabezpe\u010d\u00ed pou\u017e\u00edvanie modulu LuaMeg namiesto LuaDb","title":"\ud83c\udf13 Anal\u00fdza Moonscript projektov"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/moonscript_projekty/#-anal\u00fdza-moonscript-projektov","text":"Be\u017ene sa softv\u00e9r 3DSoftViz pou\u017e\u00edva na analyzovanie Lua projektov. Jeho implement\u00e1cia v\u0161ak umo\u017e\u0148uje analyzovanie aj Moonscript projektov. Potrebn\u00e9 kroky pre analyzovanie Moonscript projektov s\u00fa: V \u010dasti Unity otvori\u0165 s\u00fabor GraphLoader.cs V \u010dasti, kde sa prid\u00e1va konfigur\u00e1cia - teda v Configuration.Add(): Nastavi\u0165 cestu k Moonscript projektu Nastavi\u0165 atrib\u00fat GraphExtractor na \"GraphExtractor.MoonscriptGraph\", \u010do zabezpe\u010d\u00ed pou\u017e\u00edvanie modulu LuaMeg namiesto LuaDb","title":"\ud83c\udf13 Anal\u00fdza Moonscript projektov"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/obmedzovace/","text":"\u26d3\ufe0f Obmedzova\u010de \u00b6 Obmedzova\u010d je do sc\u00e9ny mo\u017en\u00e9 prida\u0165 prostredn\u00edctvom menu. V \u0148om sa nach\u00e1dza sekcia Spawn restriction a v r\u00e1mci nej u\u017e konkr\u00e9tne typy obmedzova\u010dov. Po zvolen\u00ed sa dan\u00fd typ obmedzova\u010da zjav\u00ed pri na\u0161ich ruk\u00e1ch. \u010co sa t\u00fdka gizma, tak v menu je mo\u017en\u00e9 nastavi\u0165 \u010di sa zobrazuje pos\u00favacie a rotovacie gizmo, \u0161k\u00e1lovacie gizmo alebo s\u00fa gizm\u00e1 vypnut\u00e9. Gizmo sa automaticky zobraz\u00ed okolo objektu, ke\u010f sa k nemu dostato\u010dne bl\u00edzko pribl\u00ed\u017eime rukou. Pohyb alebo rot\u00e1cia objektom \u00b6 V pr\u00edpade, \u017ee m\u00e1me zvolen\u00fd typ gizma na pohyb alebo rot\u00e1ciu, po pribl\u00ed\u017een\u00ed sa k objektu sa zobraz\u00ed okolo neho biely obrys kocky. Ke\u010f tento objekt uchop\u00edme, obrys kocky zmen\u00ed farbu na \u017elt\u00fa a vtedy vieme pohybom ruky objektom h\u00fdba\u0165 alebo ho rotova\u0165. \u0160k\u00e1lovanie objektu \u00b6 Ke\u010f m\u00e1me zobrazen\u00e9 gizmo pre \u0161k\u00e1lovanie, vid\u00edme okolo neho kocku, na ktorej s\u00fa rozmiestnen\u00e9 mal\u00e9 zelen\u00e9 ovl\u00e1dacie kocky. Ke\u010f uchop\u00edme rohov\u00fa kocku, objekt m\u00f4\u017eeme zv\u00e4\u010d\u0161ova\u0165 po v\u0161etk\u00fdch troch osiach. Vtedy sa z\u00e1rove\u0148 farba konkr\u00e9tnej zelenej kocky zmen\u00ed na \u017elt\u00fa. Uchopen\u00edm prostrednej zelenej kocky na hrane, m\u00f4\u017eeme \u0161k\u00e1lova\u0165 objekt po dvoch osiach. Vtedy zmen\u00edme tvar celkov\u00e9ho gizma z kocky na kv\u00e1der. Posledn\u00fdm sp\u00f4sobom \u0161k\u00e1lovania je uchopenie zelenej kocky v prostriedky strany kocky, kedy vieme objekt \u0161k\u00e1lova\u0165 po jednej osi. Vtedy kocku taktie\u017e zmen\u00edme na kv\u00e1der, ktor\u00fd akoby na\u0165ahujeme. Pohyb alebo rot\u00e1cia cel\u00fdm grafom \u00b6 Ke\u010f sa na\u0161e ruky nach\u00e1dzaj\u00fa v ur\u010ditej vzdialenosti od cel\u00e9ho grafu, gizmo sa zobraz\u00ed okolo. Vtedy m\u00f4\u017eeme uchopen\u00edm za\u010da\u0165 h\u00fdba\u0165 alebo rotova\u0165 cel\u00fdm grafom. D\u00f4le\u017eit\u00e9 je poznamena\u0165, \u017ee obmedzova\u010de s\u00fa na gizm\u00e1ch pomerne z\u00e1visl\u00e9. Ke\u010f prid\u00e1me do sc\u00e9ny obmedzova\u010d, tak jeho ve\u013ekos\u0165 a polohu men\u00edme pr\u00e1ve pomocou gizma.","title":"\u26d3\ufe0f Obmedzova\u010de"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/obmedzovace/#-obmedzova\u010de","text":"Obmedzova\u010d je do sc\u00e9ny mo\u017en\u00e9 prida\u0165 prostredn\u00edctvom menu. V \u0148om sa nach\u00e1dza sekcia Spawn restriction a v r\u00e1mci nej u\u017e konkr\u00e9tne typy obmedzova\u010dov. Po zvolen\u00ed sa dan\u00fd typ obmedzova\u010da zjav\u00ed pri na\u0161ich ruk\u00e1ch. \u010co sa t\u00fdka gizma, tak v menu je mo\u017en\u00e9 nastavi\u0165 \u010di sa zobrazuje pos\u00favacie a rotovacie gizmo, \u0161k\u00e1lovacie gizmo alebo s\u00fa gizm\u00e1 vypnut\u00e9. Gizmo sa automaticky zobraz\u00ed okolo objektu, ke\u010f sa k nemu dostato\u010dne bl\u00edzko pribl\u00ed\u017eime rukou.","title":"\u26d3\ufe0f Obmedzova\u010de"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/obmedzovace/#pohyb-alebo-rot\u00e1cia-objektom","text":"V pr\u00edpade, \u017ee m\u00e1me zvolen\u00fd typ gizma na pohyb alebo rot\u00e1ciu, po pribl\u00ed\u017een\u00ed sa k objektu sa zobraz\u00ed okolo neho biely obrys kocky. Ke\u010f tento objekt uchop\u00edme, obrys kocky zmen\u00ed farbu na \u017elt\u00fa a vtedy vieme pohybom ruky objektom h\u00fdba\u0165 alebo ho rotova\u0165.","title":"Pohyb alebo rot\u00e1cia objektom"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/obmedzovace/#\u0161k\u00e1lovanie-objektu","text":"Ke\u010f m\u00e1me zobrazen\u00e9 gizmo pre \u0161k\u00e1lovanie, vid\u00edme okolo neho kocku, na ktorej s\u00fa rozmiestnen\u00e9 mal\u00e9 zelen\u00e9 ovl\u00e1dacie kocky. Ke\u010f uchop\u00edme rohov\u00fa kocku, objekt m\u00f4\u017eeme zv\u00e4\u010d\u0161ova\u0165 po v\u0161etk\u00fdch troch osiach. Vtedy sa z\u00e1rove\u0148 farba konkr\u00e9tnej zelenej kocky zmen\u00ed na \u017elt\u00fa. Uchopen\u00edm prostrednej zelenej kocky na hrane, m\u00f4\u017eeme \u0161k\u00e1lova\u0165 objekt po dvoch osiach. Vtedy zmen\u00edme tvar celkov\u00e9ho gizma z kocky na kv\u00e1der. Posledn\u00fdm sp\u00f4sobom \u0161k\u00e1lovania je uchopenie zelenej kocky v prostriedky strany kocky, kedy vieme objekt \u0161k\u00e1lova\u0165 po jednej osi. Vtedy kocku taktie\u017e zmen\u00edme na kv\u00e1der, ktor\u00fd akoby na\u0165ahujeme.","title":"\u0160k\u00e1lovanie objektu"},{"location":"dokumentacia_k_produktu/prirucky/pouzivatelska_prirucka/obmedzovace/#pohyb-alebo-rot\u00e1cia-cel\u00fdm-grafom","text":"Ke\u010f sa na\u0161e ruky nach\u00e1dzaj\u00fa v ur\u010ditej vzdialenosti od cel\u00e9ho grafu, gizmo sa zobraz\u00ed okolo. Vtedy m\u00f4\u017eeme uchopen\u00edm za\u010da\u0165 h\u00fdba\u0165 alebo rotova\u0165 cel\u00fdm grafom. D\u00f4le\u017eit\u00e9 je poznamena\u0165, \u017ee obmedzova\u010de s\u00fa na gizm\u00e1ch pomerne z\u00e1visl\u00e9. Ke\u010f prid\u00e1me do sc\u00e9ny obmedzova\u010d, tak jeho ve\u013ekos\u0165 a polohu men\u00edme pr\u00e1ve pomocou gizma.","title":"Pohyb alebo rot\u00e1cia cel\u00fdm grafom"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/","text":"IDE pre Lua \u00b6 Pre v\u00fdvoj Lua modulov je mo\u017en\u00e9 pou\u017ei\u0165 Visual Studio Code , ZeroBrane Studio a vyv\u00edja\u0165 lok\u00e1lne alebo v Docker kontajneri. Odpor\u00fa\u010dame pou\u017ei\u0165 Visual Studio Code, najm\u00e4 kv\u00f4li pou\u017eitiu docker-u a prostredia zhodn\u00e9ho s CI. Visual Studio Code \u00b6 Pr\u00edprava repozit\u00e1rov a kontajnera \u00b6 Na disku na \u013eubovo\u013en\u00e9 miesto naklonujeme a repozit\u00e1r devenv a inicializujeme submoduly. Submoduly jednotliv\u00fdch submodulov (teda z\u00e1vislosti lua modulov) nie je potrebne s\u0165ahova\u0165, preto\u017ee niektor\u00e9 s\u00fa nain\u0161talovan\u00e9 v image a zvy\u0161n\u00e9 ako submoduly devenv repozit\u00e1ra. N\u00e1sledne vytvor\u00edme image a spust\u00edme kontajner. git clone git@gitlab.com:FIIT/Common/devenv.git cd devenv git submodule update --init --remote docker-compose run --service-ports --name luadev luadev Kontajer sta\u010d\u00ed vytvori\u0165 len raz, nesk\u00f4r je mo\u017en\u00e9 ho jednoducho spusti\u0165 docker start -i luadev . Ak potrebujeme image a kontajner vytvori\u0165 nanovo, spust\u00edme: docker-compose down docker-compose build --no-cache docker-compose run --service-ports --name luadev luadev V ka\u017edom repozit\u00e1ri by mal by\u0165 prie\u010dinok dev so s\u00fabormi lrdb_debug.lua a start_debug.sh . Ak ho niektor\u00fd neobsahuje, skop\u00edrujeme ho z develop vetvy, pr\u00edpadne in\u00e9ho repozit\u00e1ra. T\u00e1to uk\u00e1\u017eka je pre pou\u017eitie luadb , podstatn\u00e9 s\u00fa prv\u00e9 dva riadky, kde sa akivuje debugger. lrdb = require ( \"lrdb_server\" ) lrdb . activate ( 21110 ) astManager = require \"luadb.manager.AST\" extractor = require \"luadb.extraction.extractor\" path = \"src\" astMan = astManager . new () extractedGraph = extractor . extract ( path , astMan ) lrdb . deactivate () Nastavenie IDE \u00b6 Do IDE nain\u0161talujeme roz\u0161\u00edrenie LRDB debugger nach\u00e1dzaj\u00face sa v repozit\u00e1ri devenv . Je mo\u017en\u00e9 ho nain\u0161talova\u0165 pr\u00edkazom code --install-extension lrdb-0.3.5.vsix alebo manu\u00e1lne vo VS Code cez Extensions -> More Actions... -> Install from VSIX. Nakoniec v IDE otvor\u00edme prie\u010dinok luadev osahuj\u00faci v\u0161etky repozit\u00e1re. Spustenie \u00b6 S\u00fabor lrdb_debug.lua sl\u00fa\u017ei ako 'main', kde je uk\u00e1\u017ekov\u00e9 pou\u017eitie danej kni\u017enice. Pri v\u00fdvoji pou\u017e\u00edvame tento s\u00fabor ako pre vyvolanie vyv\u00edjanej funkcionality, ale zmeny v \u0148om necommitujeme. Pre jeho spustenie vykon\u00e1me pr\u00edkaz bash dev/start_debug.sh . V tomto bash skripte sa cyklicky vykon\u00e1va lua lrdb_debug.lua , teda nie je potrebn\u00e9 ho v\u017edy manu\u00e1lne sp\u00fa\u0161\u0165a\u0165. Ukon\u010denie skriptu sa realizuje \u0161tandardne pomocou Ctrl+C. Tip Pri debugovan\u00ed pou\u017e\u00edvame ako pracovn\u00fd adres\u00e1r samotn\u00fd repozit\u00e1r, teda napr\u00edklad cd /luadev/luadb Po spusten\u00ed lrdb_debug.lua je vykon\u00e1vanie pozastaven\u00e9 a \u010dak\u00e1 na pripojenie IDE. Pre pripojenie vo VS Code stla\u010d\u00edme kl\u00e1vesu F5. ZeroBrane Studio \u00b6 ZeroBrane Studio je ove\u013ea jednoduch\u0161ie na nastavenie ako VSCode, av\u0161ak doposia\u013e sa n\u00e1m v \u0148om nepodarilo spojazdni\u0165 remote-debugging. Taktie\u017e je VSCode u\u017eivate\u013esky ove\u013ea pr\u00edvetivej\u0161ie prostredie na pr\u00e1cu. Z t\u00fdchto d\u00f4vodov odpor\u00fa\u010dame pou\u017ei\u0165 sk\u00f4r VSCode a teda postup pop\u00edsan\u00fd vy\u0161\u0161ie. Takisto je treba poznamena\u0165, \u017ee v tomto IDE je mo\u017en\u00e9 debugova\u0165 len jazyk LUA, nie TERRA. Nastavenie IDE \u00b6 \u0160tandardne je IDE nastaven\u00e9 tak, \u017ee pri debugovan\u00ed je potrebn\u00e9 ma\u0165 otvoren\u00e9 v\u0161etky s\u00fabory, do ktor\u00fdch m\u00f4\u017ee program po\u010das behu vojs\u0165. Preto mus\u00edme pred za\u010dat\u00edm nastavi\u0165 IDE tak, aby volan\u00e9 moduly otv\u00e1ralo automaticky. Toto sprav\u00edme v Menu => Edit => Preferences => Settings: User . Otvor\u00ed sa n\u00e1m konfigura\u010dn\u00fd s\u00fabor user.lua , do ktor\u00e9ho na nov\u00fd riadok prid\u00e1me pr\u00edkaz editor.autoactivate = true a n\u00e1sledne zmeny ulo\u017e\u00edme a m\u00f4\u017eme s\u00fabor zavrie\u0165. T\u00fdmto je IDE pripraven\u00e9 na debuggovanie. Pr\u00edprava \u00b6 V IDE si otvor\u00edme ako projekt adres\u00e1r s LUA skriptami. Ten je v projekte 3dsoftviz ulo\u017een\u00fd na tomto mieste: <cesta-k-projektu>\\3dsoftvis_remake\\Projects\\3DSoftviz\\UnityProject\\Assets\\StreamingAssets\\LuaScripts . V podadres\u00e1ri App si vytvor\u00edme s\u00fabor debug.lua , do ktor\u00e9ho vlo\u017e\u00edme nasledovn\u00fd kus k\u00f3du. asset_directory = \"<cesta-k-projektu>/3dsoftvis_remake/Projects/3DSoftviz/UnityProject/Assets/StreamingAssets/LuaScripts\" local paths = { \"/Modules/?.lua\" , \"/Modules/?/init.lua\" } local cpaths = { \"/Modules/?.dll\" , \"/Modules/loadall.dll\" , \"/Modules/?.so\" , \"/Modules/loadall.so\" , \"/Modules/?.dylib\" , \"/Modules/loadall.dylib\" } local function appendPath ( path , prefix , pathsToAppend ) path = path or \".\" for _ , pathToAppend in ipairs ( pathsToAppend ) do path = path .. \";\" .. prefix .. pathToAppend end return path end package.path = appendPath ( package.path , asset_directory , paths ) package.cpath = appendPath ( package.cpath , asset_directory , cpaths ) V prvom riadku zamen\u00edme placeholder <cesta-k-projektu> za cestu k 3dsoftviz projektu na na\u0161om filesyst\u00e9me. N\u00e1sledne je IDE pripraven\u00e9 na debugovanie. K\u00f3d ktor\u00fd chceme debugova\u0165 p\u00ed\u0161eme za vlo\u017een\u00fd kus k\u00f3du do s\u00faboru debug.lua . Debugovanie funguje rovnako ako v in\u00fdch IDE.","title":"IDE pre Lua"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#ide-pre-lua","text":"Pre v\u00fdvoj Lua modulov je mo\u017en\u00e9 pou\u017ei\u0165 Visual Studio Code , ZeroBrane Studio a vyv\u00edja\u0165 lok\u00e1lne alebo v Docker kontajneri. Odpor\u00fa\u010dame pou\u017ei\u0165 Visual Studio Code, najm\u00e4 kv\u00f4li pou\u017eitiu docker-u a prostredia zhodn\u00e9ho s CI.","title":"IDE pre Lua"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#visual-studio-code","text":"","title":"Visual Studio Code"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#pr\u00edprava-repozit\u00e1rov-a-kontajnera","text":"Na disku na \u013eubovo\u013en\u00e9 miesto naklonujeme a repozit\u00e1r devenv a inicializujeme submoduly. Submoduly jednotliv\u00fdch submodulov (teda z\u00e1vislosti lua modulov) nie je potrebne s\u0165ahova\u0165, preto\u017ee niektor\u00e9 s\u00fa nain\u0161talovan\u00e9 v image a zvy\u0161n\u00e9 ako submoduly devenv repozit\u00e1ra. N\u00e1sledne vytvor\u00edme image a spust\u00edme kontajner. git clone git@gitlab.com:FIIT/Common/devenv.git cd devenv git submodule update --init --remote docker-compose run --service-ports --name luadev luadev Kontajer sta\u010d\u00ed vytvori\u0165 len raz, nesk\u00f4r je mo\u017en\u00e9 ho jednoducho spusti\u0165 docker start -i luadev . Ak potrebujeme image a kontajner vytvori\u0165 nanovo, spust\u00edme: docker-compose down docker-compose build --no-cache docker-compose run --service-ports --name luadev luadev V ka\u017edom repozit\u00e1ri by mal by\u0165 prie\u010dinok dev so s\u00fabormi lrdb_debug.lua a start_debug.sh . Ak ho niektor\u00fd neobsahuje, skop\u00edrujeme ho z develop vetvy, pr\u00edpadne in\u00e9ho repozit\u00e1ra. T\u00e1to uk\u00e1\u017eka je pre pou\u017eitie luadb , podstatn\u00e9 s\u00fa prv\u00e9 dva riadky, kde sa akivuje debugger. lrdb = require ( \"lrdb_server\" ) lrdb . activate ( 21110 ) astManager = require \"luadb.manager.AST\" extractor = require \"luadb.extraction.extractor\" path = \"src\" astMan = astManager . new () extractedGraph = extractor . extract ( path , astMan ) lrdb . deactivate ()","title":"Pr\u00edprava repozit\u00e1rov a kontajnera"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#nastavenie-ide","text":"Do IDE nain\u0161talujeme roz\u0161\u00edrenie LRDB debugger nach\u00e1dzaj\u00face sa v repozit\u00e1ri devenv . Je mo\u017en\u00e9 ho nain\u0161talova\u0165 pr\u00edkazom code --install-extension lrdb-0.3.5.vsix alebo manu\u00e1lne vo VS Code cez Extensions -> More Actions... -> Install from VSIX. Nakoniec v IDE otvor\u00edme prie\u010dinok luadev osahuj\u00faci v\u0161etky repozit\u00e1re.","title":"Nastavenie IDE"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#spustenie","text":"S\u00fabor lrdb_debug.lua sl\u00fa\u017ei ako 'main', kde je uk\u00e1\u017ekov\u00e9 pou\u017eitie danej kni\u017enice. Pri v\u00fdvoji pou\u017e\u00edvame tento s\u00fabor ako pre vyvolanie vyv\u00edjanej funkcionality, ale zmeny v \u0148om necommitujeme. Pre jeho spustenie vykon\u00e1me pr\u00edkaz bash dev/start_debug.sh . V tomto bash skripte sa cyklicky vykon\u00e1va lua lrdb_debug.lua , teda nie je potrebn\u00e9 ho v\u017edy manu\u00e1lne sp\u00fa\u0161\u0165a\u0165. Ukon\u010denie skriptu sa realizuje \u0161tandardne pomocou Ctrl+C. Tip Pri debugovan\u00ed pou\u017e\u00edvame ako pracovn\u00fd adres\u00e1r samotn\u00fd repozit\u00e1r, teda napr\u00edklad cd /luadev/luadb Po spusten\u00ed lrdb_debug.lua je vykon\u00e1vanie pozastaven\u00e9 a \u010dak\u00e1 na pripojenie IDE. Pre pripojenie vo VS Code stla\u010d\u00edme kl\u00e1vesu F5.","title":"Spustenie"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#zerobrane-studio","text":"ZeroBrane Studio je ove\u013ea jednoduch\u0161ie na nastavenie ako VSCode, av\u0161ak doposia\u013e sa n\u00e1m v \u0148om nepodarilo spojazdni\u0165 remote-debugging. Taktie\u017e je VSCode u\u017eivate\u013esky ove\u013ea pr\u00edvetivej\u0161ie prostredie na pr\u00e1cu. Z t\u00fdchto d\u00f4vodov odpor\u00fa\u010dame pou\u017ei\u0165 sk\u00f4r VSCode a teda postup pop\u00edsan\u00fd vy\u0161\u0161ie. Takisto je treba poznamena\u0165, \u017ee v tomto IDE je mo\u017en\u00e9 debugova\u0165 len jazyk LUA, nie TERRA.","title":"ZeroBrane Studio"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#nastavenie-ide_1","text":"\u0160tandardne je IDE nastaven\u00e9 tak, \u017ee pri debugovan\u00ed je potrebn\u00e9 ma\u0165 otvoren\u00e9 v\u0161etky s\u00fabory, do ktor\u00fdch m\u00f4\u017ee program po\u010das behu vojs\u0165. Preto mus\u00edme pred za\u010dat\u00edm nastavi\u0165 IDE tak, aby volan\u00e9 moduly otv\u00e1ralo automaticky. Toto sprav\u00edme v Menu => Edit => Preferences => Settings: User . Otvor\u00ed sa n\u00e1m konfigura\u010dn\u00fd s\u00fabor user.lua , do ktor\u00e9ho na nov\u00fd riadok prid\u00e1me pr\u00edkaz editor.autoactivate = true a n\u00e1sledne zmeny ulo\u017e\u00edme a m\u00f4\u017eme s\u00fabor zavrie\u0165. T\u00fdmto je IDE pripraven\u00e9 na debuggovanie.","title":"Nastavenie IDE"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/lua_ide/#pr\u00edprava","text":"V IDE si otvor\u00edme ako projekt adres\u00e1r s LUA skriptami. Ten je v projekte 3dsoftviz ulo\u017een\u00fd na tomto mieste: <cesta-k-projektu>\\3dsoftvis_remake\\Projects\\3DSoftviz\\UnityProject\\Assets\\StreamingAssets\\LuaScripts . V podadres\u00e1ri App si vytvor\u00edme s\u00fabor debug.lua , do ktor\u00e9ho vlo\u017e\u00edme nasledovn\u00fd kus k\u00f3du. asset_directory = \"<cesta-k-projektu>/3dsoftvis_remake/Projects/3DSoftviz/UnityProject/Assets/StreamingAssets/LuaScripts\" local paths = { \"/Modules/?.lua\" , \"/Modules/?/init.lua\" } local cpaths = { \"/Modules/?.dll\" , \"/Modules/loadall.dll\" , \"/Modules/?.so\" , \"/Modules/loadall.so\" , \"/Modules/?.dylib\" , \"/Modules/loadall.dylib\" } local function appendPath ( path , prefix , pathsToAppend ) path = path or \".\" for _ , pathToAppend in ipairs ( pathsToAppend ) do path = path .. \";\" .. prefix .. pathToAppend end return path end package.path = appendPath ( package.path , asset_directory , paths ) package.cpath = appendPath ( package.cpath , asset_directory , cpaths ) V prvom riadku zamen\u00edme placeholder <cesta-k-projektu> za cestu k 3dsoftviz projektu na na\u0161om filesyst\u00e9me. N\u00e1sledne je IDE pripraven\u00e9 na debugovanie. K\u00f3d ktor\u00fd chceme debugova\u0165 p\u00ed\u0161eme za vlo\u017een\u00fd kus k\u00f3du do s\u00faboru debug.lua . Debugovanie funguje rovnako ako v in\u00fdch IDE.","title":"Pr\u00edprava"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/mkdocs/","text":"Lok\u00e1lny mkdocs \u00b6 T\u00e1to pr\u00edru\u010dka sl\u00fa\u017ei pre v\u00fdvoj\u00e1rov, ktor\u00ed p\u00ed\u0161u dokument\u00e1ciu. Mkdocs je mo\u017en\u00e9 nain\u0161talova\u0165 na svojom po\u010d\u00edta\u010di a okam\u017eite vidie\u0165 ako vyzer\u00e1 p\u00edsan\u00e1 dokument\u00e1cia. Viac o MkDocs tu . In\u0161tal\u00e1cia \u00b6 Mkdocs je nap\u00edsan\u00fd v jazyku python, preto je potrebn\u00e9 ho ma\u0165 nain\u0161talovan\u00fd. Odpor\u00fa\u010dame verziu 3.6 alebo 3.7, stiahnut\u00fd zo str\u00e1nky python.org . V \u010dase p\u00edsania (marec 2020) pod verziou 3.8 nefunguje z d\u00f4vodu bugu. N\u00e1sledne nain\u0161talujeme samotn\u00fd mkdocs a z\u00e1vislosti. pip3 install mkdocs mkdocs-material mkdocs-awesome-pages-plugin pygments mkdocs-pdf-export-plugin pip3 install weasyprint Bal\u00edk weasyprint je obvykle nutn\u00e9 in\u0161talova\u0165 zvl\u00e1\u0161t pr\u00edpadne na dva kr\u00e1t, preto\u017ee sa nenain\u0161taluje korektne. Verzie Je potrebn\u00e9 in\u0161talova\u0165 verziu mkdocs 1.0.4 kv\u00f4li nepodpore slovensk\u00e9ho vyh\u013ead\u00e1vania v novej verzii pip3 install mkdocs==1.0.4 mkdocs-material==4.5.0 mkdocs-awesome-pages-plugin==2.1.0 pygments==2.4.2 mkdocs-pdf-export-plugin==0.5.5 Nastavenie \u00b6 Do vhodn\u00e9ho prie\u010dinka naklonujeme repozit\u00e1r git clone git@gitlab.com:FIIT/3DSoftVis_Remake/documentation.git . N\u00e1sledne je mo\u017en\u00e9 v documentation prie\u010dinku spusti\u0165 pr\u00edkaz mkdocs serve a otvori\u0165 v prehliada\u010di adresu localhost:8000 . Pred commitom a pushnut\u00edm zmien spust\u00edme pr\u00edkaz mkdocs build --strict , ktor\u00fd upozorn\u00ed na nefunk\u010dn\u00e9 linky a podobn\u00e9 probl\u00e9my, ktor\u00e9 by zabr\u00e1nili generovaniu dokument\u00e1cie v pipeline.","title":"Lok\u00e1lny mkdocs"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/mkdocs/#lok\u00e1lny-mkdocs","text":"T\u00e1to pr\u00edru\u010dka sl\u00fa\u017ei pre v\u00fdvoj\u00e1rov, ktor\u00ed p\u00ed\u0161u dokument\u00e1ciu. Mkdocs je mo\u017en\u00e9 nain\u0161talova\u0165 na svojom po\u010d\u00edta\u010di a okam\u017eite vidie\u0165 ako vyzer\u00e1 p\u00edsan\u00e1 dokument\u00e1cia. Viac o MkDocs tu .","title":"Lok\u00e1lny mkdocs"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/mkdocs/#in\u0161tal\u00e1cia","text":"Mkdocs je nap\u00edsan\u00fd v jazyku python, preto je potrebn\u00e9 ho ma\u0165 nain\u0161talovan\u00fd. Odpor\u00fa\u010dame verziu 3.6 alebo 3.7, stiahnut\u00fd zo str\u00e1nky python.org . V \u010dase p\u00edsania (marec 2020) pod verziou 3.8 nefunguje z d\u00f4vodu bugu. N\u00e1sledne nain\u0161talujeme samotn\u00fd mkdocs a z\u00e1vislosti. pip3 install mkdocs mkdocs-material mkdocs-awesome-pages-plugin pygments mkdocs-pdf-export-plugin pip3 install weasyprint Bal\u00edk weasyprint je obvykle nutn\u00e9 in\u0161talova\u0165 zvl\u00e1\u0161t pr\u00edpadne na dva kr\u00e1t, preto\u017ee sa nenain\u0161taluje korektne. Verzie Je potrebn\u00e9 in\u0161talova\u0165 verziu mkdocs 1.0.4 kv\u00f4li nepodpore slovensk\u00e9ho vyh\u013ead\u00e1vania v novej verzii pip3 install mkdocs==1.0.4 mkdocs-material==4.5.0 mkdocs-awesome-pages-plugin==2.1.0 pygments==2.4.2 mkdocs-pdf-export-plugin==0.5.5","title":"In\u0161tal\u00e1cia"},{"location":"dokumentacia_k_produktu/prirucky/vyvojarska_prirucka/mkdocs/#nastavenie","text":"Do vhodn\u00e9ho prie\u010dinka naklonujeme repozit\u00e1r git clone git@gitlab.com:FIIT/3DSoftVis_Remake/documentation.git . N\u00e1sledne je mo\u017en\u00e9 v documentation prie\u010dinku spusti\u0165 pr\u00edkaz mkdocs serve a otvori\u0165 v prehliada\u010di adresu localhost:8000 . Pred commitom a pushnut\u00edm zmien spust\u00edme pr\u00edkaz mkdocs build --strict , ktor\u00fd upozorn\u00ed na nefunk\u010dn\u00e9 linky a podobn\u00e9 probl\u00e9my, ktor\u00e9 by zabr\u00e1nili generovaniu dokument\u00e1cie v pipeline.","title":"Nastavenie"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/","text":"\ud83d\udc65 Roly \u010dlenov t\u00edmu \u00b6 Ing. Peter Kapec, PhD. \u00b6 Ved\u00faci t\u00edmu Vlastn\u00edk produktu Definuje v\u00edziu projektu Bc. Nikod\u00e9m Adler \u00b6 Mana\u017e\u00e9r v\u00fdvoja Unity developer Bc. Ivana Frankovi\u010dov\u00e1 \u00b6 Mana\u017e\u00e9r dokument\u00e1cie Dokumentaristka Bc. Andrej Hoferica \u00b6 Mana\u017e\u00e9r testov Bc. Samuel \u0160ouc \u00b6 Backend developer Dokumentarista Bc. Michal Jozefek \u00b6 Scrum master Backend developer Bc. Michael Kro\u010dka \u00b6 Mana\u017e\u00e9r webov\u00e9ho s\u00eddla Unity developer","title":"\ud83d\udc65 Roly \u010dlenov t\u00edmu"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#-roly-\u010dlenov-t\u00edmu","text":"","title":"\ud83d\udc65 Roly \u010dlenov t\u00edmu"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#ing-peter-kapec-phd","text":"Ved\u00faci t\u00edmu Vlastn\u00edk produktu Definuje v\u00edziu projektu","title":"Ing. Peter Kapec, PhD."},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-nikod\u00e9m-adler","text":"Mana\u017e\u00e9r v\u00fdvoja Unity developer","title":"Bc. Nikod\u00e9m Adler"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-ivana-frankovi\u010dov\u00e1","text":"Mana\u017e\u00e9r dokument\u00e1cie Dokumentaristka","title":"Bc. Ivana Frankovi\u010dov\u00e1"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-andrej-hoferica","text":"Mana\u017e\u00e9r testov","title":"Bc. Andrej Hoferica"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-samuel-\u0161ouc","text":"Backend developer Dokumentarista","title":"Bc. Samuel \u0160ouc"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-michal-jozefek","text":"Scrum master Backend developer","title":"Bc. Michal Jozefek"},{"location":"dokumentacia_k_riadeniu/roly_clenov_timu/#bc-michael-kro\u010dka","text":"Mana\u017e\u00e9r webov\u00e9ho s\u00eddla Unity developer","title":"Bc. Michael Kro\u010dka"},{"location":"dokumentacia_k_riadeniu/uvod/","text":"1\ufe0f\u20e3 \u00davod \u00b6 Tento dokument sa zaober\u00e1 t\u00fdm, ako sa organizujeme v t\u00edme. Poskytuje inform\u00e1cie k riadeniu a rie\u0161i, ak\u00e9 m\u00e1me pracovn\u00e9 procesy. V na\u0161om t\u00edmovom projekte sa venujeme projektu VizReal. Tento projekt sa zaober\u00e1 vizualiz\u00e1ciou softv\u00e9ru vo virtu\u00e1lnej a roz\u0161\u00edrenej realite. Hlavn\u00fdm cie\u013eom t\u00edmov\u00e9ho projektu je nau\u010di\u0165 sa pracova\u0165 vo v\u00e4\u010d\u0161ej skupine \u013eud\u00ed (t\u00edme) a spr\u00e1vne sa riadi\u0165. Z\u00e1rove\u0148 je na\u0161\u00edm cie\u013eom nau\u010di\u0165 sa pracova\u0165 s n\u00e1strojmi na podporu mana\u017ementu t\u00edmov. Ved\u00facim projektu je Ing. Peter Kapec, PhD., ktor\u00fd n\u00e1s m\u00e1 usmer\u0148ova\u0165 pri pr\u00e1ci a pom\u00e1ha\u0165 n\u00e1m pri tvorbe \u00faloh alebo probl\u00e9moch ktor\u00e9 sa vyskytn\u00fa po\u010das implement\u00e1cie. Ved\u00faci t\u00edmu z\u00e1rove\u0148 pln\u00ed aj \u00falohu vlastn\u00edka produktu, \u010do znamen\u00e1, \u017ee n\u00e1m zad\u00e1va \u00falohy a po\u017eiadavky na syst\u00e9m. Dokument tie\u017e obsahuje roly \u010dlenov t\u00edmu a aplik\u00e1cie mana\u017ementov. \u010ealej pokra\u010duje opisom \u0161printov a exportom jednotliv\u00fdch \u00faloh, ktor\u00e9 boli analyzovan\u00e9 alebo implementovan\u00e9 v danom \u0161printe. Obsahuje aj metodiky, ktor\u00e9 s\u00fa po\u010das v\u00fdvoja syst\u00e9mu pou\u017e\u00edvan\u00e9.","title":"1\ufe0f\u20e3 \u00davod"},{"location":"dokumentacia_k_riadeniu/uvod/#1-\u00favod","text":"Tento dokument sa zaober\u00e1 t\u00fdm, ako sa organizujeme v t\u00edme. Poskytuje inform\u00e1cie k riadeniu a rie\u0161i, ak\u00e9 m\u00e1me pracovn\u00e9 procesy. V na\u0161om t\u00edmovom projekte sa venujeme projektu VizReal. Tento projekt sa zaober\u00e1 vizualiz\u00e1ciou softv\u00e9ru vo virtu\u00e1lnej a roz\u0161\u00edrenej realite. Hlavn\u00fdm cie\u013eom t\u00edmov\u00e9ho projektu je nau\u010di\u0165 sa pracova\u0165 vo v\u00e4\u010d\u0161ej skupine \u013eud\u00ed (t\u00edme) a spr\u00e1vne sa riadi\u0165. Z\u00e1rove\u0148 je na\u0161\u00edm cie\u013eom nau\u010di\u0165 sa pracova\u0165 s n\u00e1strojmi na podporu mana\u017ementu t\u00edmov. Ved\u00facim projektu je Ing. Peter Kapec, PhD., ktor\u00fd n\u00e1s m\u00e1 usmer\u0148ova\u0165 pri pr\u00e1ci a pom\u00e1ha\u0165 n\u00e1m pri tvorbe \u00faloh alebo probl\u00e9moch ktor\u00e9 sa vyskytn\u00fa po\u010das implement\u00e1cie. Ved\u00faci t\u00edmu z\u00e1rove\u0148 pln\u00ed aj \u00falohu vlastn\u00edka produktu, \u010do znamen\u00e1, \u017ee n\u00e1m zad\u00e1va \u00falohy a po\u017eiadavky na syst\u00e9m. Dokument tie\u017e obsahuje roly \u010dlenov t\u00edmu a aplik\u00e1cie mana\u017ementov. \u010ealej pokra\u010duje opisom \u0161printov a exportom jednotliv\u00fdch \u00faloh, ktor\u00e9 boli analyzovan\u00e9 alebo implementovan\u00e9 v danom \u0161printe. Obsahuje aj metodiky, ktor\u00e9 s\u00fa po\u010das v\u00fdvoja syst\u00e9mu pou\u017e\u00edvan\u00e9.","title":"1\ufe0f\u20e3 \u00davod"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_dokumentovania/","text":"Mana\u017ement dokumentovania \u00b6 Dokument\u00e1ciu udr\u017eiavame v samostatnom repozit\u00e1ri Dokument\u00e1cia na GitLab-e. Odtia\u013e je dokument\u00e1cia automaticky generovan\u00e1 na webov\u00fa str\u00e1nku n\u00e1\u0161ho t\u00edmu. Dokument\u00e1cia je \u010dlenen\u00e1 na: Architekt\u00fara syst\u00e9mu Infra\u0161trukt\u00fara Funkcionalita syst\u00e9mu Pr\u00edru\u010dky Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du \u010cast\u00e9 probl\u00e9my Db\u00e1me na to, aby bola pravidelne aktualizovan\u00e1 a aby boli aktu\u00e1lne aj pou\u017e\u00edvate\u013esk\u00e9 pr\u00edru\u010dky. Pri p\u00edsan\u00ed dokument\u00e1cie sa riadime pr\u00edslu\u0161nou metodikou. Ako p\u00edsa\u0165 dokument\u00e1ciu","title":"Mana\u017ement dokumentovania"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_dokumentovania/#mana\u017ement-dokumentovania","text":"Dokument\u00e1ciu udr\u017eiavame v samostatnom repozit\u00e1ri Dokument\u00e1cia na GitLab-e. Odtia\u013e je dokument\u00e1cia automaticky generovan\u00e1 na webov\u00fa str\u00e1nku n\u00e1\u0161ho t\u00edmu. Dokument\u00e1cia je \u010dlenen\u00e1 na: Architekt\u00fara syst\u00e9mu Infra\u0161trukt\u00fara Funkcionalita syst\u00e9mu Pr\u00edru\u010dky Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du \u010cast\u00e9 probl\u00e9my Db\u00e1me na to, aby bola pravidelne aktualizovan\u00e1 a aby boli aktu\u00e1lne aj pou\u017e\u00edvate\u013esk\u00e9 pr\u00edru\u010dky. Pri p\u00edsan\u00ed dokument\u00e1cie sa riadime pr\u00edslu\u0161nou metodikou. Ako p\u00edsa\u0165 dokument\u00e1ciu","title":"Mana\u017ement dokumentovania"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_iteracii/","text":"Mana\u017ement iter\u00e1ci\u00ed \u00b6 Pr\u00e1ca na projekte je rozdelen\u00e1 do dvojt\u00fd\u017ed\u0148ov\u00fdch iter\u00e1ci\u00ed, ktor\u00e9 realizujeme pod\u013ea agilnej metodiky Scrum. V ka\u017edej iter\u00e1cii prebiehanie pl\u00e1novanie, priebe\u017en\u00e1 pr\u00e1ca na vybran\u00fdch \u00faloh\u00e1ch a n\u00e1sledn\u00e1 retrospekt\u00edva na zlep\u0161enie procesov v t\u00edme. D\u00f4le\u017eitou s\u00fa\u010das\u0165ou Scrumu s\u00fa pravideln\u00e9 stretnutia v\u0161etk\u00fdch \u010dlenov t\u00edmu, ktor\u00e9 realizujeme ka\u017ed\u00fd pondelok s product ownerom (ved\u00faci t\u00edmu) a ka\u017ed\u00fd utorok/streda bez neho. Metodika iter\u00e1ci\u00ed","title":"Mana\u017ement iter\u00e1ci\u00ed"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_iteracii/#mana\u017ement-iter\u00e1ci\u00ed","text":"Pr\u00e1ca na projekte je rozdelen\u00e1 do dvojt\u00fd\u017ed\u0148ov\u00fdch iter\u00e1ci\u00ed, ktor\u00e9 realizujeme pod\u013ea agilnej metodiky Scrum. V ka\u017edej iter\u00e1cii prebiehanie pl\u00e1novanie, priebe\u017en\u00e1 pr\u00e1ca na vybran\u00fdch \u00faloh\u00e1ch a n\u00e1sledn\u00e1 retrospekt\u00edva na zlep\u0161enie procesov v t\u00edme. D\u00f4le\u017eitou s\u00fa\u010das\u0165ou Scrumu s\u00fa pravideln\u00e9 stretnutia v\u0161etk\u00fdch \u010dlenov t\u00edmu, ktor\u00e9 realizujeme ka\u017ed\u00fd pondelok s product ownerom (ved\u00faci t\u00edmu) a ka\u017ed\u00fd utorok/streda bez neho. Metodika iter\u00e1ci\u00ed","title":"Mana\u017ement iter\u00e1ci\u00ed"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_prehliadok_kodu/","text":"Mana\u017ement prehliadok k\u00f3du \u00b6 Prehliadky k\u00f3du vykon\u00e1vame na Gitlab-e. Ka\u017ed\u00e1 nov\u00e1 vetva, ktor\u00e1 sa m\u00e1 mergn\u00fa\u0165 do develop vetvy, mus\u00ed prejs\u0165 cez prehliadku k\u00f3du in\u00fdm \u010dlenom t\u00edmu. Pri prehliadke k\u00f3du je d\u00f4le\u017eit\u00e9 dba\u0165 na kvalitu a spr\u00e1vnos\u0165 k\u00f3du, ale aj na to, \u010di s\u00fa k pridanej funkcionalite nap\u00edsan\u00e9 testy a, \u010di s\u00fa zmeny zapracovan\u00e9 v dokument\u00e1cii. Pri ka\u017edej prehliadke sa autor merge requestu a \u010dlen, ktor\u00e9mu je merge request priraden\u00fd riadia pr\u00edslu\u0161nou metodikou. Ako vykona\u0165 code review","title":"Mana\u017ement prehliadok k\u00f3du"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_prehliadok_kodu/#mana\u017ement-prehliadok-k\u00f3du","text":"Prehliadky k\u00f3du vykon\u00e1vame na Gitlab-e. Ka\u017ed\u00e1 nov\u00e1 vetva, ktor\u00e1 sa m\u00e1 mergn\u00fa\u0165 do develop vetvy, mus\u00ed prejs\u0165 cez prehliadku k\u00f3du in\u00fdm \u010dlenom t\u00edmu. Pri prehliadke k\u00f3du je d\u00f4le\u017eit\u00e9 dba\u0165 na kvalitu a spr\u00e1vnos\u0165 k\u00f3du, ale aj na to, \u010di s\u00fa k pridanej funkcionalite nap\u00edsan\u00e9 testy a, \u010di s\u00fa zmeny zapracovan\u00e9 v dokument\u00e1cii. Pri ka\u017edej prehliadke sa autor merge requestu a \u010dlen, ktor\u00e9mu je merge request priraden\u00fd riadia pr\u00edslu\u0161nou metodikou. Ako vykona\u0165 code review","title":"Mana\u017ement prehliadok k\u00f3du"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_riadenia_uloh/","text":"Mana\u017ement riadenia \u00faloh \u00b6 Na mana\u017ement v t\u00edme pou\u017e\u00edvame n\u00e1stroj Azure DevOps. Ten n\u00e1m umo\u017e\u0148uje udr\u017eiava\u0165 zoznam user stories (pou\u017e\u00edvate\u013esk\u00fdch pr\u00edbehov), ktor\u00e9 predstavuj\u00fa pridan\u00fa funkcionalitu pre vlastn\u00edka produktu. Pou\u017e\u00edvate\u013esk\u00e9 pr\u00edbehy s\u00fa zatrieden\u00e9 do jednotliv\u00fdch features a epicov. N\u00e1stroj n\u00e1m z\u00e1rove\u0148 pom\u00e1ha sledova\u0165, ktor\u00e9 \u00falohy m\u00e1me spravi\u0165 v danom \u0161printe, aj to v akom stave sa pr\u00e1ve nach\u00e1dzaj\u00fa. Metodika riadenia \u00faloh Ako popisova\u0165 polo\u017eky v Azure DevOps","title":"Mana\u017ement riadenia \u00faloh"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_riadenia_uloh/#mana\u017ement-riadenia-\u00faloh","text":"Na mana\u017ement v t\u00edme pou\u017e\u00edvame n\u00e1stroj Azure DevOps. Ten n\u00e1m umo\u017e\u0148uje udr\u017eiava\u0165 zoznam user stories (pou\u017e\u00edvate\u013esk\u00fdch pr\u00edbehov), ktor\u00e9 predstavuj\u00fa pridan\u00fa funkcionalitu pre vlastn\u00edka produktu. Pou\u017e\u00edvate\u013esk\u00e9 pr\u00edbehy s\u00fa zatrieden\u00e9 do jednotliv\u00fdch features a epicov. N\u00e1stroj n\u00e1m z\u00e1rove\u0148 pom\u00e1ha sledova\u0165, ktor\u00e9 \u00falohy m\u00e1me spravi\u0165 v danom \u0161printe, aj to v akom stave sa pr\u00e1ve nach\u00e1dzaj\u00fa. Metodika riadenia \u00faloh Ako popisova\u0165 polo\u017eky v Azure DevOps","title":"Mana\u017ement riadenia \u00faloh"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_verziovania_kodu/","text":"Mana\u017ement verziovania k\u00f3du \u00b6 Pri v\u00fdvoji je pou\u017e\u00edvan\u00fd verziovac\u00ed syst\u00e9m git a projekt je ulo\u017een\u00fd vo vzdialenom repozit\u00e1ri na GitLab-e. N\u00e1s t\u00edm vyu\u017e\u00edva u\u017e existuj\u00faci sp\u00f4sob verziovania zvan\u00fd Git WorkFlow. Ten je bli\u017e\u0161ie op\u00edsan\u00fd v metodike na verziovanie k\u00f3du a pr\u00e1cu s gitom, ktor\u00e1 sa nach\u00e1dza \u010falej v tomto dokumente. V tejto metodike s\u00fa tie\u017e pop\u00edsan\u00e9 jednotliv\u00e9 typy vetiev, ktor\u00e9 pou\u017e\u00edvame, ale aj to ako ich pomen\u00fava\u0165 a p\u00edsa\u0165 commit spr\u00e1vy. Ako verziova\u0165 k\u00f3d a pracova\u0165 s gitom","title":"Mana\u017ement verziovania k\u00f3du"},{"location":"dokumentacia_k_riadeniu/aplikacie_manazmentov/manazment_verziovania_kodu/#mana\u017ement-verziovania-k\u00f3du","text":"Pri v\u00fdvoji je pou\u017e\u00edvan\u00fd verziovac\u00ed syst\u00e9m git a projekt je ulo\u017een\u00fd vo vzdialenom repozit\u00e1ri na GitLab-e. N\u00e1s t\u00edm vyu\u017e\u00edva u\u017e existuj\u00faci sp\u00f4sob verziovania zvan\u00fd Git WorkFlow. Ten je bli\u017e\u0161ie op\u00edsan\u00fd v metodike na verziovanie k\u00f3du a pr\u00e1cu s gitom, ktor\u00e1 sa nach\u00e1dza \u010falej v tomto dokumente. V tejto metodike s\u00fa tie\u017e pop\u00edsan\u00e9 jednotliv\u00e9 typy vetiev, ktor\u00e9 pou\u017e\u00edvame, ale aj to ako ich pomen\u00fava\u0165 a p\u00edsa\u0165 commit spr\u00e1vy. Ako verziova\u0165 k\u00f3d a pracova\u0165 s gitom","title":"Mana\u017ement verziovania k\u00f3du"},{"location":"dokumentacia_k_riadeniu/globalna_retrospektiva/letny_semester/","text":"\u2600\ufe0f Letn\u00fd semester \u00b6 Po\u010das letn\u00e9ho semestra do\u0161lo v na\u0161om t\u00edme k v\u00fdrazn\u00fdm zlep\u0161eniam. Podarilo sa n\u00e1m aspo\u0148 do nejakej miery dosta\u0165 do projektu a v\u0161etci sme sa za\u010dali akt\u00edvne zap\u00e1ja\u0165. Ve\u013emi n\u00e1m pomohlo, \u017ee sme za\u010dali pracova\u0165 a radi\u0165 sa v men\u0161\u00edch skupink\u00e1ch alebo dvojiciach. V\u010faka online stretnutiam sa n\u00e1m podarilo zefekt\u00edvni\u0165 komunik\u00e1ciu a n\u00e1sledne sme vedeli pokra\u010dova\u0165 v pr\u00e1ci samostatne. Taktie\u017e sme za\u010dali na\u0161e \u00falohy rie\u0161i\u0165 sk\u00f4r a priebe\u017ene, pr\u00e1ce na projekte teda st\u00e1le postupovali. Menej sme rie\u0161ili administrat\u00edvnu str\u00e1nku projektu a s\u00fastredili sme sa na funkcionalitu. Mierne sa zlep\u0161ila aj pr\u00e1ca s TFS. Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie V\u010das zapisova\u0165 \u00falohy do TFS Viac komunik\u00e1cie a spolupr\u00e1ce Vyu\u017e\u00edva\u0165 na komunik\u00e1ciu Facebook Nereagova\u0165 na spr\u00e1vy na Facebooku a sna\u017ei\u0165 sa presun\u00fa\u0165 konverz\u00e1ciu na Teams Priebe\u017ene aktualizova\u0165 \u00falohy v TFS Krat\u0161ie stretnutia - lep\u0161ia efektivita Rie\u0161i\u0165 individ\u00e1lne probl\u00e9my na spolo\u010dnom calle Napl\u00e1nova\u0165 si stretnutie dopredu a vyrie\u0161i\u0165 najprv v\u0161etky spolo\u010dn\u00e9 veci Zjednodu\u0161enie metodiky na pr\u00e1cu s gitom Priebe\u017en\u00e1 pr\u00e1ca Neprimerane dlh\u00e9 standupy Stru\u010dne poveda\u0165 \u010do som spravil a v\u0161etko ostatn\u00e9 rie\u0161i\u0165 individu\u00e1lne Pou\u017e\u00edva\u0165 na komunik\u00e1ciu kan\u00e1ly v Teams Skor\u0161ie pr\u00edchody na stretnutia Pl\u00e1novanie taskov v men\u0161\u00edch skupink\u00e1ch","title":"\u2600\ufe0f Letn\u00fd semester"},{"location":"dokumentacia_k_riadeniu/globalna_retrospektiva/letny_semester/#-letn\u00fd-semester","text":"Po\u010das letn\u00e9ho semestra do\u0161lo v na\u0161om t\u00edme k v\u00fdrazn\u00fdm zlep\u0161eniam. Podarilo sa n\u00e1m aspo\u0148 do nejakej miery dosta\u0165 do projektu a v\u0161etci sme sa za\u010dali akt\u00edvne zap\u00e1ja\u0165. Ve\u013emi n\u00e1m pomohlo, \u017ee sme za\u010dali pracova\u0165 a radi\u0165 sa v men\u0161\u00edch skupink\u00e1ch alebo dvojiciach. V\u010faka online stretnutiam sa n\u00e1m podarilo zefekt\u00edvni\u0165 komunik\u00e1ciu a n\u00e1sledne sme vedeli pokra\u010dova\u0165 v pr\u00e1ci samostatne. Taktie\u017e sme za\u010dali na\u0161e \u00falohy rie\u0161i\u0165 sk\u00f4r a priebe\u017ene, pr\u00e1ce na projekte teda st\u00e1le postupovali. Menej sme rie\u0161ili administrat\u00edvnu str\u00e1nku projektu a s\u00fastredili sme sa na funkcionalitu. Mierne sa zlep\u0161ila aj pr\u00e1ca s TFS. Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie V\u010das zapisova\u0165 \u00falohy do TFS Viac komunik\u00e1cie a spolupr\u00e1ce Vyu\u017e\u00edva\u0165 na komunik\u00e1ciu Facebook Nereagova\u0165 na spr\u00e1vy na Facebooku a sna\u017ei\u0165 sa presun\u00fa\u0165 konverz\u00e1ciu na Teams Priebe\u017ene aktualizova\u0165 \u00falohy v TFS Krat\u0161ie stretnutia - lep\u0161ia efektivita Rie\u0161i\u0165 individ\u00e1lne probl\u00e9my na spolo\u010dnom calle Napl\u00e1nova\u0165 si stretnutie dopredu a vyrie\u0161i\u0165 najprv v\u0161etky spolo\u010dn\u00e9 veci Zjednodu\u0161enie metodiky na pr\u00e1cu s gitom Priebe\u017en\u00e1 pr\u00e1ca Neprimerane dlh\u00e9 standupy Stru\u010dne poveda\u0165 \u010do som spravil a v\u0161etko ostatn\u00e9 rie\u0161i\u0165 individu\u00e1lne Pou\u017e\u00edva\u0165 na komunik\u00e1ciu kan\u00e1ly v Teams Skor\u0161ie pr\u00edchody na stretnutia Pl\u00e1novanie taskov v men\u0161\u00edch skupink\u00e1ch","title":"\u2600\ufe0f Letn\u00fd semester"},{"location":"dokumentacia_k_riadeniu/globalna_retrospektiva/zimny_semester/","text":"\u2744\ufe0f Zimn\u00fd semester \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Lep\u0161ie komunikova\u0165 Dobr\u00e9 popisovanie polo\u017eiek v DevOps Neefekt\u00edvne stretnutia - ve\u013emi ve\u013ea diskusie a polemizovania, \u010dastokr\u00e1t o nie tak podstatn\u00fdch veciach V\u017edy zvoli\u0165 jedn\u00e9ho \u010dlena t\u00edmu, ktor\u00fd bude riadi\u0165 diskusiu a dohliada\u0165 na to, aby sa neplytvalo \u010dasom V\u010das si rozdeli\u0165 user story na tasky a aj si ich hne\u010f ohodnoti\u0165 Spolupr\u00e1ca viacer\u00fdch na jednej user story \u010castokr\u00e1t \u013eudia nevedeli kedy m\u00e1me stretnutie a boli z toho zm\u00e4ten\u00ed Vytvorenie udalosti v kalend\u00e1ri a rozposlanie pozv\u00e1nok v\u0161etk\u00fdm ostan\u00fdm, aby mal ka\u017ed\u00fd preh\u013ead Viac implementova\u0165 Zodpovedn\u00e9 pristupovanie k \u00faloh\u00e1m a snaha ich dokon\u010di\u0165, aj ke\u010f nie je \u010das Prokrastin\u00e1cia na stretnutiach Vysk\u00fa\u0161a\u0165 techniku pomodoro a zavies\u0165 tresty za prokrastin\u00e1ciu a odmeny za produktivitu Venova\u0165 viac \u010dasu retrospekt\u00edvam M\u00e1lo pridanej funkcionality Dodato\u010dn\u00fd pr\u00e1zdninov\u00fd \u0161print Priebe\u017en\u00e1 pr\u00e1ca na v\u00fdstupnej dokument\u00e1cii","title":"\u2744\ufe0f Zimn\u00fd semester"},{"location":"dokumentacia_k_riadeniu/globalna_retrospektiva/zimny_semester/#-zimn\u00fd-semester","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Lep\u0161ie komunikova\u0165 Dobr\u00e9 popisovanie polo\u017eiek v DevOps Neefekt\u00edvne stretnutia - ve\u013emi ve\u013ea diskusie a polemizovania, \u010dastokr\u00e1t o nie tak podstatn\u00fdch veciach V\u017edy zvoli\u0165 jedn\u00e9ho \u010dlena t\u00edmu, ktor\u00fd bude riadi\u0165 diskusiu a dohliada\u0165 na to, aby sa neplytvalo \u010dasom V\u010das si rozdeli\u0165 user story na tasky a aj si ich hne\u010f ohodnoti\u0165 Spolupr\u00e1ca viacer\u00fdch na jednej user story \u010castokr\u00e1t \u013eudia nevedeli kedy m\u00e1me stretnutie a boli z toho zm\u00e4ten\u00ed Vytvorenie udalosti v kalend\u00e1ri a rozposlanie pozv\u00e1nok v\u0161etk\u00fdm ostan\u00fdm, aby mal ka\u017ed\u00fd preh\u013ead Viac implementova\u0165 Zodpovedn\u00e9 pristupovanie k \u00faloh\u00e1m a snaha ich dokon\u010di\u0165, aj ke\u010f nie je \u010das Prokrastin\u00e1cia na stretnutiach Vysk\u00fa\u0161a\u0165 techniku pomodoro a zavies\u0165 tresty za prokrastin\u00e1ciu a odmeny za produktivitu Venova\u0165 viac \u010dasu retrospekt\u00edvam M\u00e1lo pridanej funkcionality Dodato\u010dn\u00fd pr\u00e1zdninov\u00fd \u0161print Priebe\u017en\u00e1 pr\u00e1ca na v\u00fdstupnej dokument\u00e1cii","title":"\u2744\ufe0f Zimn\u00fd semester"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/","text":"Ako komunikova\u0165 v t\u00edme \u00b6 Na intern\u00fa komunik\u00e1ciu v t\u00edme a s ved\u00facim t\u00edmu pou\u017e\u00edvame n\u00e1stroj Microsoft Teams. N\u00e1stroj umo\u017e\u0148uje rozdeli\u0165 t\u00e9my komunik\u00e1cie na pr\u00edslu\u0161n\u00e9 kan\u00e1ly. N\u00e1stroj poskytuje dobr\u00e9 vyh\u013ead\u00e1vanie v hist\u00f3rii a taktie\u017e integritu in\u00fdch n\u00e1strojov. N\u00e1stroj n\u00e1m z\u00e1rove\u0148 sl\u00fa\u017ei ako \u00falo\u017eisko pre z\u00e1pisky zo stretnut\u00ed a in\u00e9 podporn\u00e9 dokumenty pre na\u0161u intern\u00fa organiz\u00e1ciu. Kan\u00e1ly \u00b6 General Dokument\u00e1cia Kompil\u00e1cia T\u00edmov\u00fd plag\u00e1t Webstr\u00e1nka News Osobn\u00e9 info o \u010dlenoch Other Random Okrem vy\u0161\u0161ie definovan\u00fdch kan\u00e1lov vyu\u017e\u00edvame aj chat, ktor\u00fd sl\u00fa\u017ei na neform\u00e1lnu komunik\u00e1ciu na r\u00f4zne t\u00e9my (napr. kedy ideme na obed). E-Mailov\u00e1 komunik\u00e1cia \u00b6 Ako t\u00edm m\u00e1me vytvoren\u00fd e-mailov\u00fd alias, ktor\u00e9ho spr\u00e1vy s\u00fa presmerovan\u00e9 do na\u0161ich osobn\u00fdch e-mailov\u00fdch schr\u00e1nok. Prostredn\u00edctvom e-mailu komunikujeme s tret\u00edmi stranami, ktor\u00e9 sa zapoja do procesu v\u00fdvoja projektu. Za pravideln\u00e9 sledovanie a odpovedanie na prijat\u00e9 spr\u00e1vy je zodpovedn\u00fd mana\u017e\u00e9r komunik\u00e1cie. E-Mailov\u00e1 adresa: fiit.tp.team3@gmail.com Pravidl\u00e1 komunik\u00e1cie v kan\u00e1loch \u00b6 Kan\u00e1l mus\u00ed ma\u0165 v\u00fdsti\u017en\u00fd n\u00e1zov \u010clen pr\u00edslu\u0161n\u00e9ho kan\u00e1la v \u0148om komunikuje v\u00fdhradne o t\u00e9me, na ktor\u00fa je kan\u00e1l ur\u010den\u00fd Pravidl\u00e1 komunik\u00e1cie na stretnutiach \u00b6 Na za\u010diatku stretnutia si sprav\u00edme StandUp Stretnutie v\u017edy niekto vedie/ur\u010duje smer komunik\u00e1cie (zvy\u010dajne toto rob\u00ed scrum master) Nepou\u017e\u00edvame notebooky, pokia\u013e to nie je potrebn\u00e9 v s\u00favislosti so stretnut\u00edm Neprekrikujeme sa Nerie\u0161ime veci, ktor\u00e9 nes\u00favisia s pr\u00e1cou na projekte","title":"Ako komunikova\u0165 v t\u00edme"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/#ako-komunikova\u0165-v-t\u00edme","text":"Na intern\u00fa komunik\u00e1ciu v t\u00edme a s ved\u00facim t\u00edmu pou\u017e\u00edvame n\u00e1stroj Microsoft Teams. N\u00e1stroj umo\u017e\u0148uje rozdeli\u0165 t\u00e9my komunik\u00e1cie na pr\u00edslu\u0161n\u00e9 kan\u00e1ly. N\u00e1stroj poskytuje dobr\u00e9 vyh\u013ead\u00e1vanie v hist\u00f3rii a taktie\u017e integritu in\u00fdch n\u00e1strojov. N\u00e1stroj n\u00e1m z\u00e1rove\u0148 sl\u00fa\u017ei ako \u00falo\u017eisko pre z\u00e1pisky zo stretnut\u00ed a in\u00e9 podporn\u00e9 dokumenty pre na\u0161u intern\u00fa organiz\u00e1ciu.","title":"Ako komunikova\u0165 v t\u00edme"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/#kan\u00e1ly","text":"General Dokument\u00e1cia Kompil\u00e1cia T\u00edmov\u00fd plag\u00e1t Webstr\u00e1nka News Osobn\u00e9 info o \u010dlenoch Other Random Okrem vy\u0161\u0161ie definovan\u00fdch kan\u00e1lov vyu\u017e\u00edvame aj chat, ktor\u00fd sl\u00fa\u017ei na neform\u00e1lnu komunik\u00e1ciu na r\u00f4zne t\u00e9my (napr. kedy ideme na obed).","title":"Kan\u00e1ly"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/#e-mailov\u00e1-komunik\u00e1cia","text":"Ako t\u00edm m\u00e1me vytvoren\u00fd e-mailov\u00fd alias, ktor\u00e9ho spr\u00e1vy s\u00fa presmerovan\u00e9 do na\u0161ich osobn\u00fdch e-mailov\u00fdch schr\u00e1nok. Prostredn\u00edctvom e-mailu komunikujeme s tret\u00edmi stranami, ktor\u00e9 sa zapoja do procesu v\u00fdvoja projektu. Za pravideln\u00e9 sledovanie a odpovedanie na prijat\u00e9 spr\u00e1vy je zodpovedn\u00fd mana\u017e\u00e9r komunik\u00e1cie. E-Mailov\u00e1 adresa: fiit.tp.team3@gmail.com","title":"E-Mailov\u00e1 komunik\u00e1cia"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/#pravidl\u00e1-komunik\u00e1cie-v-kan\u00e1loch","text":"Kan\u00e1l mus\u00ed ma\u0165 v\u00fdsti\u017en\u00fd n\u00e1zov \u010clen pr\u00edslu\u0161n\u00e9ho kan\u00e1la v \u0148om komunikuje v\u00fdhradne o t\u00e9me, na ktor\u00fa je kan\u00e1l ur\u010den\u00fd","title":"Pravidl\u00e1 komunik\u00e1cie v kan\u00e1loch"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_komunikovat_v_time/#pravidl\u00e1-komunik\u00e1cie-na-stretnutiach","text":"Na za\u010diatku stretnutia si sprav\u00edme StandUp Stretnutie v\u017edy niekto vedie/ur\u010duje smer komunik\u00e1cie (zvy\u010dajne toto rob\u00ed scrum master) Nepou\u017e\u00edvame notebooky, pokia\u013e to nie je potrebn\u00e9 v s\u00favislosti so stretnut\u00edm Neprekrikujeme sa Nerie\u0161ime veci, ktor\u00e9 nes\u00favisia s pr\u00e1cou na projekte","title":"Pravidl\u00e1 komunik\u00e1cie na stretnutiach"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/","text":"Ako logova\u0165 z k\u00f3du \u00b6 Aplik\u00e1cie, ktor\u00e9 boli nasaden\u00e9 do v\u00fdroby, sa musia monitorova\u0165. Jedn\u00fdm z najlep\u0161\u00edch sp\u00f4sobov, ako monitorova\u0165 spr\u00e1vanie aplik\u00e1ci\u00ed, je emitovanie, ukladanie a indexovanie logovac\u00edch d\u00e1t. Logy je mo\u017en\u00e9 posiela\u0165 do r\u00f4znych aplik\u00e1ci\u00ed na indexovanie, kde ich mo\u017eno vyh\u013eada\u0165 v pr\u00edpade probl\u00e9mov. Je potrebn\u00e9, aby ka\u017ed\u00fd log obsahoval inform\u00e1cie o tom, kde v k\u00f3de chyba nastala a kedy k nej do\u0161lo. Lua \u00b6 Zdrojov\u00e9 k\u00f3dy nap\u00edsan\u00e9 v jazyku Lua vyu\u017e\u00edvaj\u00fa na logovanie modul lualogging . V\u0161etky moduly, v ktor\u00fdch je logovanie pou\u017eit\u00e9 umo\u017e\u0148uje bu\u010f pou\u017eitie jednej, glob\u00e1lnej, in\u0161tance logovacieho modulu, alebo vytvorenie vlastnej in\u0161tancie. Pou\u017eitie glob\u00e1lnej in\u0161tancie u\u013eah\u010d\u00ed n\u00e1sledne logovanie v r\u00e1mci cel\u00e9ho projektu, nako\u013eko je mo\u017en\u00e9 zjednoti\u0165 konfigur\u00e1ciu. Deklar\u00e1cia \u00b6 Deklar\u00e1ciu je mo\u017en\u00e9 vidie\u0165 na uk\u00e1\u017eke zdrojov\u00e9ho k\u00f3du. local logger = _G.logger or logging.new(function(self, level, message) print(level, message) return true end) Umiestnenie \u00b6 In\u0161tancia logovacieho modulu sa spravidla nach\u00e1dza v submoduloch s n\u00e1zvom utils v repozit\u00e1roch jednotliv\u00fdch Lua modulov. Severity \u00b6 Logovac\u00ed modul umo\u017e\u0148uje nastavenie viacer\u00fdch \u00farovn\u00ed : DEBUG INFO WARN ERROR FATAL Pou\u017eitie \u00b6 Zalogova\u0165 udalos\u0165 je potom mo\u017en\u00e9 volan\u00edm funkcie v tvare logger:severity(\"message\") , teda napr. logger:error(\"server unreachable\") . Moduly pokryt\u00e9 logovan\u00edm \u00b6 Logovanie je implementovan\u00e9 v nasleduj\u00facich moduloch : Luadb Luametrics Luameg Luagit Luatree","title":"Ako logova\u0165 z k\u00f3du"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#ako-logova\u0165-z-k\u00f3du","text":"Aplik\u00e1cie, ktor\u00e9 boli nasaden\u00e9 do v\u00fdroby, sa musia monitorova\u0165. Jedn\u00fdm z najlep\u0161\u00edch sp\u00f4sobov, ako monitorova\u0165 spr\u00e1vanie aplik\u00e1ci\u00ed, je emitovanie, ukladanie a indexovanie logovac\u00edch d\u00e1t. Logy je mo\u017en\u00e9 posiela\u0165 do r\u00f4znych aplik\u00e1ci\u00ed na indexovanie, kde ich mo\u017eno vyh\u013eada\u0165 v pr\u00edpade probl\u00e9mov. Je potrebn\u00e9, aby ka\u017ed\u00fd log obsahoval inform\u00e1cie o tom, kde v k\u00f3de chyba nastala a kedy k nej do\u0161lo.","title":"Ako logova\u0165 z k\u00f3du"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#lua","text":"Zdrojov\u00e9 k\u00f3dy nap\u00edsan\u00e9 v jazyku Lua vyu\u017e\u00edvaj\u00fa na logovanie modul lualogging . V\u0161etky moduly, v ktor\u00fdch je logovanie pou\u017eit\u00e9 umo\u017e\u0148uje bu\u010f pou\u017eitie jednej, glob\u00e1lnej, in\u0161tance logovacieho modulu, alebo vytvorenie vlastnej in\u0161tancie. Pou\u017eitie glob\u00e1lnej in\u0161tancie u\u013eah\u010d\u00ed n\u00e1sledne logovanie v r\u00e1mci cel\u00e9ho projektu, nako\u013eko je mo\u017en\u00e9 zjednoti\u0165 konfigur\u00e1ciu.","title":"Lua"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#deklar\u00e1cia","text":"Deklar\u00e1ciu je mo\u017en\u00e9 vidie\u0165 na uk\u00e1\u017eke zdrojov\u00e9ho k\u00f3du. local logger = _G.logger or logging.new(function(self, level, message) print(level, message) return true end)","title":"Deklar\u00e1cia"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#umiestnenie","text":"In\u0161tancia logovacieho modulu sa spravidla nach\u00e1dza v submoduloch s n\u00e1zvom utils v repozit\u00e1roch jednotliv\u00fdch Lua modulov.","title":"Umiestnenie"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#severity","text":"Logovac\u00ed modul umo\u017e\u0148uje nastavenie viacer\u00fdch \u00farovn\u00ed : DEBUG INFO WARN ERROR FATAL","title":"Severity"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#pou\u017eitie","text":"Zalogova\u0165 udalos\u0165 je potom mo\u017en\u00e9 volan\u00edm funkcie v tvare logger:severity(\"message\") , teda napr. logger:error(\"server unreachable\") .","title":"Pou\u017eitie"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_logovat_z_kodu/#moduly-pokryt\u00e9-logovan\u00edm","text":"Logovanie je implementovan\u00e9 v nasleduj\u00facich moduloch : Luadb Luametrics Luameg Luagit Luatree","title":"Moduly pokryt\u00e9 logovan\u00edm"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_dokumentaciu/","text":"Ako p\u00edsa\u0165 dokument\u00e1ciu \u00b6 Dokument\u00e1ciu p\u00ed\u0161eme v markdowne na gitlabe v repozit\u00e1ri Dokument\u00e1cia https://gitlab.com/FIIT/3DSoftVis_Remake/documentation . Cel\u00e1 dokument\u00e1cia sa del\u00ed na dve \u010dasti: Dokument\u00e1cia k produktu - zachyt\u00e1va architekt\u00faru cel\u00e9ho syst\u00e9mu, opisuje jeho funkcionalitu a obsahuje tie\u017e dokument\u00e1ciu zo zdrojov\u00fdch k\u00f3dov Dokument\u00e1cia k riadeniu - dokumentuje procesy riadenia v projekte a jednotliv\u00e9 metodiky Vygenerovan\u00e1 dokument\u00e1cia sa nach\u00e1dza na na\u0161ej str\u00e1nke https://team03-20.studenti.fiit.stuba.sk/home.html . Dokument\u00e1cia k produktu \u00b6 Architekt\u00fara syst\u00e9mu T\u00e1to \u010das\u0165 dokument\u00e1cie obsahuje ucelen\u00fd poh\u013ead na syst\u00e9m zhora. Zachyt\u00e1va jednotliv\u00e9 moduly syst\u00e9mu ich prepojenie. Opisuje tie\u017e funkcionalitu modulov. Pre t\u00fato \u010das\u0165 je zvl\u00e1s\u0165 vhodn\u00e9 pou\u017eitie diagramov na lep\u0161ie zachytenie architekt\u00fary syst\u00e9mu. T\u00e1to \u010das\u0165 dokument\u00e1cie by tie\u017e mala zachyt\u00e1va\u0165 komunik\u00e1ciu medzi jednotliv\u00fdmi modulmi (najlep\u0161ie formou diagramu). T\u00fato \u010das\u0165 je potrebn\u00e9 e\u0161te len doplni\u0165. Infra\u0161trukt\u00fara \u010cas\u0165 o infra\u0161trukt\u00fare sl\u00fa\u017ei na opis v\u0161etk\u00fdch podporn\u00fdch n\u00e1strojov pre spr\u00e1vu a nasadenie syst\u00e9mu. Obsahuje tri z\u00e1kladn\u00e9 \u010dasti: build syst\u00e9mu, CI/CD a testy. Build syst\u00e9m popisuje sp\u00f4sob buildovania pre moduly v projekte. \u010cas\u0165 Gitlab CI/CD obsahuje pou\u017eit\u00e9 pipelines. Pre ka\u017ed\u00fd modul je potrebn\u00e9 pop\u00edsa\u0165, ak\u00e9 etapy pipeline obsahuje, na \u010do sl\u00fa\u017eia a ak\u00e9 artefakty produkuj\u00fa. Dokument\u00e1cia k testom obsahuje z\u00e1kladn\u00e9 inform\u00e1cie pre p\u00edsanie a pou\u017e\u00edvanie testov. M\u00e1 opisova\u0165 ak\u00e9 typy testov s\u00fa v projekte pou\u017eit\u00e9, ako ich spusti\u0165 a kedy je vhodn\u00e9 ich pou\u017ei\u0165. Ka\u017ed\u00fd test case by mal obsahova\u0165 kr\u00e1tky popis, na \u010do sl\u00fa\u017ei. Tento popis sa p\u00ed\u0161e priamo do zdrojov\u00fdch k\u00f3dov. Funkcionalita syst\u00e9mu T\u00e1to \u010das\u0165 sa nepozer\u00e1 na syst\u00e9m z poh\u013eadu architekt\u00fary ale z poh\u013eadu funkcionality. T\u00e1to \u010das\u0165 pritom nesl\u00fa\u017ei ako pr\u00edru\u010dka pre pou\u017e\u00edvate\u013ea, je to sk\u00f4r n\u00e1vod pre v\u00fdvoj\u00e1ra. Jeho \u00falohou je poskytn\u00fa\u0165 inform\u00e1ciu o nejakej \u010drte alebo funkcionalite z r\u00f4znych poh\u013eadov. Ako prv\u00e9 je potrebn\u00e9 vysvetli\u0165 \u00fa\u010del funkcionality. Je potrebn\u00e9 ju tie\u017e zachyti\u0165 z poh\u013eadu architekt\u00fary, ktor\u00e9 \u010dasti s\u00fa pre jej vykonanie potrebn\u00e9 a ako spolu komunikuj\u00fa. Je vhodn\u00e9 pop\u00edsa\u0165 aj niektor\u00e9 podstatn\u00e9 funkcie alebo prida\u0165 odkaz na testy. Na z\u00e1ver by mal nasledova\u0165 popis funkcionality z poh\u013eadu pou\u017e\u00edvate\u013ea, m\u00f4\u017ee obsahova\u0165 aj odkaz na pr\u00edslu\u0161n\u00fa \u010das\u0165 v pou\u017e\u00edvate\u013eskej pr\u00edru\u010dke. Predloha pre p\u00edsanie dokument\u00e1cie k funkcionalite syst\u00e9mu: predloha sa nach\u00e1dza v prie\u010dinku Sablony.exclude # N\u00e1zov modulu Popis modulu (high level poh\u013ead, na \u010do modul sl\u00fa\u017ei, ak\u00e1 je jeho funkcionalita, a pod.) ## Architekt\u00fara Zachyt\u00e1va \u010dasti syst\u00e9mu a triedy, v ktor\u00fdch je dan\u00e1 funkcionalita implementovan\u00e1. Je potrebn\u00e9 op\u00edsa\u0165 ak\u00e9 moduly a \u010dasti meddzi sebou komunikuj\u00fa. M\u00f4\u017eu by\u0165 pou\u017eit\u00e9 tie\u017e diagramy komunik\u00e1cie ak je to vhodn\u00e9. Pri niektor\u00fdch funkcionalit\u00e1ch je mo\u017en\u00e9 prida\u0165 aj stavov\u00fd diagram a pop\u00edsa\u0165 jednotliv\u00e9 stavy. ## Technick\u00e1 dokument\u00e1cia Vysvet\u013euje pou\u017eit\u00fa implement\u00e1ciu. M\u00f4\u017ee obsahova\u0165 zoznam pou\u017eit\u00fdch tried a funkci\u00ed. Podstatn\u00e9 funkcie alebo met\u00f3dy je vhodn\u00e9 bli\u017e\u0161ie pop\u00edsa\u0165. ## Testy Ak\u00e9 m\u00e1me pre tento modul testy, ak\u00e9 je pokrytie k\u00f3du testami. Je dobr\u00e9 prida\u0165 odkaz na testy. ## Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Stru\u010dn\u00fd popis pou\u017eitia funkcionality z poh\u013eadu pou\u017e\u00edvate\u013ea. Je vhodn\u00e9 pou\u017ei\u0165 odkaz na pr\u00edslu\u0161n\u00fa \u010das\u0165 pou\u017e\u00edvate\u013eskej pr\u00edru\u010dky. Pr\u00edru\u010dky Pod \u010das\u0165 dokument\u00e1cie pr\u00edru\u010dky spadaj\u00fa v\u0161etky n\u00e1vody a postupy, s ktor\u00fdmi sa m\u00f4\u017eeme pri v\u00fdvoji alebo alebo pou\u017e\u00edvan\u00ed syst\u00e9mu stretn\u00fa\u0165. Pr\u00edru\u010dky s\u00fa rozdelen\u00e9 na tri \u010dasti a in\u0161tala\u010dn\u00fa, v\u00fdvoj\u00e1rsku a pou\u017e\u00edvate\u013esk\u00fa. Ka\u017ed\u00e1 pr\u00edru\u010dka by mala obsahova\u0165 jasn\u00fd a podrobn\u00fd postup ako sa dosta\u0165 k cie\u013eu. Mala by tie\u017e vysvet\u013eova\u0165 menej zrejm\u00e9 kroky, pre\u010do ich treba vykona\u0165. Pri p\u00edsan\u00ed pr\u00edru\u010diek je d\u00f4le\u017eit\u00e9 pam\u00e4ta\u0165 na to, \u017ee \u010do sa teraz m\u00f4\u017ee zda\u0165 jasn\u00e9 a samozrejm\u00e9, nemus\u00ed tak\u00e9 by\u0165 aj v bud\u00facnosti alebo pre niekoho menej sk\u00fasen\u00e9ho. Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du T\u00e1to \u010das\u0165 obsahuje vygenerovan\u00fa dokument\u00e1ciu zo zdrojov\u00fdch k\u00f3dov. Generuje sa pomocou Gitlab CI , pre ka\u017ed\u00fd modul a vetvu zvl\u00e1\u0161\u0165. Pri komentovan\u00ed k\u00f3du je potrebn\u00e9 dodr\u017ea\u0165 nasleduj\u00face pravidl\u00e1. modul/package/namespace - popis na \u010do sl\u00fa\u017ei - API, zoznam verejn\u00fdch funkci\u00ed, ktor\u00e9 poskytuje aj so stru\u010dn\u00fdm popisom - zoznam intern\u00fdch funkci\u00ed aj so stru\u010dn\u00fdm popisom - zoznam tried, ktor\u00e9 obsahuje aj so stru\u010dn\u00fdm popisom (Pozn\u00e1mka: v jazyku Lua triedy neexistuj\u00fa, my sa v\u0161ak v projekte tv\u00e1rime, \u017ee \u00e1no. Vyu\u017e\u00edvame na to funcie vracaj\u00face objekt.) trieda popis \u010do rob\u00ed a na \u010do sl\u00fa\u017ei zoznam atrib\u00fatov zoznam met\u00f3d popis jednotliv\u00fdch atrib\u00fatov, ich \u00fa\u010del popis jednotliv\u00fdch met\u00f3d, \u010do robia parametre met\u00f3dy + stru\u010dn\u00fd opis n\u00e1vratov\u00e1 hodnota met\u00f3dy + stru\u010dn\u00fd opis vo vn\u00fatri met\u00f3dy je vhodn\u00e9 prida\u0165 koment\u00e1r ku ka\u017edej ucelenej \u010dasti k\u00f3du, aby bolo mo\u017en\u00e9 r\u00fdchlo zisti\u0165, \u010do funkcia alebo met\u00f3da interne rob\u00ed Dobre zdokumentovan\u00e1 uk\u00e1\u017eka package-u v jazyku Lua. Vhodn\u00e1 na in\u0161pir\u00e1ciu je tie\u017e dokument\u00e1cia Qt, ktor\u00fa najdete tu . Pomocn\u00e9 dokumenty pri p\u00edsan\u00ed k\u00f3du: 1. Konvencie p\u00edsania k\u00f3du 2. Ako logova\u0165 z k\u00f3du \u010cast\u00e9 probl\u00e9my \u010cas\u0165 \u010dast\u00e9 probl\u00e9my obsahuje \u010dasto sa vyskytuj\u00face probl\u00e9my pri v\u00fdvoji syst\u00e9mu. Tieto probl\u00e9my sa m\u00f4\u017eu t\u00fdka\u0165 r\u00f4znych oblast\u00ed. Podstatn\u00e9 je zap\u00edsa\u0165 ku ka\u017ed\u00e9mu probl\u00e9mu sp\u00f4sob alebo postup jeho odstr\u00e1nenia. T\u00e1to \u010das\u0165 sl\u00fa\u017ei na predch\u00e1dzanie rie\u0161enia t\u00fdch ist\u00fdch probl\u00e9mov zas a znova. Pri vkladan\u00ed uk\u00e1\u017eok k\u00f3du do dokument\u00e1cie je nutn\u00e9, pokia\u013e je to mo\u017en\u00e9, vklada\u0165 ich dynamicky a to pomocou makra code_snippets, ktor\u00e9 je pop\u00edsan\u00e9 v \u010dasti MkDocs . Pre ka\u017ed\u00fa nov\u00fa \u010das\u0165 dokument\u00e1cie je v\u017edy potrebn\u00e9 nap\u00edsa\u0165 \u00favod, ktor\u00fd pod\u00e1 \u010ditate\u013eovi z\u00e1kladn\u00e9 vysvetlenie konceptu alebo funkcionality, ktorej opis bude nasledova\u0165. Riadky by mali by\u0165 maxim\u00e1lne 80-120 znakov dlh\u00e9, aby sa \u013eah\u0161ie h\u013eadali zmeny v Gite. U\u017eito\u010dn\u00e9 tipy a triky m\u00f4\u017eete n\u00e1js\u0165 na https://www.mkdocs.org .","title":"Ako p\u00edsa\u0165 dokument\u00e1ciu"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_dokumentaciu/#ako-p\u00edsa\u0165-dokument\u00e1ciu","text":"Dokument\u00e1ciu p\u00ed\u0161eme v markdowne na gitlabe v repozit\u00e1ri Dokument\u00e1cia https://gitlab.com/FIIT/3DSoftVis_Remake/documentation . Cel\u00e1 dokument\u00e1cia sa del\u00ed na dve \u010dasti: Dokument\u00e1cia k produktu - zachyt\u00e1va architekt\u00faru cel\u00e9ho syst\u00e9mu, opisuje jeho funkcionalitu a obsahuje tie\u017e dokument\u00e1ciu zo zdrojov\u00fdch k\u00f3dov Dokument\u00e1cia k riadeniu - dokumentuje procesy riadenia v projekte a jednotliv\u00e9 metodiky Vygenerovan\u00e1 dokument\u00e1cia sa nach\u00e1dza na na\u0161ej str\u00e1nke https://team03-20.studenti.fiit.stuba.sk/home.html .","title":"Ako p\u00edsa\u0165 dokument\u00e1ciu"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_dokumentaciu/#dokument\u00e1cia-k-produktu","text":"Architekt\u00fara syst\u00e9mu T\u00e1to \u010das\u0165 dokument\u00e1cie obsahuje ucelen\u00fd poh\u013ead na syst\u00e9m zhora. Zachyt\u00e1va jednotliv\u00e9 moduly syst\u00e9mu ich prepojenie. Opisuje tie\u017e funkcionalitu modulov. Pre t\u00fato \u010das\u0165 je zvl\u00e1s\u0165 vhodn\u00e9 pou\u017eitie diagramov na lep\u0161ie zachytenie architekt\u00fary syst\u00e9mu. T\u00e1to \u010das\u0165 dokument\u00e1cie by tie\u017e mala zachyt\u00e1va\u0165 komunik\u00e1ciu medzi jednotliv\u00fdmi modulmi (najlep\u0161ie formou diagramu). T\u00fato \u010das\u0165 je potrebn\u00e9 e\u0161te len doplni\u0165. Infra\u0161trukt\u00fara \u010cas\u0165 o infra\u0161trukt\u00fare sl\u00fa\u017ei na opis v\u0161etk\u00fdch podporn\u00fdch n\u00e1strojov pre spr\u00e1vu a nasadenie syst\u00e9mu. Obsahuje tri z\u00e1kladn\u00e9 \u010dasti: build syst\u00e9mu, CI/CD a testy. Build syst\u00e9m popisuje sp\u00f4sob buildovania pre moduly v projekte. \u010cas\u0165 Gitlab CI/CD obsahuje pou\u017eit\u00e9 pipelines. Pre ka\u017ed\u00fd modul je potrebn\u00e9 pop\u00edsa\u0165, ak\u00e9 etapy pipeline obsahuje, na \u010do sl\u00fa\u017eia a ak\u00e9 artefakty produkuj\u00fa. Dokument\u00e1cia k testom obsahuje z\u00e1kladn\u00e9 inform\u00e1cie pre p\u00edsanie a pou\u017e\u00edvanie testov. M\u00e1 opisova\u0165 ak\u00e9 typy testov s\u00fa v projekte pou\u017eit\u00e9, ako ich spusti\u0165 a kedy je vhodn\u00e9 ich pou\u017ei\u0165. Ka\u017ed\u00fd test case by mal obsahova\u0165 kr\u00e1tky popis, na \u010do sl\u00fa\u017ei. Tento popis sa p\u00ed\u0161e priamo do zdrojov\u00fdch k\u00f3dov. Funkcionalita syst\u00e9mu T\u00e1to \u010das\u0165 sa nepozer\u00e1 na syst\u00e9m z poh\u013eadu architekt\u00fary ale z poh\u013eadu funkcionality. T\u00e1to \u010das\u0165 pritom nesl\u00fa\u017ei ako pr\u00edru\u010dka pre pou\u017e\u00edvate\u013ea, je to sk\u00f4r n\u00e1vod pre v\u00fdvoj\u00e1ra. Jeho \u00falohou je poskytn\u00fa\u0165 inform\u00e1ciu o nejakej \u010drte alebo funkcionalite z r\u00f4znych poh\u013eadov. Ako prv\u00e9 je potrebn\u00e9 vysvetli\u0165 \u00fa\u010del funkcionality. Je potrebn\u00e9 ju tie\u017e zachyti\u0165 z poh\u013eadu architekt\u00fary, ktor\u00e9 \u010dasti s\u00fa pre jej vykonanie potrebn\u00e9 a ako spolu komunikuj\u00fa. Je vhodn\u00e9 pop\u00edsa\u0165 aj niektor\u00e9 podstatn\u00e9 funkcie alebo prida\u0165 odkaz na testy. Na z\u00e1ver by mal nasledova\u0165 popis funkcionality z poh\u013eadu pou\u017e\u00edvate\u013ea, m\u00f4\u017ee obsahova\u0165 aj odkaz na pr\u00edslu\u0161n\u00fa \u010das\u0165 v pou\u017e\u00edvate\u013eskej pr\u00edru\u010dke. Predloha pre p\u00edsanie dokument\u00e1cie k funkcionalite syst\u00e9mu: predloha sa nach\u00e1dza v prie\u010dinku Sablony.exclude # N\u00e1zov modulu Popis modulu (high level poh\u013ead, na \u010do modul sl\u00fa\u017ei, ak\u00e1 je jeho funkcionalita, a pod.) ## Architekt\u00fara Zachyt\u00e1va \u010dasti syst\u00e9mu a triedy, v ktor\u00fdch je dan\u00e1 funkcionalita implementovan\u00e1. Je potrebn\u00e9 op\u00edsa\u0165 ak\u00e9 moduly a \u010dasti meddzi sebou komunikuj\u00fa. M\u00f4\u017eu by\u0165 pou\u017eit\u00e9 tie\u017e diagramy komunik\u00e1cie ak je to vhodn\u00e9. Pri niektor\u00fdch funkcionalit\u00e1ch je mo\u017en\u00e9 prida\u0165 aj stavov\u00fd diagram a pop\u00edsa\u0165 jednotliv\u00e9 stavy. ## Technick\u00e1 dokument\u00e1cia Vysvet\u013euje pou\u017eit\u00fa implement\u00e1ciu. M\u00f4\u017ee obsahova\u0165 zoznam pou\u017eit\u00fdch tried a funkci\u00ed. Podstatn\u00e9 funkcie alebo met\u00f3dy je vhodn\u00e9 bli\u017e\u0161ie pop\u00edsa\u0165. ## Testy Ak\u00e9 m\u00e1me pre tento modul testy, ak\u00e9 je pokrytie k\u00f3du testami. Je dobr\u00e9 prida\u0165 odkaz na testy. ## Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Stru\u010dn\u00fd popis pou\u017eitia funkcionality z poh\u013eadu pou\u017e\u00edvate\u013ea. Je vhodn\u00e9 pou\u017ei\u0165 odkaz na pr\u00edslu\u0161n\u00fa \u010das\u0165 pou\u017e\u00edvate\u013eskej pr\u00edru\u010dky. Pr\u00edru\u010dky Pod \u010das\u0165 dokument\u00e1cie pr\u00edru\u010dky spadaj\u00fa v\u0161etky n\u00e1vody a postupy, s ktor\u00fdmi sa m\u00f4\u017eeme pri v\u00fdvoji alebo alebo pou\u017e\u00edvan\u00ed syst\u00e9mu stretn\u00fa\u0165. Pr\u00edru\u010dky s\u00fa rozdelen\u00e9 na tri \u010dasti a in\u0161tala\u010dn\u00fa, v\u00fdvoj\u00e1rsku a pou\u017e\u00edvate\u013esk\u00fa. Ka\u017ed\u00e1 pr\u00edru\u010dka by mala obsahova\u0165 jasn\u00fd a podrobn\u00fd postup ako sa dosta\u0165 k cie\u013eu. Mala by tie\u017e vysvet\u013eova\u0165 menej zrejm\u00e9 kroky, pre\u010do ich treba vykona\u0165. Pri p\u00edsan\u00ed pr\u00edru\u010diek je d\u00f4le\u017eit\u00e9 pam\u00e4ta\u0165 na to, \u017ee \u010do sa teraz m\u00f4\u017ee zda\u0165 jasn\u00e9 a samozrejm\u00e9, nemus\u00ed tak\u00e9 by\u0165 aj v bud\u00facnosti alebo pre niekoho menej sk\u00fasen\u00e9ho. Dokument\u00e1cia k zdrojov\u00e9mu k\u00f3du T\u00e1to \u010das\u0165 obsahuje vygenerovan\u00fa dokument\u00e1ciu zo zdrojov\u00fdch k\u00f3dov. Generuje sa pomocou Gitlab CI , pre ka\u017ed\u00fd modul a vetvu zvl\u00e1\u0161\u0165. Pri komentovan\u00ed k\u00f3du je potrebn\u00e9 dodr\u017ea\u0165 nasleduj\u00face pravidl\u00e1. modul/package/namespace - popis na \u010do sl\u00fa\u017ei - API, zoznam verejn\u00fdch funkci\u00ed, ktor\u00e9 poskytuje aj so stru\u010dn\u00fdm popisom - zoznam intern\u00fdch funkci\u00ed aj so stru\u010dn\u00fdm popisom - zoznam tried, ktor\u00e9 obsahuje aj so stru\u010dn\u00fdm popisom (Pozn\u00e1mka: v jazyku Lua triedy neexistuj\u00fa, my sa v\u0161ak v projekte tv\u00e1rime, \u017ee \u00e1no. Vyu\u017e\u00edvame na to funcie vracaj\u00face objekt.) trieda popis \u010do rob\u00ed a na \u010do sl\u00fa\u017ei zoznam atrib\u00fatov zoznam met\u00f3d popis jednotliv\u00fdch atrib\u00fatov, ich \u00fa\u010del popis jednotliv\u00fdch met\u00f3d, \u010do robia parametre met\u00f3dy + stru\u010dn\u00fd opis n\u00e1vratov\u00e1 hodnota met\u00f3dy + stru\u010dn\u00fd opis vo vn\u00fatri met\u00f3dy je vhodn\u00e9 prida\u0165 koment\u00e1r ku ka\u017edej ucelenej \u010dasti k\u00f3du, aby bolo mo\u017en\u00e9 r\u00fdchlo zisti\u0165, \u010do funkcia alebo met\u00f3da interne rob\u00ed Dobre zdokumentovan\u00e1 uk\u00e1\u017eka package-u v jazyku Lua. Vhodn\u00e1 na in\u0161pir\u00e1ciu je tie\u017e dokument\u00e1cia Qt, ktor\u00fa najdete tu . Pomocn\u00e9 dokumenty pri p\u00edsan\u00ed k\u00f3du: 1. Konvencie p\u00edsania k\u00f3du 2. Ako logova\u0165 z k\u00f3du \u010cast\u00e9 probl\u00e9my \u010cas\u0165 \u010dast\u00e9 probl\u00e9my obsahuje \u010dasto sa vyskytuj\u00face probl\u00e9my pri v\u00fdvoji syst\u00e9mu. Tieto probl\u00e9my sa m\u00f4\u017eu t\u00fdka\u0165 r\u00f4znych oblast\u00ed. Podstatn\u00e9 je zap\u00edsa\u0165 ku ka\u017ed\u00e9mu probl\u00e9mu sp\u00f4sob alebo postup jeho odstr\u00e1nenia. T\u00e1to \u010das\u0165 sl\u00fa\u017ei na predch\u00e1dzanie rie\u0161enia t\u00fdch ist\u00fdch probl\u00e9mov zas a znova. Pri vkladan\u00ed uk\u00e1\u017eok k\u00f3du do dokument\u00e1cie je nutn\u00e9, pokia\u013e je to mo\u017en\u00e9, vklada\u0165 ich dynamicky a to pomocou makra code_snippets, ktor\u00e9 je pop\u00edsan\u00e9 v \u010dasti MkDocs . Pre ka\u017ed\u00fa nov\u00fa \u010das\u0165 dokument\u00e1cie je v\u017edy potrebn\u00e9 nap\u00edsa\u0165 \u00favod, ktor\u00fd pod\u00e1 \u010ditate\u013eovi z\u00e1kladn\u00e9 vysvetlenie konceptu alebo funkcionality, ktorej opis bude nasledova\u0165. Riadky by mali by\u0165 maxim\u00e1lne 80-120 znakov dlh\u00e9, aby sa \u013eah\u0161ie h\u013eadali zmeny v Gite. U\u017eito\u010dn\u00e9 tipy a triky m\u00f4\u017eete n\u00e1js\u0165 na https://www.mkdocs.org .","title":"Dokument\u00e1cia k produktu"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/","text":"Ako p\u00edsa\u0165 testy \u00b6 Metodika testovania sa t\u00fdka v\u0161etk\u00fdch \u010dlenov t\u00edmu, pri\u010dom definuje sp\u00f4sob p\u00edsania a sp\u00fa\u0161\u0165ania testov. Nako\u013eko sa vy\u017eaduje otestovanie ka\u017edej logickej \u010dasti modulu, d\u00f4raz kladieme na testovanie hrani\u010dn\u00fdch pr\u00edpadov. Testy sa vyv\u00e1raj\u00fa program\u00e1torsk\u00e9, jednotkov\u00e9, ale aj integra\u010dn\u00e9, pri\u010dom musia pok\u00fdva\u0165 aj ur\u010dit\u00fa \u010das\u0165 funkcionality. Pravidl\u00e1 p\u00edsania testov \u00b6 Dodr\u017eiava\u0165 d\u013a\u017eku vykonania testu - aby bola \u010do najkrat\u0161ia hrani\u010dn\u00e9 pr\u00edpady otestovanie \u010do najviac mo\u017en\u00fdch scen\u00e1rov danej funkcionality P\u00edsanie testov by nemalo zabra\u0165 viac ako 40% \u010dasu v\u00fdvoja produktu. Program\u00e1tosk\u00e9 testy vykon\u00e1va in\u00fd program\u00e1tor, ako ten ktor\u00fd bol autorom zdrojov\u00e9ho k\u00f3du. Program je v tomto stupni kontrolovan\u00fd na \u00farovni zdrojov\u00e9ho k\u00f3du. Jednotkov\u00e9 testy by mali by\u0165 p\u00edsan\u00e9 tak, aby overovali pr\u00e1ve jednu funkcionalitu, akon\u00e1hle sa jednotkov\u00fd test sklad\u00e1 z viacer\u00fdch \u010dast\u00ed, ktor\u00e9 sa daj\u00fa dekomponova\u0165, je potrebn\u00e9 rozdeli\u0165 tieto \u010dasti do viacer\u00fdch jednotkov\u00fdch testov. Integra\u010dn\u00e9 testy bud\u00fa vykon\u00e1van\u00e9 vo v\u00e4\u010d\u0161ine pr\u00edpadov manu\u00e1lne. \u00dadr\u017eba testov \u00b6 Pri zmene logiky k\u00f3du sa m\u00f4\u017ee sta\u0165, \u017ee dan\u00e9 testy u\u017e viac nie s\u00fa aktu\u00e1lne a je potrebn\u00e9 ich upravi\u0165. V takom pr\u00edpade treba op\u00e4\u0165 zv\u00e1\u017ei\u0165, \u010di dan\u00e1 \u00faprava overuje dostato\u010dne ve\u013ea hrani\u010dn\u00fdch pr\u00edpadov, \u010di jeho d\u013a\u017eka vykonania po zmene nie je neprimerane ve\u013ek\u00e1 a \u010di testuje dostatok mo\u017en\u00fdch scen\u00e1rov danej funkcionality. Code coverage \u00b6 Code coverage je pokrytie k\u00f3du automatizovan\u00fdmi testami. Je vyjadren\u00fd v percent\u00e1ch a je mo\u017en\u00e9 mera\u0165 ho viacer\u00fdmi sp\u00f4sobmi. Vyu\u017e\u00edvame pr\u00edstup mera\u0165 code coverage prostredn\u00edctvom line coverage - pomer riadkov k\u00f3du, ktor\u00e9 sa vykonaj\u00fa po\u010das testovania ku po\u010dtu riadkov k\u00f3du, ktor\u00e9 sa po\u010das testovania nevykonaj\u00fa. Ka\u017ed\u00fd modul produktu by mal ma\u0165 minim\u00e1lne 50% code coverage a celkov\u00e9 pokrytie projektu by malo ma\u0165 aspo\u0148 75% code coverage. Zmazanie testu \u00b6 Pokia\u013e \u010das vykonania testu je neprimerane ve\u013ek\u00fd, alebo \u010das str\u00e1ven\u00fd \u00fadr\u017ebou testu je pr\u00edli\u0161 ve\u013ek\u00fd, je potrebn\u00e9 tento test zmaza\u0165 z d\u00f4vodu, aby nezdr\u017eoval v\u00fdvoj. P\u00edsanie testov a ich \u00fadr\u017eba nesmie by\u0165 nadraden\u00e1 samotn\u00e9mu v\u00fdvoju. Ak \u010das vykonania testu je pr\u00edli\u0161 ve\u013ek\u00fd, tak v\u00fdvoj\u00e1ri nemaj\u00fa z\u00e1ujem sp\u00fa\u0161\u0165a\u0165 automatizovan\u00e9 testy dostato\u010dne \u010dasto po\u010das v\u00fdvoja a tento pr\u00edstup je ne\u017eiaduci z d\u00f4vodu neskor\u00e9ho odhalenia ch\u00fdb.","title":"Ako p\u00edsa\u0165 testy"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/#ako-p\u00edsa\u0165-testy","text":"Metodika testovania sa t\u00fdka v\u0161etk\u00fdch \u010dlenov t\u00edmu, pri\u010dom definuje sp\u00f4sob p\u00edsania a sp\u00fa\u0161\u0165ania testov. Nako\u013eko sa vy\u017eaduje otestovanie ka\u017edej logickej \u010dasti modulu, d\u00f4raz kladieme na testovanie hrani\u010dn\u00fdch pr\u00edpadov. Testy sa vyv\u00e1raj\u00fa program\u00e1torsk\u00e9, jednotkov\u00e9, ale aj integra\u010dn\u00e9, pri\u010dom musia pok\u00fdva\u0165 aj ur\u010dit\u00fa \u010das\u0165 funkcionality.","title":"Ako p\u00edsa\u0165 testy"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/#pravidl\u00e1-p\u00edsania-testov","text":"Dodr\u017eiava\u0165 d\u013a\u017eku vykonania testu - aby bola \u010do najkrat\u0161ia hrani\u010dn\u00e9 pr\u00edpady otestovanie \u010do najviac mo\u017en\u00fdch scen\u00e1rov danej funkcionality P\u00edsanie testov by nemalo zabra\u0165 viac ako 40% \u010dasu v\u00fdvoja produktu. Program\u00e1tosk\u00e9 testy vykon\u00e1va in\u00fd program\u00e1tor, ako ten ktor\u00fd bol autorom zdrojov\u00e9ho k\u00f3du. Program je v tomto stupni kontrolovan\u00fd na \u00farovni zdrojov\u00e9ho k\u00f3du. Jednotkov\u00e9 testy by mali by\u0165 p\u00edsan\u00e9 tak, aby overovali pr\u00e1ve jednu funkcionalitu, akon\u00e1hle sa jednotkov\u00fd test sklad\u00e1 z viacer\u00fdch \u010dast\u00ed, ktor\u00e9 sa daj\u00fa dekomponova\u0165, je potrebn\u00e9 rozdeli\u0165 tieto \u010dasti do viacer\u00fdch jednotkov\u00fdch testov. Integra\u010dn\u00e9 testy bud\u00fa vykon\u00e1van\u00e9 vo v\u00e4\u010d\u0161ine pr\u00edpadov manu\u00e1lne.","title":"Pravidl\u00e1 p\u00edsania testov"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/#\u00fadr\u017eba-testov","text":"Pri zmene logiky k\u00f3du sa m\u00f4\u017ee sta\u0165, \u017ee dan\u00e9 testy u\u017e viac nie s\u00fa aktu\u00e1lne a je potrebn\u00e9 ich upravi\u0165. V takom pr\u00edpade treba op\u00e4\u0165 zv\u00e1\u017ei\u0165, \u010di dan\u00e1 \u00faprava overuje dostato\u010dne ve\u013ea hrani\u010dn\u00fdch pr\u00edpadov, \u010di jeho d\u013a\u017eka vykonania po zmene nie je neprimerane ve\u013ek\u00e1 a \u010di testuje dostatok mo\u017en\u00fdch scen\u00e1rov danej funkcionality.","title":"\u00dadr\u017eba testov"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/#code-coverage","text":"Code coverage je pokrytie k\u00f3du automatizovan\u00fdmi testami. Je vyjadren\u00fd v percent\u00e1ch a je mo\u017en\u00e9 mera\u0165 ho viacer\u00fdmi sp\u00f4sobmi. Vyu\u017e\u00edvame pr\u00edstup mera\u0165 code coverage prostredn\u00edctvom line coverage - pomer riadkov k\u00f3du, ktor\u00e9 sa vykonaj\u00fa po\u010das testovania ku po\u010dtu riadkov k\u00f3du, ktor\u00e9 sa po\u010das testovania nevykonaj\u00fa. Ka\u017ed\u00fd modul produktu by mal ma\u0165 minim\u00e1lne 50% code coverage a celkov\u00e9 pokrytie projektu by malo ma\u0165 aspo\u0148 75% code coverage.","title":"Code coverage"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_pisat_testy/#zmazanie-testu","text":"Pokia\u013e \u010das vykonania testu je neprimerane ve\u013ek\u00fd, alebo \u010das str\u00e1ven\u00fd \u00fadr\u017ebou testu je pr\u00edli\u0161 ve\u013ek\u00fd, je potrebn\u00e9 tento test zmaza\u0165 z d\u00f4vodu, aby nezdr\u017eoval v\u00fdvoj. P\u00edsanie testov a ich \u00fadr\u017eba nesmie by\u0165 nadraden\u00e1 samotn\u00e9mu v\u00fdvoju. Ak \u010das vykonania testu je pr\u00edli\u0161 ve\u013ek\u00fd, tak v\u00fdvoj\u00e1ri nemaj\u00fa z\u00e1ujem sp\u00fa\u0161\u0165a\u0165 automatizovan\u00e9 testy dostato\u010dne \u010dasto po\u010das v\u00fdvoja a tento pr\u00edstup je ne\u017eiaduci z d\u00f4vodu neskor\u00e9ho odhalenia ch\u00fdb.","title":"Zmazanie testu"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/","text":"Ako popisova\u0165 polo\u017eky v Azure DevOps \u00b6 BUG \u00b6 TITLE N\u00e1zov bug reportu mus\u00ed by\u0165 stru\u010dn\u00fd a jasn\u00fd (pointa probl\u00e9mu mus\u00ed by\u0165 obsiahnut\u00e1 v \u010do najmenej slov\u00e1ch a nesmie obsahova\u0165 in\u00e9 ne\u017e k\u013e\u00fa\u010dov\u00e9 inform\u00e1cie pre uvedenie \u010ditate\u013ea do kontextu) REPRO STEPS Cel\u00fd n\u00e1zov - steps to reproduce Mus\u00ed obsahova\u0165 kroky, ktor\u00e9 je nutn\u00e9 vykona\u0165, aby bolo mo\u017en\u00e9 bug zreprodukova\u0165 Kroky musia by\u0165 nap\u00edsan\u00e9 v porad\u00ed, v ktorom musia by\u0165 vykonan\u00e9 Kroky musia obsahova\u0165 do detailu \u00faplne v\u0161etky inform\u00e1cie, ktor\u00e9 s\u00fa potrebn\u00e9 k tomu, aby bolo mo\u017en\u00e9 probl\u00e9m zreprodukova\u0165 (ak sa v\u00e1m jav\u00ed nejak\u00e1 inform\u00e1cia ako samozrejmos\u0165, napriek tomu ju uve\u010fte - nikdy neviete, ak\u00e9 s\u00fa vedomosti osoby, ktor\u00e1 bude s va\u0161\u00edm bug reportom pracova\u0165) SYSTEM INFO Inform\u00e1cie o softv\u00e9ri a konfigur\u00e1cii syst\u00e9mu, ktor\u00e9 s\u00fa relevantn\u00e9 pre uskuto\u010dnenie testu. ACCEPTANCE CRITERIA Poskytnite krit\u00e9ri\u00e1, ktor\u00e9 je potrebn\u00e9 splni\u0165 sk\u00f4r, ako bude mo\u017en\u00e9 chybu alebo pr\u00edbeh pou\u017e\u00edvate\u013ea uzavrie\u0165. Pred za\u010diatkom pr\u00e1c op\u00ed\u0161te \u010do najjasnej\u0161ie akcepta\u010dn\u00e9 krit\u00e9ria z\u00e1kazn\u00edka. Akcepta\u010dn\u00e9 krit\u00e9ri\u00e1 sa m\u00f4\u017eu pou\u017ei\u0165 ako z\u00e1klad pre akcepta\u010dn\u00e9 testy, aby ste mohli efekt\u00edvnej\u0161ie vyhodnoti\u0165, \u010di bola polo\u017eka uspokojivo dokon\u010den\u00e1. FOUND IN BUILD Ke\u010f spr\u00e1vca testov vytvor\u00ed chyby, automaticky vypln\u00ed System info a found in build inform\u00e1ciami o softv\u00e9rovom prostred\u00ed a o tom, kde sa chyba vyskytla. Pre viac inform\u00e1ci\u00ed o definovan\u00ed softv\u00e9rov\u00fdch prostred\u00ed, nav\u0161t\u00edvte str\u00e1nku: https://docs.microsoft.com/en-us/azure/devops/test/test-different-configurations?view=azure-devops INTEGRATED IN BUILD Ke\u010f vyrie\u0161ite chybu, pou\u017eite Integrated in Build na ozna\u010denie n\u00e1zvu buildu, ktor\u00fd obsahuje k\u00f3d, ktor\u00fd opravuje chybu. PRIORITY Subjekt\u00edvne hodnotenie chyby, preto\u017ee sa t\u00fdka podnikania alebo po\u017eiadaviek z\u00e1kazn\u00edka. Priorita ozna\u010duje poradie, v ktorom by sa mali opravi\u0165 chyby k\u00f3du. Akceptovan\u00e9 hodnoty 1 : Produkt sa ned\u00e1 odosla\u0165 bez \u00faspe\u0161n\u00e9ho vyrie\u0161enia pracovn\u00e9ho predmetu a mal by sa rie\u0161i\u0165 \u010do najsk\u00f4r. 2 : Produkt sa ned\u00e1 odosla\u0165 bez \u00faspe\u0161n\u00e9ho vyrie\u0161enia predmetu pr\u00e1ce, nemus\u00ed sa v\u0161ak okam\u017eite rie\u0161i\u0165. 3 : Vyrie\u0161enie pracovnej polo\u017eky je volite\u013en\u00e9 na z\u00e1klade zdrojov, \u010dasu a rizika. SEVERITY Subjekt\u00edvne hodnotenie vplyvu chyby na projekt alebo softv\u00e9rov\u00fd syst\u00e9m. Napr\u00edklad: Ak kliknutie na vzdialen\u00fd odkaz (zriedkav\u00e1 udalos\u0165) sp\u00f4sob\u00ed zlyhanie aplik\u00e1cie alebo webovej str\u00e1nky (z\u00e1va\u017en\u00e1 sk\u00fasenos\u0165 so z\u00e1kazn\u00edkom), m\u00f4\u017eete ur\u010di\u0165 Z\u00e1va\u017enos\u0165 = 2 (vysok\u00e1) a Priorita = 3. Akceptovan\u00e9 hodnoty 1 - Kritick\u00e1 : Mus\u00ed sa opravi\u0165. Porucha, ktor\u00e1 sp\u00f4sobuje ukon\u010denie jedn\u00e9ho alebo viacer\u00fdch komponentov syst\u00e9mu alebo cel\u00e9ho syst\u00e9mu alebo sp\u00f4sobuje rozsiahle po\u0161kodenie \u00fadajov. Neexistuj\u00fa \u017eiadne prijate\u013en\u00e9 alternat\u00edvne met\u00f3dy na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov. 2 - Vysok\u00e1 : Zv\u00e1\u017ete opravu. Porucha, ktor\u00e1 sp\u00f4sobuje ukon\u010denie jedn\u00e9ho alebo viacer\u00fdch komponentov syst\u00e9mu alebo cel\u00e9ho syst\u00e9mu alebo sp\u00f4sobuje rozsiahle po\u0161kodenie \u00fadajov. Existuje v\u0161ak prijate\u013en\u00e1 alternat\u00edvna met\u00f3da na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov. 3 - Stredn\u00e1 : Porucha, ktor\u00e1 sp\u00f4sobuje, \u017ee syst\u00e9m poskytuje nespr\u00e1vne, ne\u00fapln\u00e9 alebo nekonzistentn\u00e9 v\u00fdsledky. 4 - N\u00edzka : Men\u0161\u00ed alebo kozmetick\u00fd defekt, ktor\u00fd m\u00e1 prijate\u013en\u00e9 rie\u0161enie na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov. EPIC \u00b6 DESCRIPTION Jasne a podrobne pop\u00ed\u0161te cie\u013e epicu. ACCEPTANCE CRITERIA Jasne definova\u0165, kedy je epic hotov\u00fd a v\u0161etko funguje presne tak, ako to bolo na za\u010diatku definovan\u00e9. STATUS start date : D\u00e1tum za\u010diatku pr\u00e1ce na epicu target date : D\u00e1tum, do ktor\u00e9ho sa m\u00e1 epic implementova\u0165. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia) EFFORT Poskytnite relat\u00edvny odhad mno\u017estva pr\u00e1ce potrebnej na dokon\u010denie epicu. Pou\u017eite ak\u00fako\u013evek \u010d\u00edseln\u00fa jednotku merania, na ktorej ste sa s t\u00edmom dohodli. BUSINESS VALUE Zadajte prioritu, ktor\u00e1 zachyt\u00e1va relat\u00edvnu hodnotu epicu v porovnan\u00ed s ostatn\u00fdmi polo\u017ekami rovnak\u00e9ho typu. \u010c\u00edm vy\u0161\u0161ie \u010d\u00edslo, t\u00fdm vy\u0161\u0161ia je hodnota podniku. Toto pole pou\u017eite, ak chcete zachyti\u0165 prioritu osobitne od menite\u013en\u00e9ho poradia nevybaven\u00fdch polo\u017eiek backlogu. TIME CRITICALITY Subjekt\u00edvna mern\u00e1 jednotka, ktor\u00e1 zachyt\u00e1va, ako sa biznis hodnota epicu v priebehu \u010dasu zni\u017euje. Vy\u0161\u0161ie hodnoty znamenaj\u00fa, \u017ee epic je zo svojej podstaty \u010dasovokritickej\u0161\u00ed ako polo\u017eky s ni\u017e\u0161\u00edmi hodnotami. VALUE AREA Oblas\u0165 hodnoty pre z\u00e1kazn\u00edka ur\u010den\u00e1 epicom. Zahrnut\u00e9 hodnoty Architectural : technick\u00e9 slu\u017eby na implement\u00e1ciu obchodn\u00fdch funkci\u00ed, ktor\u00e9 poskytuj\u00fa rie\u0161enie Business : slu\u017eby, ktor\u00e9 nap\u013a\u0148aj\u00fa potreby z\u00e1kazn\u00edkov alebo zainteresovan\u00fdch str\u00e1n a ktor\u00e9 priamo prin\u00e1\u0161aj\u00fa hodnotu pre z\u00e1kazn\u00edka na podporu podnikania FEATURE \u00b6 Rovnak\u00e1 \u0161trukt\u00fara a pravidl\u00e1 ako pri epicu (Vi\u010f popis epicu). IMPEDIMENT \u00b6 Impedimenty (prek\u00e1\u017eky) predstavuj\u00fa nepl\u00e1novan\u00e9 \u010dinnosti. Ich rie\u0161enie si vy\u017eaduje viac pr\u00e1ce nad r\u00e1mec toho, \u010do sa sleduje pod\u013ea skuto\u010dn\u00fdch po\u017eiadaviek. Pou\u017eitie typu pracovnej polo\u017eky impediment v\u00e1m pom\u00e1ha sledova\u0165 a spravova\u0165 tieto probl\u00e9my, a\u017e k\u00fdm ich nevyrie\u0161ite a nezatvor\u00edte. Impedimenty sa nezobrazuj\u00fa v backlogu. Namiesto toho je mo\u017en\u00e9 ich sledova\u0165 pou\u017eit\u00edm dopytov . DESCRIPTION Jasne a podrobne pop\u00ed\u0161te prek\u00e1\u017eku. RESOLUTION Jasne definova\u0165 okolnosti, za ak\u00fdch m\u00f4\u017ee by\u0165 dan\u00e1 prek\u00e1\u017eka pova\u017eovan\u00e1 za plne vyrie\u0161en\u00fa. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia) PRODUCT BACKLOG ITEM \u00b6 Rovnak\u00e1 \u0161trukt\u00fara a pravidl\u00e1 ako pri epicu (Vi\u010f popis epicu). TASK \u00b6 Do backlogu prid\u00e1vate tasky (\u00falohy), ke\u010f chcete sledova\u0165 pr\u00e1cu potrebn\u00fa na ich implement\u00e1ciu a odhadn\u00fa\u0165 pr\u00e1cu priraden\u00fa jednotliv\u00fdm \u010dlenom t\u00edmu a t\u00edmu ako celku. Ak chcete porovna\u0165 kapacitu so skuto\u010dne pl\u00e1novanou pr\u00e1cou, mus\u00edte pre ka\u017ed\u00fa nevybaven\u00fa polo\u017eku definova\u0165 a odhadn\u00fa\u0165 tasky. DESCRIPTION Jasne a podrobne pop\u00ed\u0161te \u00falohu. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia) REMAINING WORK Mno\u017estvo zost\u00e1vaj\u00facej pr\u00e1ce na dokon\u010denie \u00falohy. Postupom pr\u00e1ce aktualizujte toto pole. Pou\u017e\u00edva sa na v\u00fdpo\u010det kapacitn\u00fdch diagramov a grafu burzov\u00e9ho \u0161printu. M\u00f4\u017eete ur\u010di\u0165 pr\u00e1cu v akejko\u013evek meracej jednotke, ktor\u00fa si t\u00edm vyberie. BLOCKED V nastaven\u00ed scrum alebo agile je \u201eblokovan\u00fd\u201c stav pracovnej polo\u017eky, ktor\u00fa nem\u00f4\u017eete dokon\u010di\u0165 z d\u00f4vodu vonkaj\u0161\u00edch faktorov. Napr\u00edklad nem\u00f4\u017eete prida\u0165 funkciu, preto\u017ee \u010dak\u00e1te, a\u017e v\u00e1\u0161 spolupracovn\u00edk dokon\u010d\u00ed pull request, na ktor\u00fd nadv\u00e4zuje va\u0161a pr\u00e1ca. polo\u017eku m\u00f4\u017eete ozna\u010di\u0165 ako blokovan\u00fa v\u00fdberom mo\u017enosti Yes TEST CASE \u00b6 Vytvorte manu\u00e1lne testovacie pr\u00edpady a skontrolujte, \u010di ka\u017ed\u00fd z v\u00fdstupov vyhovuje potreb\u00e1m va\u0161ich pou\u017e\u00edvate\u013eov. Usporiadajte svoje testovacie pr\u00edpady tak, \u017ee ich prid\u00e1te do testovac\u00edch pl\u00e1nov a testovac\u00edch s\u00faborov. Vyberte pre dan\u00fa \u00falohu testerov. Nov\u00fd krok m\u00f4\u017eete prida\u0165 zvolen\u00edm mo\u017enosti Click or type here to add a step Pre ka\u017ed\u00fd krok zad\u00e1te: ACTION Presn\u00fd popis akcie, ktor\u00fa m\u00e1 tester vykona\u0165 EXPECTED RESULT Presn\u00fd popis v\u00fdsledku, ktor\u00fd by sa mal udia\u0165 za predpokladu, \u017ee v\u0161etko funguje, ako m\u00e1 Pre v\u0161etky polo\u017eky, pri ktor\u00fdch je t\u00e1to mo\u017enos\u0165 dostupn\u00e1, je potrebn\u00e9 priradi\u0165 nadraden\u00fa polo\u017eku (parent).","title":"Ako popisova\u0165 polo\u017eky v Azure DevOps"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#ako-popisova\u0165-polo\u017eky-v-azure-devops","text":"","title":"Ako popisova\u0165 polo\u017eky v Azure DevOps"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#bug","text":"TITLE N\u00e1zov bug reportu mus\u00ed by\u0165 stru\u010dn\u00fd a jasn\u00fd (pointa probl\u00e9mu mus\u00ed by\u0165 obsiahnut\u00e1 v \u010do najmenej slov\u00e1ch a nesmie obsahova\u0165 in\u00e9 ne\u017e k\u013e\u00fa\u010dov\u00e9 inform\u00e1cie pre uvedenie \u010ditate\u013ea do kontextu) REPRO STEPS Cel\u00fd n\u00e1zov - steps to reproduce Mus\u00ed obsahova\u0165 kroky, ktor\u00e9 je nutn\u00e9 vykona\u0165, aby bolo mo\u017en\u00e9 bug zreprodukova\u0165 Kroky musia by\u0165 nap\u00edsan\u00e9 v porad\u00ed, v ktorom musia by\u0165 vykonan\u00e9 Kroky musia obsahova\u0165 do detailu \u00faplne v\u0161etky inform\u00e1cie, ktor\u00e9 s\u00fa potrebn\u00e9 k tomu, aby bolo mo\u017en\u00e9 probl\u00e9m zreprodukova\u0165 (ak sa v\u00e1m jav\u00ed nejak\u00e1 inform\u00e1cia ako samozrejmos\u0165, napriek tomu ju uve\u010fte - nikdy neviete, ak\u00e9 s\u00fa vedomosti osoby, ktor\u00e1 bude s va\u0161\u00edm bug reportom pracova\u0165) SYSTEM INFO Inform\u00e1cie o softv\u00e9ri a konfigur\u00e1cii syst\u00e9mu, ktor\u00e9 s\u00fa relevantn\u00e9 pre uskuto\u010dnenie testu. ACCEPTANCE CRITERIA Poskytnite krit\u00e9ri\u00e1, ktor\u00e9 je potrebn\u00e9 splni\u0165 sk\u00f4r, ako bude mo\u017en\u00e9 chybu alebo pr\u00edbeh pou\u017e\u00edvate\u013ea uzavrie\u0165. Pred za\u010diatkom pr\u00e1c op\u00ed\u0161te \u010do najjasnej\u0161ie akcepta\u010dn\u00e9 krit\u00e9ria z\u00e1kazn\u00edka. Akcepta\u010dn\u00e9 krit\u00e9ri\u00e1 sa m\u00f4\u017eu pou\u017ei\u0165 ako z\u00e1klad pre akcepta\u010dn\u00e9 testy, aby ste mohli efekt\u00edvnej\u0161ie vyhodnoti\u0165, \u010di bola polo\u017eka uspokojivo dokon\u010den\u00e1. FOUND IN BUILD Ke\u010f spr\u00e1vca testov vytvor\u00ed chyby, automaticky vypln\u00ed System info a found in build inform\u00e1ciami o softv\u00e9rovom prostred\u00ed a o tom, kde sa chyba vyskytla. Pre viac inform\u00e1ci\u00ed o definovan\u00ed softv\u00e9rov\u00fdch prostred\u00ed, nav\u0161t\u00edvte str\u00e1nku: https://docs.microsoft.com/en-us/azure/devops/test/test-different-configurations?view=azure-devops INTEGRATED IN BUILD Ke\u010f vyrie\u0161ite chybu, pou\u017eite Integrated in Build na ozna\u010denie n\u00e1zvu buildu, ktor\u00fd obsahuje k\u00f3d, ktor\u00fd opravuje chybu. PRIORITY Subjekt\u00edvne hodnotenie chyby, preto\u017ee sa t\u00fdka podnikania alebo po\u017eiadaviek z\u00e1kazn\u00edka. Priorita ozna\u010duje poradie, v ktorom by sa mali opravi\u0165 chyby k\u00f3du. Akceptovan\u00e9 hodnoty 1 : Produkt sa ned\u00e1 odosla\u0165 bez \u00faspe\u0161n\u00e9ho vyrie\u0161enia pracovn\u00e9ho predmetu a mal by sa rie\u0161i\u0165 \u010do najsk\u00f4r. 2 : Produkt sa ned\u00e1 odosla\u0165 bez \u00faspe\u0161n\u00e9ho vyrie\u0161enia predmetu pr\u00e1ce, nemus\u00ed sa v\u0161ak okam\u017eite rie\u0161i\u0165. 3 : Vyrie\u0161enie pracovnej polo\u017eky je volite\u013en\u00e9 na z\u00e1klade zdrojov, \u010dasu a rizika. SEVERITY Subjekt\u00edvne hodnotenie vplyvu chyby na projekt alebo softv\u00e9rov\u00fd syst\u00e9m. Napr\u00edklad: Ak kliknutie na vzdialen\u00fd odkaz (zriedkav\u00e1 udalos\u0165) sp\u00f4sob\u00ed zlyhanie aplik\u00e1cie alebo webovej str\u00e1nky (z\u00e1va\u017en\u00e1 sk\u00fasenos\u0165 so z\u00e1kazn\u00edkom), m\u00f4\u017eete ur\u010di\u0165 Z\u00e1va\u017enos\u0165 = 2 (vysok\u00e1) a Priorita = 3. Akceptovan\u00e9 hodnoty 1 - Kritick\u00e1 : Mus\u00ed sa opravi\u0165. Porucha, ktor\u00e1 sp\u00f4sobuje ukon\u010denie jedn\u00e9ho alebo viacer\u00fdch komponentov syst\u00e9mu alebo cel\u00e9ho syst\u00e9mu alebo sp\u00f4sobuje rozsiahle po\u0161kodenie \u00fadajov. Neexistuj\u00fa \u017eiadne prijate\u013en\u00e9 alternat\u00edvne met\u00f3dy na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov. 2 - Vysok\u00e1 : Zv\u00e1\u017ete opravu. Porucha, ktor\u00e1 sp\u00f4sobuje ukon\u010denie jedn\u00e9ho alebo viacer\u00fdch komponentov syst\u00e9mu alebo cel\u00e9ho syst\u00e9mu alebo sp\u00f4sobuje rozsiahle po\u0161kodenie \u00fadajov. Existuje v\u0161ak prijate\u013en\u00e1 alternat\u00edvna met\u00f3da na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov. 3 - Stredn\u00e1 : Porucha, ktor\u00e1 sp\u00f4sobuje, \u017ee syst\u00e9m poskytuje nespr\u00e1vne, ne\u00fapln\u00e9 alebo nekonzistentn\u00e9 v\u00fdsledky. 4 - N\u00edzka : Men\u0161\u00ed alebo kozmetick\u00fd defekt, ktor\u00fd m\u00e1 prijate\u013en\u00e9 rie\u0161enie na dosiahnutie po\u017eadovan\u00fdch v\u00fdsledkov.","title":"BUG"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#epic","text":"DESCRIPTION Jasne a podrobne pop\u00ed\u0161te cie\u013e epicu. ACCEPTANCE CRITERIA Jasne definova\u0165, kedy je epic hotov\u00fd a v\u0161etko funguje presne tak, ako to bolo na za\u010diatku definovan\u00e9. STATUS start date : D\u00e1tum za\u010diatku pr\u00e1ce na epicu target date : D\u00e1tum, do ktor\u00e9ho sa m\u00e1 epic implementova\u0165. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia) EFFORT Poskytnite relat\u00edvny odhad mno\u017estva pr\u00e1ce potrebnej na dokon\u010denie epicu. Pou\u017eite ak\u00fako\u013evek \u010d\u00edseln\u00fa jednotku merania, na ktorej ste sa s t\u00edmom dohodli. BUSINESS VALUE Zadajte prioritu, ktor\u00e1 zachyt\u00e1va relat\u00edvnu hodnotu epicu v porovnan\u00ed s ostatn\u00fdmi polo\u017ekami rovnak\u00e9ho typu. \u010c\u00edm vy\u0161\u0161ie \u010d\u00edslo, t\u00fdm vy\u0161\u0161ia je hodnota podniku. Toto pole pou\u017eite, ak chcete zachyti\u0165 prioritu osobitne od menite\u013en\u00e9ho poradia nevybaven\u00fdch polo\u017eiek backlogu. TIME CRITICALITY Subjekt\u00edvna mern\u00e1 jednotka, ktor\u00e1 zachyt\u00e1va, ako sa biznis hodnota epicu v priebehu \u010dasu zni\u017euje. Vy\u0161\u0161ie hodnoty znamenaj\u00fa, \u017ee epic je zo svojej podstaty \u010dasovokritickej\u0161\u00ed ako polo\u017eky s ni\u017e\u0161\u00edmi hodnotami. VALUE AREA Oblas\u0165 hodnoty pre z\u00e1kazn\u00edka ur\u010den\u00e1 epicom. Zahrnut\u00e9 hodnoty Architectural : technick\u00e9 slu\u017eby na implement\u00e1ciu obchodn\u00fdch funkci\u00ed, ktor\u00e9 poskytuj\u00fa rie\u0161enie Business : slu\u017eby, ktor\u00e9 nap\u013a\u0148aj\u00fa potreby z\u00e1kazn\u00edkov alebo zainteresovan\u00fdch str\u00e1n a ktor\u00e9 priamo prin\u00e1\u0161aj\u00fa hodnotu pre z\u00e1kazn\u00edka na podporu podnikania","title":"EPIC"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#feature","text":"Rovnak\u00e1 \u0161trukt\u00fara a pravidl\u00e1 ako pri epicu (Vi\u010f popis epicu).","title":"FEATURE"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#impediment","text":"Impedimenty (prek\u00e1\u017eky) predstavuj\u00fa nepl\u00e1novan\u00e9 \u010dinnosti. Ich rie\u0161enie si vy\u017eaduje viac pr\u00e1ce nad r\u00e1mec toho, \u010do sa sleduje pod\u013ea skuto\u010dn\u00fdch po\u017eiadaviek. Pou\u017eitie typu pracovnej polo\u017eky impediment v\u00e1m pom\u00e1ha sledova\u0165 a spravova\u0165 tieto probl\u00e9my, a\u017e k\u00fdm ich nevyrie\u0161ite a nezatvor\u00edte. Impedimenty sa nezobrazuj\u00fa v backlogu. Namiesto toho je mo\u017en\u00e9 ich sledova\u0165 pou\u017eit\u00edm dopytov . DESCRIPTION Jasne a podrobne pop\u00ed\u0161te prek\u00e1\u017eku. RESOLUTION Jasne definova\u0165 okolnosti, za ak\u00fdch m\u00f4\u017ee by\u0165 dan\u00e1 prek\u00e1\u017eka pova\u017eovan\u00e1 za plne vyrie\u0161en\u00fa. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia)","title":"IMPEDIMENT"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#product-backlog-item","text":"Rovnak\u00e1 \u0161trukt\u00fara a pravidl\u00e1 ako pri epicu (Vi\u010f popis epicu).","title":"PRODUCT BACKLOG ITEM"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#task","text":"Do backlogu prid\u00e1vate tasky (\u00falohy), ke\u010f chcete sledova\u0165 pr\u00e1cu potrebn\u00fa na ich implement\u00e1ciu a odhadn\u00fa\u0165 pr\u00e1cu priraden\u00fa jednotliv\u00fdm \u010dlenom t\u00edmu a t\u00edmu ako celku. Ak chcete porovna\u0165 kapacitu so skuto\u010dne pl\u00e1novanou pr\u00e1cou, mus\u00edte pre ka\u017ed\u00fa nevybaven\u00fa polo\u017eku definova\u0165 a odhadn\u00fa\u0165 tasky. DESCRIPTION Jasne a podrobne pop\u00ed\u0161te \u00falohu. PRIORITY Subjekt\u00edvne hodnotenie V\u00fdber zo \u0161tyroch hodn\u00f4t pod\u013ea priority - 1 (najvy\u0161\u0161ia) a\u017e 4 (najni\u017e\u0161ia) REMAINING WORK Mno\u017estvo zost\u00e1vaj\u00facej pr\u00e1ce na dokon\u010denie \u00falohy. Postupom pr\u00e1ce aktualizujte toto pole. Pou\u017e\u00edva sa na v\u00fdpo\u010det kapacitn\u00fdch diagramov a grafu burzov\u00e9ho \u0161printu. M\u00f4\u017eete ur\u010di\u0165 pr\u00e1cu v akejko\u013evek meracej jednotke, ktor\u00fa si t\u00edm vyberie. BLOCKED V nastaven\u00ed scrum alebo agile je \u201eblokovan\u00fd\u201c stav pracovnej polo\u017eky, ktor\u00fa nem\u00f4\u017eete dokon\u010di\u0165 z d\u00f4vodu vonkaj\u0161\u00edch faktorov. Napr\u00edklad nem\u00f4\u017eete prida\u0165 funkciu, preto\u017ee \u010dak\u00e1te, a\u017e v\u00e1\u0161 spolupracovn\u00edk dokon\u010d\u00ed pull request, na ktor\u00fd nadv\u00e4zuje va\u0161a pr\u00e1ca. polo\u017eku m\u00f4\u017eete ozna\u010di\u0165 ako blokovan\u00fa v\u00fdberom mo\u017enosti Yes","title":"TASK"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_popisovat_polozky_v_azure_devops/#test-case","text":"Vytvorte manu\u00e1lne testovacie pr\u00edpady a skontrolujte, \u010di ka\u017ed\u00fd z v\u00fdstupov vyhovuje potreb\u00e1m va\u0161ich pou\u017e\u00edvate\u013eov. Usporiadajte svoje testovacie pr\u00edpady tak, \u017ee ich prid\u00e1te do testovac\u00edch pl\u00e1nov a testovac\u00edch s\u00faborov. Vyberte pre dan\u00fa \u00falohu testerov. Nov\u00fd krok m\u00f4\u017eete prida\u0165 zvolen\u00edm mo\u017enosti Click or type here to add a step Pre ka\u017ed\u00fd krok zad\u00e1te: ACTION Presn\u00fd popis akcie, ktor\u00fa m\u00e1 tester vykona\u0165 EXPECTED RESULT Presn\u00fd popis v\u00fdsledku, ktor\u00fd by sa mal udia\u0165 za predpokladu, \u017ee v\u0161etko funguje, ako m\u00e1 Pre v\u0161etky polo\u017eky, pri ktor\u00fdch je t\u00e1to mo\u017enos\u0165 dostupn\u00e1, je potrebn\u00e9 priradi\u0165 nadraden\u00fa polo\u017eku (parent).","title":"TEST CASE"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_verziovat_kod_a_pracovat_s_gitom/","text":"Ako verziova\u0165 k\u00f3d a pracova\u0165 s gitom \u00b6 Git repozit\u00e1r pozost\u00e1va z 5 typov vetiev: master vetva - produk\u010dn\u00e1 verzia, na 100% funk\u010dn\u00e1 develop vetva - funk\u010dn\u00e1 verzia najnov\u0161ie prid\u00e1vanej funkcionality, pr\u00e1ve testovan\u00e1, je vytvoren\u00e1 z master vetvy, nesk\u00f4r bude spojen\u00e1 s master vetvou feature - obsahuje r\u00f4znu nov\u00fa funkcionalitu, na ktorej sa pracuje vr\u00e1mci \u0161printu (\u0161printov), je vytvoren\u00e1 z develop vetvy, po dokon\u010den\u00ed funkcionality je spojen\u00e1 s develop vetvou bug - obsahuje opravu funkcionality, ktor\u00e1 e\u0161te nie je v produk\u010dnej verzii, je vytvoren\u00e1 z develop vetvy, po dokon\u010den\u00ed opravy je spojen\u00e1 s develop vetvou hotfix - obsahuje opravu funkcionality, ktor\u00e1 je v produk\u010dnej verzii a je potrebn\u00e9, aby bola \u010do najsk\u00f4r opraven\u00e1, je vytvoren\u00e1 z master vetvy, po dokon\u010den\u00ed opravy je spojen\u00e1 s develop aj master vetvou Pre pr\u00e1cu s gitom postupujte pod\u013ea nasleduj\u00facich pokynov: Zosynchronizovanie v\u0161etk\u00fdch vetiev s repozit\u00e1rom pomocou pr\u00edkazu git fetch --prune . Vytvorenie novej vetvy z develop vetvy. Pre jednu user story sa vytv\u00e1ra len jedna vetva, do ktorej v\u0161etci, ktor\u00ed na danej user story participuj\u00fa prid\u00e1vaj\u00fa zmeny. Meno developera v n\u00e1zve vetvy bude pod\u013ea toho, komu je dan\u00e1 user story priraden\u00e1. Ke\u010f je \u00faloha hotov\u00e1, vytvor\u00ed sa merge request pod\u013ea code review metodiky. Po prehliadke k\u00f3du, zapracovan\u00ed pripomienok a n\u00e1slednom schv\u00e1len\u00ed, autor merge requestu vykon\u00e1 spojenie vetvy s develop vetvou. Pomenovanie vetiev \u00b6 Pre rie\u0161enie novej funkcionality programu je potrebn\u00e9 vytvori\u0165 vetvu pod\u013ea nasledovn\u00fdch pravidiel: N\u00e1zov vetvy nech obsahuje typ vetvy (feature, bug, hotfix), priezvisko developera, v\u00fdsti\u017en\u00fd popis toho, \u010do sa na vetve rie\u0161i a id polo\u017eky z Azure DevOps Cel\u00fd n\u00e1zov branche je nap\u00edsan\u00fd v angli\u010dtine a mal\u00fdm p\u00edsmom Odde\u013eovanie slov pomocou poml\u010dky (znak -) Pr\u00edklad: git checkout -b feature/hanakova-created-repository-us-12356 Commit spr\u00e1vy \u00b6 Pri p\u00edsan\u00ed commit spr\u00e1v je potrebn\u00e9 dodr\u017eiava\u0165 nasleduj\u00face pravidl\u00e1: Spr\u00e1vy prisluchaj\u00face commit-om s\u00fa p\u00edsan\u00e9 v anglickom jazyku Spr\u00e1va sa za\u010d\u00edna n\u00e1zvom modulu alebo sekcie (v pr\u00edpade dokument\u00e1cie), ktor\u00fd je upravovan\u00fd a za n\u00e1zvom dvojbodka Nasleduje kr\u00e1tky a v\u00fdsti\u017en\u00fd popis toho \u010do bolo v commite spraven\u00e9, tento popis m\u00f4\u017ee ma\u0165 maxim\u00e1lne 70 znakov Spr\u00e1va nie je ukon\u010den\u00e1 bodkou Sloves\u00e1 s\u00fa v spr\u00e1vach uv\u00e1dzan\u00e9 v tvare imperat\u00edvu Za kr\u00e1tkym popisom sa nach\u00e1dza v hranat\u00fdch z\u00e1tvork\u00e1ch T (pre task) alebo B (pre bug), poml\u010dka a identifika\u010dn\u00e9 \u010d\u00edslo z Azure DevOps V pr\u00edpade, \u017ee to je potrebn\u00e9 nasleduje pr\u00e1zdny riadok a za n\u00edm ob\u0161\u00edrnej\u0161\u00ed popis a objasnenie commitu Pr\u00edklad: git commit -m \"methodology: add base structure of document [T-12578]\"","title":"Ako verziova\u0165 k\u00f3d a pracova\u0165 s gitom"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_verziovat_kod_a_pracovat_s_gitom/#ako-verziova\u0165-k\u00f3d-a-pracova\u0165-s-gitom","text":"Git repozit\u00e1r pozost\u00e1va z 5 typov vetiev: master vetva - produk\u010dn\u00e1 verzia, na 100% funk\u010dn\u00e1 develop vetva - funk\u010dn\u00e1 verzia najnov\u0161ie prid\u00e1vanej funkcionality, pr\u00e1ve testovan\u00e1, je vytvoren\u00e1 z master vetvy, nesk\u00f4r bude spojen\u00e1 s master vetvou feature - obsahuje r\u00f4znu nov\u00fa funkcionalitu, na ktorej sa pracuje vr\u00e1mci \u0161printu (\u0161printov), je vytvoren\u00e1 z develop vetvy, po dokon\u010den\u00ed funkcionality je spojen\u00e1 s develop vetvou bug - obsahuje opravu funkcionality, ktor\u00e1 e\u0161te nie je v produk\u010dnej verzii, je vytvoren\u00e1 z develop vetvy, po dokon\u010den\u00ed opravy je spojen\u00e1 s develop vetvou hotfix - obsahuje opravu funkcionality, ktor\u00e1 je v produk\u010dnej verzii a je potrebn\u00e9, aby bola \u010do najsk\u00f4r opraven\u00e1, je vytvoren\u00e1 z master vetvy, po dokon\u010den\u00ed opravy je spojen\u00e1 s develop aj master vetvou Pre pr\u00e1cu s gitom postupujte pod\u013ea nasleduj\u00facich pokynov: Zosynchronizovanie v\u0161etk\u00fdch vetiev s repozit\u00e1rom pomocou pr\u00edkazu git fetch --prune . Vytvorenie novej vetvy z develop vetvy. Pre jednu user story sa vytv\u00e1ra len jedna vetva, do ktorej v\u0161etci, ktor\u00ed na danej user story participuj\u00fa prid\u00e1vaj\u00fa zmeny. Meno developera v n\u00e1zve vetvy bude pod\u013ea toho, komu je dan\u00e1 user story priraden\u00e1. Ke\u010f je \u00faloha hotov\u00e1, vytvor\u00ed sa merge request pod\u013ea code review metodiky. Po prehliadke k\u00f3du, zapracovan\u00ed pripomienok a n\u00e1slednom schv\u00e1len\u00ed, autor merge requestu vykon\u00e1 spojenie vetvy s develop vetvou.","title":"Ako verziova\u0165 k\u00f3d a pracova\u0165 s gitom"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_verziovat_kod_a_pracovat_s_gitom/#pomenovanie-vetiev","text":"Pre rie\u0161enie novej funkcionality programu je potrebn\u00e9 vytvori\u0165 vetvu pod\u013ea nasledovn\u00fdch pravidiel: N\u00e1zov vetvy nech obsahuje typ vetvy (feature, bug, hotfix), priezvisko developera, v\u00fdsti\u017en\u00fd popis toho, \u010do sa na vetve rie\u0161i a id polo\u017eky z Azure DevOps Cel\u00fd n\u00e1zov branche je nap\u00edsan\u00fd v angli\u010dtine a mal\u00fdm p\u00edsmom Odde\u013eovanie slov pomocou poml\u010dky (znak -) Pr\u00edklad: git checkout -b feature/hanakova-created-repository-us-12356","title":"Pomenovanie vetiev"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_verziovat_kod_a_pracovat_s_gitom/#commit-spr\u00e1vy","text":"Pri p\u00edsan\u00ed commit spr\u00e1v je potrebn\u00e9 dodr\u017eiava\u0165 nasleduj\u00face pravidl\u00e1: Spr\u00e1vy prisluchaj\u00face commit-om s\u00fa p\u00edsan\u00e9 v anglickom jazyku Spr\u00e1va sa za\u010d\u00edna n\u00e1zvom modulu alebo sekcie (v pr\u00edpade dokument\u00e1cie), ktor\u00fd je upravovan\u00fd a za n\u00e1zvom dvojbodka Nasleduje kr\u00e1tky a v\u00fdsti\u017en\u00fd popis toho \u010do bolo v commite spraven\u00e9, tento popis m\u00f4\u017ee ma\u0165 maxim\u00e1lne 70 znakov Spr\u00e1va nie je ukon\u010den\u00e1 bodkou Sloves\u00e1 s\u00fa v spr\u00e1vach uv\u00e1dzan\u00e9 v tvare imperat\u00edvu Za kr\u00e1tkym popisom sa nach\u00e1dza v hranat\u00fdch z\u00e1tvork\u00e1ch T (pre task) alebo B (pre bug), poml\u010dka a identifika\u010dn\u00e9 \u010d\u00edslo z Azure DevOps V pr\u00edpade, \u017ee to je potrebn\u00e9 nasleduje pr\u00e1zdny riadok a za n\u00edm ob\u0161\u00edrnej\u0161\u00ed popis a objasnenie commitu Pr\u00edklad: git commit -m \"methodology: add base structure of document [T-12578]\"","title":"Commit spr\u00e1vy"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_vykonat_code_review/","text":"Ako vykona\u0165 code review \u00b6 Pokyny pre autora \u00b6 Na GitLab repozit\u00e1ri cho\u010f do Merge Requests v \u013eavom menu Stla\u010d New merge request N\u00e1jdi svoju branchu v kol\u00f3nke Source Branch Ako Target Branch nastav pr\u00edslu\u0161n\u00fa branchu (pre feature/ a bugfix/ - develop , pre hotfix/ - master ) Vypl\u0148 Title & Description , taktie\u017e Assignee a Approvers Do Description pridaj link na dokument\u00e1ciu, ktor\u00fa si vytvoril ako s\u00fa\u010das\u0165 pr\u00e1ce na US Skontroluj, \u010di zbehol build v karte Build & Release . Na schv\u00e1lenie merge requestu je potrebn\u00e9, aby build pre\u0161iel Skontroluj ostatn\u00e9 artefakty z CI (cpplint, doxygen,...) Ak ti recenzent n\u00e1jde chybu, je ju potrebn\u00e9 opravi\u0165 a po opraven\u00ed nap\u00edsa\u0165 ako odpove\u010f ku koment\u00e1ru, \u017ee chyba je opraven\u00e1 Pokyny pre recenzenta \u00b6 Ak si pridelen\u00fd na merge request, cho\u010f do Merge Requests a n\u00e1jdi n\u00e1zov merge requestu, na ktor\u00fd si bol pridelen\u00fd V karte Changes m\u00f4\u017ee\u0161 vidie\u0165 zmeny v zdrojovom k\u00f3de autora Na chyby sa sna\u017e upozorni\u0165 a nap\u00edsa\u0165 do koment\u00e1rov alebo ku riadku k\u00f3du. Ak sa ti \u010doko\u013evek nezd\u00e1, tie\u017e to nap\u00ed\u0161 do koment\u00e1rov alebo ku riadku k\u00f3du Po opraven\u00ed chyby ozna\u010d koment\u00e1r ako Resolved Po vyrie\u0161en\u00ed v\u0161etk\u00fdch komen\u00e1rov mergni k\u00f3d tla\u010didlom Merge Pred t\u00fdm, ako definit\u00edvne mergne\u0161 k\u00f3d, zvo\u013e Modify merge commit a uprav merge commit spr\u00e1vu. T\u00e1to spr\u00e1va bude stru\u010dne obsahova\u0165, \u010do prid\u00e1va obsah merge requestu do projektu. \u010co je potrebn\u00e9 kontrolova\u0165 \u00b6 Statick\u00e1 anal\u00fdza Vymazal autor nie\u010do, \u010do nemal? Je k\u00f3d v s\u00falade s metodikou pre coding conventions? Je k\u00f3d jasne okomentovan\u00fd? Dynamick\u00e1 anal\u00fdza Je funkcionalita spr\u00e1vna? Testy Pre\u0161li v\u0161etky testy \u00faspe\u0161ne? Je k\u00f3d dostato\u010dne pokryt\u00fd testami? Link na rady pre autora aj recenzenta oh\u013eadom code review","title":"Ako vykona\u0165 code review"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_vykonat_code_review/#ako-vykona\u0165-code-review","text":"","title":"Ako vykona\u0165 code review"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_vykonat_code_review/#pokyny-pre-autora","text":"Na GitLab repozit\u00e1ri cho\u010f do Merge Requests v \u013eavom menu Stla\u010d New merge request N\u00e1jdi svoju branchu v kol\u00f3nke Source Branch Ako Target Branch nastav pr\u00edslu\u0161n\u00fa branchu (pre feature/ a bugfix/ - develop , pre hotfix/ - master ) Vypl\u0148 Title & Description , taktie\u017e Assignee a Approvers Do Description pridaj link na dokument\u00e1ciu, ktor\u00fa si vytvoril ako s\u00fa\u010das\u0165 pr\u00e1ce na US Skontroluj, \u010di zbehol build v karte Build & Release . Na schv\u00e1lenie merge requestu je potrebn\u00e9, aby build pre\u0161iel Skontroluj ostatn\u00e9 artefakty z CI (cpplint, doxygen,...) Ak ti recenzent n\u00e1jde chybu, je ju potrebn\u00e9 opravi\u0165 a po opraven\u00ed nap\u00edsa\u0165 ako odpove\u010f ku koment\u00e1ru, \u017ee chyba je opraven\u00e1","title":"Pokyny pre autora"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_vykonat_code_review/#pokyny-pre-recenzenta","text":"Ak si pridelen\u00fd na merge request, cho\u010f do Merge Requests a n\u00e1jdi n\u00e1zov merge requestu, na ktor\u00fd si bol pridelen\u00fd V karte Changes m\u00f4\u017ee\u0161 vidie\u0165 zmeny v zdrojovom k\u00f3de autora Na chyby sa sna\u017e upozorni\u0165 a nap\u00edsa\u0165 do koment\u00e1rov alebo ku riadku k\u00f3du. Ak sa ti \u010doko\u013evek nezd\u00e1, tie\u017e to nap\u00ed\u0161 do koment\u00e1rov alebo ku riadku k\u00f3du Po opraven\u00ed chyby ozna\u010d koment\u00e1r ako Resolved Po vyrie\u0161en\u00ed v\u0161etk\u00fdch komen\u00e1rov mergni k\u00f3d tla\u010didlom Merge Pred t\u00fdm, ako definit\u00edvne mergne\u0161 k\u00f3d, zvo\u013e Modify merge commit a uprav merge commit spr\u00e1vu. T\u00e1to spr\u00e1va bude stru\u010dne obsahova\u0165, \u010do prid\u00e1va obsah merge requestu do projektu.","title":"Pokyny pre recenzenta"},{"location":"dokumentacia_k_riadeniu/metodiky/ako_vykonat_code_review/#\u010do-je-potrebn\u00e9-kontrolova\u0165","text":"Statick\u00e1 anal\u00fdza Vymazal autor nie\u010do, \u010do nemal? Je k\u00f3d v s\u00falade s metodikou pre coding conventions? Je k\u00f3d jasne okomentovan\u00fd? Dynamick\u00e1 anal\u00fdza Je funkcionalita spr\u00e1vna? Testy Pre\u0161li v\u0161etky testy \u00faspe\u0161ne? Je k\u00f3d dostato\u010dne pokryt\u00fd testami? Link na rady pre autora aj recenzenta oh\u013eadom code review","title":"\u010co je potrebn\u00e9 kontrolova\u0165"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/","text":"Definitions of done \u00b6 User story \u00b6 Je splnen\u00e1 definition of ready Je priraden\u00e1 \u010dlenovi teamu, ktor\u00fd ma na starosti jej dodanie/vyrie\u0161enie V\u0161etky tasky s\u00fa v stave Done AC user story s\u00fa splnen\u00e9 V\u00fdsledok story je odprezentovan\u00fd teamu Product owner schv\u00e1lil na stretnut\u00ed schv\u00e1lenie user story \u0160print \u00b6 V\u0161etky \u00falohy v \u0161printe sp\u013a\u0148aj\u00fa definition of done Projekt je nasaden\u00fd Backlog je aktualizovan\u00fd \u0160print je zdokumentovan\u00fd Na webovej str\u00e1nke t\u00edmov\u00e9ho projektu je nahran\u00e9 sprint review, retrospekt\u00edva, export \u00faloh a percentu\u00e1lny podiel pr\u00e1ce Web \u00b6 Na webe s\u00fa v\u0161etky potrebn\u00e9 inform\u00e1cie o projekte a t\u00edme Na webe s\u00fa v\u0161etky potrebn\u00e9 s\u00fabory (retrospekt\u00edvy, \u0161print reporty) S\u00fa splnen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ria webu Web je pr\u00edstupn\u00fd cez internet Analytick\u00e1 \u00faloha \u00b6 Je vytvoren\u00e1 dokument\u00e1cia k analyzovan\u00e9mu probl\u00e9mu alebo report o n\u00e1jden\u00fdch rie\u0161eniach Implementa\u010dn\u00e1 \u00faloha \u00b6 Nap\u00edsan\u00fd a funk\u010dn\u00fd k\u00f3d pre ur\u010den\u00e9 funkcionality V k\u00f3de je logovanie Vytvoren\u00e9 testy K\u00f3d prejde jednotkov\u00fdmi/funkcion\u00e1lnymi testami Splnen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ria Rev\u00edzia k\u00f3du prebehla \u00faspe\u0161ne K\u00f3d je mergnut\u00fd do develop branche a schv\u00e1len\u00fd product ownerom K\u00f3d je zdokumentovan\u00fd Ak je to vhodn\u00e9/potrebn\u00e9 pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka je aktualizovan\u00e1 \u00daloha t\u00fdkaj\u00faca sa infra\u0161trukt\u00fary \u00b6 Je funk\u010dn\u00e1 cel\u00e1 pipeline Je sp\u00edsan\u00e1/upraven\u00e1 dokument\u00e1cia V pr\u00edpade, \u017ee pipeline produkuje artefakt/artefakty, je potrebn\u00e9 ich niekde ulo\u017ei\u0165 Testy \u00b6 Testy s\u00fa nap\u00edsan\u00e9 pod\u013ea metodiky na p\u00edsanie testov Dokumenta\u010dn\u00e1 \u00faloha \u00b6 Dokument\u00e1cia pre\u0161la review Je mergnut\u00e1 v develop vetve Je vygenerovan\u00e1 cel\u00e1 dokument\u00e1cia Dokument\u00e1cia je uplodnut\u00e1 na webov\u00fa str\u00e1nku t\u00edmu","title":"Definitions of done"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#definitions-of-done","text":"","title":"Definitions of done"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#user-story","text":"Je splnen\u00e1 definition of ready Je priraden\u00e1 \u010dlenovi teamu, ktor\u00fd ma na starosti jej dodanie/vyrie\u0161enie V\u0161etky tasky s\u00fa v stave Done AC user story s\u00fa splnen\u00e9 V\u00fdsledok story je odprezentovan\u00fd teamu Product owner schv\u00e1lil na stretnut\u00ed schv\u00e1lenie user story","title":"User story"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#\u0161print","text":"V\u0161etky \u00falohy v \u0161printe sp\u013a\u0148aj\u00fa definition of done Projekt je nasaden\u00fd Backlog je aktualizovan\u00fd \u0160print je zdokumentovan\u00fd Na webovej str\u00e1nke t\u00edmov\u00e9ho projektu je nahran\u00e9 sprint review, retrospekt\u00edva, export \u00faloh a percentu\u00e1lny podiel pr\u00e1ce","title":"\u0160print"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#web","text":"Na webe s\u00fa v\u0161etky potrebn\u00e9 inform\u00e1cie o projekte a t\u00edme Na webe s\u00fa v\u0161etky potrebn\u00e9 s\u00fabory (retrospekt\u00edvy, \u0161print reporty) S\u00fa splnen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ria webu Web je pr\u00edstupn\u00fd cez internet","title":"Web"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#analytick\u00e1-\u00faloha","text":"Je vytvoren\u00e1 dokument\u00e1cia k analyzovan\u00e9mu probl\u00e9mu alebo report o n\u00e1jden\u00fdch rie\u0161eniach","title":"Analytick\u00e1 \u00faloha"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#implementa\u010dn\u00e1-\u00faloha","text":"Nap\u00edsan\u00fd a funk\u010dn\u00fd k\u00f3d pre ur\u010den\u00e9 funkcionality V k\u00f3de je logovanie Vytvoren\u00e9 testy K\u00f3d prejde jednotkov\u00fdmi/funkcion\u00e1lnymi testami Splnen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ria Rev\u00edzia k\u00f3du prebehla \u00faspe\u0161ne K\u00f3d je mergnut\u00fd do develop branche a schv\u00e1len\u00fd product ownerom K\u00f3d je zdokumentovan\u00fd Ak je to vhodn\u00e9/potrebn\u00e9 pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka je aktualizovan\u00e1","title":"Implementa\u010dn\u00e1 \u00faloha"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#\u00faloha-t\u00fdkaj\u00faca-sa-infra\u0161trukt\u00fary","text":"Je funk\u010dn\u00e1 cel\u00e1 pipeline Je sp\u00edsan\u00e1/upraven\u00e1 dokument\u00e1cia V pr\u00edpade, \u017ee pipeline produkuje artefakt/artefakty, je potrebn\u00e9 ich niekde ulo\u017ei\u0165","title":"\u00daloha t\u00fdkaj\u00faca sa infra\u0161trukt\u00fary"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#testy","text":"Testy s\u00fa nap\u00edsan\u00e9 pod\u013ea metodiky na p\u00edsanie testov","title":"Testy"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_done/#dokumenta\u010dn\u00e1-\u00faloha","text":"Dokument\u00e1cia pre\u0161la review Je mergnut\u00e1 v develop vetve Je vygenerovan\u00e1 cel\u00e1 dokument\u00e1cia Dokument\u00e1cia je uplodnut\u00e1 na webov\u00fa str\u00e1nku t\u00edmu","title":"Dokumenta\u010dn\u00e1 \u00faloha"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_ready/","text":"Definitions of ready \u00b6 Epic \u00b6 M\u00e1 zap\u00edsan\u00fd opis, ktor\u00fd v \u0161ir\u0161om kontexte vysvet\u013euje pr\u00ednos Je akceptovan\u00fd product ownerom M\u00e1 vytvoren\u00fa aspo\u0148 jednu feature Feature \u00b6 M\u00e1 zap\u00edsan\u00fd opis, ktor\u00fd u\u017e\u0161ie \u0161pecifikuje prid\u00e1van\u00fa funkcionalitu, \u010do presne m\u00e1 funkcionalita robi\u0165 Je akceptovan\u00e1 product ownerom Je zaraden\u00e1 do epicu M\u00e1 vytvoren\u00fa aspo\u0148 jednu user story User story \u00b6 M\u00e1 zap\u00edsan\u00e9 akcepta\u010dn\u00e9 krit\u00e9ri\u00e1, ktor\u00e9 s\u00fa merate\u013en\u00e9 M\u00e1 zap\u00edsan\u00fd odhad zlo\u017eitosti S\u00fa zap\u00edsan\u00e9 jednotliv\u00e9 tasky pre t\u00fato user story Tasky maj\u00fa zap\u00edsan\u00e9 description Je zaraden\u00e1 do feature a epicu","title":"Definitions of ready"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_ready/#definitions-of-ready","text":"","title":"Definitions of ready"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_ready/#epic","text":"M\u00e1 zap\u00edsan\u00fd opis, ktor\u00fd v \u0161ir\u0161om kontexte vysvet\u013euje pr\u00ednos Je akceptovan\u00fd product ownerom M\u00e1 vytvoren\u00fa aspo\u0148 jednu feature","title":"Epic"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_ready/#feature","text":"M\u00e1 zap\u00edsan\u00fd opis, ktor\u00fd u\u017e\u0161ie \u0161pecifikuje prid\u00e1van\u00fa funkcionalitu, \u010do presne m\u00e1 funkcionalita robi\u0165 Je akceptovan\u00e1 product ownerom Je zaraden\u00e1 do epicu M\u00e1 vytvoren\u00fa aspo\u0148 jednu user story","title":"Feature"},{"location":"dokumentacia_k_riadeniu/metodiky/definitions_of_ready/#user-story","text":"M\u00e1 zap\u00edsan\u00e9 akcepta\u010dn\u00e9 krit\u00e9ri\u00e1, ktor\u00e9 s\u00fa merate\u013en\u00e9 M\u00e1 zap\u00edsan\u00fd odhad zlo\u017eitosti S\u00fa zap\u00edsan\u00e9 jednotliv\u00e9 tasky pre t\u00fato user story Tasky maj\u00fa zap\u00edsan\u00e9 description Je zaraden\u00e1 do feature a epicu","title":"User story"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/","text":"Konvencie \u00b6 Riadky by mali by\u0165 maxim\u00e1lne 80-120 znakov dlh\u00e9, aby sa \u013eah\u0161ie h\u013eadali zmeny v Gite. Konvencie p\u00edsania k\u00f3du pre C# \u00b6 Konvencie pomenovania \u00b6 Kon\u0161tanty \u2013 kon\u0161tanty by mali by\u0165 pomenovan\u00e9 na z\u00e1klade PascalCasing bez oh\u013eadu na modifik\u00e1tor pr\u00edstupu. private conts int TheUniversalAnswer = 42 ; public conts double Pi = 3.14 ; Private premenn\u00e9 \u2013 mali by za\u010d\u00edna\u0165 pod\u010diarkovn\u00edkom a mal\u00fdm p\u00edsmenom private int x ; public static readonly myLock = new Object (); Met\u00f3dy a Triedy \u2013 pou\u017e\u00edva\u0165 PascalCasing public class ClientActivity { public void ClearStatistic () { //... } public void CalculateStatistic () { //... } } Argumenty met\u00f3d a lok\u00e1lne premenn\u00e9 \u2013 pou\u017e\u00edva\u0165 camelCasing public class UserLog { public void Add ( LogEvent logEvent ) { int itemCount = logEvent . Items . Count ; //... } } Triedy \u2013 pou\u017e\u00edva\u0165 podstatn\u00e9 men\u00e1 na pomenovanie tried public class Employee { } public class BussinesLocation { } public class DocumentCollection { } Rozhrania \u2013 pou\u017e\u00edva\u0165 prefix I public interface IShape { } public interface IShapeCollection { } public interface IGroupable { } Nepou\u017e\u00edva\u0165 bulharsk\u00e9 kon\u0161tanty Jednoriadkov\u00e9 pr\u00edkazy \u2013 m\u00f4\u017eu ma\u0165 z\u00e1tvorky, ktor\u00e9 za\u010d\u00ednaj\u00fa a kon\u010dia na rovnakom riadku public class Foo { int bar ; public int Bar () { get { return bar ; } set { bar = value ; } } } Curly braces (ku\u010derav\u00e9 z\u00e1tvorky) Allman style - vertik\u00e1lne zarovnanie if ( condition ) { //this brace should never be omitted DoSomething (); } DoSomethingElse (); Deklar\u00e1cie V\u017edy \u0161pecifikova\u0165 vidite\u013enos\u0165 (public, private, protected) Vidite\u013enos\u0165 by mala by\u0165 prv\u00fdm modifik\u00e1torom (public abstract) \u010cleny enum, by mali by\u0165 zoraden\u00e9 pod\u013ea hodnoty Pri statick\u00fdch poliach k\u013e\u00fa\u010dov\u00e9 slovo readonly po static Referencie Pou\u017e\u00edva\u0165 this. na rozoznanie medzi lok\u00e1lnou a \u010dlenskou premennou Ak je mo\u017en\u00e9, v\u017edy pou\u017e\u00edva\u0165 var namiesto \u0161pecifick\u00fdch typov Pou\u017e\u00edva\u0165 k\u013e\u00fa\u010dov\u00e9 slov\u00e1 (int, string, float...) namiesto BLC typove (String, Int32, Single,...), rovnako pre volania met\u00f3d (int.Parse nie Int32.Parse) Menn\u00e9 priestory Import by mal by\u0165 na za\u010diatku s\u00faboru, mimo menn\u00e9ho priestoru, deklar\u00e1cie by mali by\u0165 zoraden\u00e9 abecedne, ale System by mal by\u0165 pred v\u0161etk\u00fdmi ostatn\u00fdmi Organiz\u00e1cia tried \u2013 zoradi\u0165 v nasleduj\u00facom porad\u00ed Kon\u0161tanty Polia Vlastnosti Udalosti Met\u00f3dy Vn\u00fatorn\u00e9 typy Rovnak\u00e9 typy by mali by\u0165 \u010falej zoraden\u00e9 pod\u013ea vidite\u013enosti - public, protected, private Komentovanie XML koment\u00e1re na dokumentovanie met\u00f3d, tried a rozhran\u00ed ( ///<sumary>...</summary> ) Pou\u017e\u00edva\u0165 single line komentovanie na v\u0161eobecn\u00e9 komentovanie ( // .... ) Koment\u00e1re umiestnova\u0165 na zvl\u00e1\u0161\u0165 riadok, nie na koniec riadku s k\u00f3dom Necomitova\u0165 m\u0155tvy k\u00f3d (bez koment\u00e1rov) Nepou\u017e\u00edva\u0165 bloky koment\u00e1rov ( /* ... */ ) Layout konvencie Jeden pr\u00edkaz na riadok Jedna deklar\u00e1cia na riadok Aspo\u0148 jeden vo\u013en\u00fd riadok medzi defin\u00edciami met\u00f3d a defin\u00edciami vlastnost\u00ed Konvencie p\u00edsania k\u00f3du pre C++ \u00b6 Form\u00e1tovanie \u00b6 Z\u00e1tvorky s\u00fa st\u00e1le na novom riadku //spr\u00e1vne class MyClass { //... }; //nespr\u00e1vne class MyClass { //... }; Pomenovanie \u00b6 Na pomenovanie pou\u017e\u00edvame PascalCase Typy - n\u00e1zvy za\u010d\u00ednaj\u00fa ve\u013ek\u00fdm p\u00edsmenom class MyClass : public MyParent { //... }; Funkcie - n\u00e1zvy za\u010d\u00ednaj\u00fa mal\u00fdm p\u00edsmenom void myFuncion ( int a ); Kon\u0161tanty - cel\u00e9 ve\u013ek\u00fdmi p\u00edsmenami, slov\u00e1 s\u00fa oddelen\u00e9 pod\u010diarnikom _ const int ANSWER_TO_EVERYTHING = 42 ; Premenn\u00e9 - n\u00e1zvy za\u010d\u00ednaj\u00fa mal\u00fdm p\u00edsmenom, nepou\u017e\u00edvame prefix _, m_ pre private/protected premenn\u00e9 int myVariable = 42 ; Spr\u00e1vne programovanie \u00b6 Uprednost\u0148ujeme referencie pred ukazovate\u013emi Sna\u017e\u00edme sa zabr\u00e1ni\u0165 zbyto\u010dn\u00e9mu kop\u00edrovaniu d\u00e1tov\u00fdch \u0161trukt\u00far //spr\u00e1vne //Pozn\u00e1mka: Pre n\u00e1vratov\u00fa hodnotu bude spraven\u00e1 RVO (Return Value Optiomalization) std :: string toLowercase ( const std :: string & str ) { std :: string result ; //... return result ; } //nespr\u00e1vne std :: string toLowercase ( const std :: string str ) { std :: string result ; //... return result ; } POU\u017d\u00cdVAME \u00b6 nullptr namiesto NULL #include guards namiesto #pragma once forward deklar\u00e1cie v\u0161ade, kde je to mo\u017en\u00e9 const v\u0161ade, kde je to mo\u017en\u00e9 (funkcie, premenn\u00e9, ukazovatele) lambda funkcie namiesto function objects v\u0161ade, kde je to mo\u017en\u00e9 NEPOU\u017d\u00cdVAME \u00b6 using namespace v header s\u00faboroch using namespace std; makr\u00e1, ak to nie je \u00faplne nevyhnutn\u00e9","title":"Konvencie"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#konvencie","text":"Riadky by mali by\u0165 maxim\u00e1lne 80-120 znakov dlh\u00e9, aby sa \u013eah\u0161ie h\u013eadali zmeny v Gite.","title":"Konvencie"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#konvencie-p\u00edsania-k\u00f3du-pre-c","text":"","title":"Konvencie p\u00edsania k\u00f3du pre C#"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#konvencie-pomenovania","text":"Kon\u0161tanty \u2013 kon\u0161tanty by mali by\u0165 pomenovan\u00e9 na z\u00e1klade PascalCasing bez oh\u013eadu na modifik\u00e1tor pr\u00edstupu. private conts int TheUniversalAnswer = 42 ; public conts double Pi = 3.14 ; Private premenn\u00e9 \u2013 mali by za\u010d\u00edna\u0165 pod\u010diarkovn\u00edkom a mal\u00fdm p\u00edsmenom private int x ; public static readonly myLock = new Object (); Met\u00f3dy a Triedy \u2013 pou\u017e\u00edva\u0165 PascalCasing public class ClientActivity { public void ClearStatistic () { //... } public void CalculateStatistic () { //... } } Argumenty met\u00f3d a lok\u00e1lne premenn\u00e9 \u2013 pou\u017e\u00edva\u0165 camelCasing public class UserLog { public void Add ( LogEvent logEvent ) { int itemCount = logEvent . Items . Count ; //... } } Triedy \u2013 pou\u017e\u00edva\u0165 podstatn\u00e9 men\u00e1 na pomenovanie tried public class Employee { } public class BussinesLocation { } public class DocumentCollection { } Rozhrania \u2013 pou\u017e\u00edva\u0165 prefix I public interface IShape { } public interface IShapeCollection { } public interface IGroupable { } Nepou\u017e\u00edva\u0165 bulharsk\u00e9 kon\u0161tanty Jednoriadkov\u00e9 pr\u00edkazy \u2013 m\u00f4\u017eu ma\u0165 z\u00e1tvorky, ktor\u00e9 za\u010d\u00ednaj\u00fa a kon\u010dia na rovnakom riadku public class Foo { int bar ; public int Bar () { get { return bar ; } set { bar = value ; } } } Curly braces (ku\u010derav\u00e9 z\u00e1tvorky) Allman style - vertik\u00e1lne zarovnanie if ( condition ) { //this brace should never be omitted DoSomething (); } DoSomethingElse (); Deklar\u00e1cie V\u017edy \u0161pecifikova\u0165 vidite\u013enos\u0165 (public, private, protected) Vidite\u013enos\u0165 by mala by\u0165 prv\u00fdm modifik\u00e1torom (public abstract) \u010cleny enum, by mali by\u0165 zoraden\u00e9 pod\u013ea hodnoty Pri statick\u00fdch poliach k\u013e\u00fa\u010dov\u00e9 slovo readonly po static Referencie Pou\u017e\u00edva\u0165 this. na rozoznanie medzi lok\u00e1lnou a \u010dlenskou premennou Ak je mo\u017en\u00e9, v\u017edy pou\u017e\u00edva\u0165 var namiesto \u0161pecifick\u00fdch typov Pou\u017e\u00edva\u0165 k\u013e\u00fa\u010dov\u00e9 slov\u00e1 (int, string, float...) namiesto BLC typove (String, Int32, Single,...), rovnako pre volania met\u00f3d (int.Parse nie Int32.Parse) Menn\u00e9 priestory Import by mal by\u0165 na za\u010diatku s\u00faboru, mimo menn\u00e9ho priestoru, deklar\u00e1cie by mali by\u0165 zoraden\u00e9 abecedne, ale System by mal by\u0165 pred v\u0161etk\u00fdmi ostatn\u00fdmi Organiz\u00e1cia tried \u2013 zoradi\u0165 v nasleduj\u00facom porad\u00ed Kon\u0161tanty Polia Vlastnosti Udalosti Met\u00f3dy Vn\u00fatorn\u00e9 typy Rovnak\u00e9 typy by mali by\u0165 \u010falej zoraden\u00e9 pod\u013ea vidite\u013enosti - public, protected, private Komentovanie XML koment\u00e1re na dokumentovanie met\u00f3d, tried a rozhran\u00ed ( ///<sumary>...</summary> ) Pou\u017e\u00edva\u0165 single line komentovanie na v\u0161eobecn\u00e9 komentovanie ( // .... ) Koment\u00e1re umiestnova\u0165 na zvl\u00e1\u0161\u0165 riadok, nie na koniec riadku s k\u00f3dom Necomitova\u0165 m\u0155tvy k\u00f3d (bez koment\u00e1rov) Nepou\u017e\u00edva\u0165 bloky koment\u00e1rov ( /* ... */ ) Layout konvencie Jeden pr\u00edkaz na riadok Jedna deklar\u00e1cia na riadok Aspo\u0148 jeden vo\u013en\u00fd riadok medzi defin\u00edciami met\u00f3d a defin\u00edciami vlastnost\u00ed","title":"Konvencie pomenovania"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#konvencie-p\u00edsania-k\u00f3du-pre-c_1","text":"","title":"Konvencie p\u00edsania k\u00f3du pre C++"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#form\u00e1tovanie","text":"Z\u00e1tvorky s\u00fa st\u00e1le na novom riadku //spr\u00e1vne class MyClass { //... }; //nespr\u00e1vne class MyClass { //... };","title":"Form\u00e1tovanie"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#pomenovanie","text":"Na pomenovanie pou\u017e\u00edvame PascalCase Typy - n\u00e1zvy za\u010d\u00ednaj\u00fa ve\u013ek\u00fdm p\u00edsmenom class MyClass : public MyParent { //... }; Funkcie - n\u00e1zvy za\u010d\u00ednaj\u00fa mal\u00fdm p\u00edsmenom void myFuncion ( int a ); Kon\u0161tanty - cel\u00e9 ve\u013ek\u00fdmi p\u00edsmenami, slov\u00e1 s\u00fa oddelen\u00e9 pod\u010diarnikom _ const int ANSWER_TO_EVERYTHING = 42 ; Premenn\u00e9 - n\u00e1zvy za\u010d\u00ednaj\u00fa mal\u00fdm p\u00edsmenom, nepou\u017e\u00edvame prefix _, m_ pre private/protected premenn\u00e9 int myVariable = 42 ;","title":"Pomenovanie"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#spr\u00e1vne-programovanie","text":"Uprednost\u0148ujeme referencie pred ukazovate\u013emi Sna\u017e\u00edme sa zabr\u00e1ni\u0165 zbyto\u010dn\u00e9mu kop\u00edrovaniu d\u00e1tov\u00fdch \u0161trukt\u00far //spr\u00e1vne //Pozn\u00e1mka: Pre n\u00e1vratov\u00fa hodnotu bude spraven\u00e1 RVO (Return Value Optiomalization) std :: string toLowercase ( const std :: string & str ) { std :: string result ; //... return result ; } //nespr\u00e1vne std :: string toLowercase ( const std :: string str ) { std :: string result ; //... return result ; }","title":"Spr\u00e1vne programovanie"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#pou\u017e\u00edvame","text":"nullptr namiesto NULL #include guards namiesto #pragma once forward deklar\u00e1cie v\u0161ade, kde je to mo\u017en\u00e9 const v\u0161ade, kde je to mo\u017en\u00e9 (funkcie, premenn\u00e9, ukazovatele) lambda funkcie namiesto function objects v\u0161ade, kde je to mo\u017en\u00e9","title":"POU\u017d\u00cdVAME"},{"location":"dokumentacia_k_riadeniu/metodiky/konvencie/#nepou\u017e\u00edvame","text":"using namespace v header s\u00faboroch using namespace std; makr\u00e1, ak to nie je \u00faplne nevyhnutn\u00e9","title":"NEPOU\u017d\u00cdVAME"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/","text":"Metodika iter\u00e1ci\u00ed \u00b6 Po\u010das ka\u017ed\u00e9ho \u0161printu m\u00e1me \u0161tyri stretnutia, dve s ved\u00facim t\u00edmu a dve bez neho. Ka\u017ed\u00e9 stretnutie za\u010d\u00edna Stand Upom. Aj ke\u010f by sa mal uskuto\u010d\u0148ova\u0165 ka\u017ed\u00fdch 24 hod., tento princ\u00edp uskuto\u010d\u0148ujeme 2x za t\u00fd\u017ede\u0148 vzh\u013eadom na podmienky a rozvrh predmetu. V tejto diskusii scrum master dohliada na to, aby ka\u017ed\u00fd \u010dlen t\u00edmu (vr\u00e1tane scrum mastra) zodpovedali na ot\u00e1zky: Na \u010dom som pracoval za dobu od posledn\u00e9ho stretnutia Na \u010dom sa chyst\u00e1m pracova\u0165 Ak\u00e9 probl\u00e9my m\u00e1m v s\u00favislosti s mojou \u00falohou 1. stretnutie (s ved\u00facim) \u00b6 V prvej \u010dasti tohto stretnutia ukon\u010dujeme predch\u00e1dzaj\u00faci \u0161print. Vyhodnot\u00edme celkov\u00fa iter\u00e1ciu, zhodnot\u00edme burndown chart (graf zobrazuj\u00faci mno\u017estvo pr\u00e1ce, ktor\u00e9 je nutn\u00e9 e\u0161te dokon\u010di\u0165), v ide\u00e1lnom pr\u00edpade je jeho hodnota na nule. Prejdeme si s ved\u00facim t\u00edmu jednotliv\u00e9 user stories, ktor\u00e9 n\u00e1m ohodnot\u00ed story pointami (vyhodnocuje, \u010di sme splnili definition of done pre jednotliv\u00e9 user stories). Po akceptovan\u00ed v\u0161etk\u00fdch user stories ved\u00facim t\u00edmu m\u00f4\u017eeme iter\u00e1ciu uzavrie\u0165. V druhej \u010dasti stretnutia pl\u00e1nujeme nasleduj\u00faci \u0161print. Spolo\u010dne \u0161pecifikujeme user stories, ktor\u00e9 s\u00fa s\u00fa\u010das\u0165ou \u0161print backlogu a po\u010das \u0161printu tieto user stories z\u00e1sadne nemen\u00edme. Pred zara\u010fovan\u00edm user stories do backlogu vyhodnocujeme jednotlivo ka\u017ed\u00fa user story pr\u00edslu\u0161n\u00fdm bodov\u00fdm ohodnoten\u00edm (story points), ktor\u00e9 ur\u010duj\u00fa zlo\u017eitos\u0165 a relat\u00edvnu \u010dasov\u00fa n\u00e1ro\u010dnos\u0165 konkr\u00e9tnej \u00falohy. Ka\u017ed\u00fa user story si rozdel\u00edme na tasky. V pr\u00edpade, \u017ee toto nestihneme na stretnut\u00ed, ka\u017ed\u00fd je povinn\u00fd si rozdeli\u0165 svoje user stories, na ktor\u00fdch bude pracova\u0165 na tasky, e\u0161te v ten de\u0148 . 2. stretnutie (bez ved\u00faceho) \u00b6 Po\u010das tohto stretnutia pracujeme na priraden\u00fdch taskoch a konzultujeme pr\u00edpadn\u00e9 probl\u00e9my. 3. stretnutie (s ved\u00facim) \u00b6 Na tomto stretnut\u00ed sa zameriavame na rie\u0161enie vzniknut\u00fdch probl\u00e9mov po\u010das prvej \u010dasti \u0161printu. V tejto f\u00e1ze \u0161printu by u\u017e mali by\u0165 v\u0161etky user stories aspo\u0148 za\u010dat\u00e9. Venujeme sa tie\u017e \u00faprave backlogu. Vym\u00fd\u0161\u013eame nove user stories, ohodnocujeme ich a prioritizujeme. 4. stretnutie (bez ved\u00faceho) \u00b6 Na poslednom stretnut\u00ed v iter\u00e1cii vytv\u00e1rame pod doh\u013eadom scrum mastera retrospekt\u00edvu, na ktorej zap\u00ed\u0161e ka\u017ed\u00fd \u010dlen t\u00edmu v\u0161etky pozit\u00edva, negat\u00edva a n\u00e1pady na vylep\u0161enie za uplynul\u00fd \u0161print. Po zap\u00edsan\u00ed t\u00fdchto inform\u00e1cii do dokumentu je uverejnen\u00fd na t\u00edmovej web str\u00e1nke. Po\u010das tohto stretnutia si tie\u017e vyhodnot\u00edme percentu\u00e1lny podiel pr\u00e1ce na jednotliv\u00fdch user stories za uplynul\u00fd \u0161print. \u010ealej pokra\u010dujeme samostatnou pr\u00e1cou na priraden\u00fdch taskoch.","title":"Metodika iter\u00e1ci\u00ed"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/#metodika-iter\u00e1ci\u00ed","text":"Po\u010das ka\u017ed\u00e9ho \u0161printu m\u00e1me \u0161tyri stretnutia, dve s ved\u00facim t\u00edmu a dve bez neho. Ka\u017ed\u00e9 stretnutie za\u010d\u00edna Stand Upom. Aj ke\u010f by sa mal uskuto\u010d\u0148ova\u0165 ka\u017ed\u00fdch 24 hod., tento princ\u00edp uskuto\u010d\u0148ujeme 2x za t\u00fd\u017ede\u0148 vzh\u013eadom na podmienky a rozvrh predmetu. V tejto diskusii scrum master dohliada na to, aby ka\u017ed\u00fd \u010dlen t\u00edmu (vr\u00e1tane scrum mastra) zodpovedali na ot\u00e1zky: Na \u010dom som pracoval za dobu od posledn\u00e9ho stretnutia Na \u010dom sa chyst\u00e1m pracova\u0165 Ak\u00e9 probl\u00e9my m\u00e1m v s\u00favislosti s mojou \u00falohou","title":"Metodika iter\u00e1ci\u00ed"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/#1-stretnutie-s-ved\u00facim","text":"V prvej \u010dasti tohto stretnutia ukon\u010dujeme predch\u00e1dzaj\u00faci \u0161print. Vyhodnot\u00edme celkov\u00fa iter\u00e1ciu, zhodnot\u00edme burndown chart (graf zobrazuj\u00faci mno\u017estvo pr\u00e1ce, ktor\u00e9 je nutn\u00e9 e\u0161te dokon\u010di\u0165), v ide\u00e1lnom pr\u00edpade je jeho hodnota na nule. Prejdeme si s ved\u00facim t\u00edmu jednotliv\u00e9 user stories, ktor\u00e9 n\u00e1m ohodnot\u00ed story pointami (vyhodnocuje, \u010di sme splnili definition of done pre jednotliv\u00e9 user stories). Po akceptovan\u00ed v\u0161etk\u00fdch user stories ved\u00facim t\u00edmu m\u00f4\u017eeme iter\u00e1ciu uzavrie\u0165. V druhej \u010dasti stretnutia pl\u00e1nujeme nasleduj\u00faci \u0161print. Spolo\u010dne \u0161pecifikujeme user stories, ktor\u00e9 s\u00fa s\u00fa\u010das\u0165ou \u0161print backlogu a po\u010das \u0161printu tieto user stories z\u00e1sadne nemen\u00edme. Pred zara\u010fovan\u00edm user stories do backlogu vyhodnocujeme jednotlivo ka\u017ed\u00fa user story pr\u00edslu\u0161n\u00fdm bodov\u00fdm ohodnoten\u00edm (story points), ktor\u00e9 ur\u010duj\u00fa zlo\u017eitos\u0165 a relat\u00edvnu \u010dasov\u00fa n\u00e1ro\u010dnos\u0165 konkr\u00e9tnej \u00falohy. Ka\u017ed\u00fa user story si rozdel\u00edme na tasky. V pr\u00edpade, \u017ee toto nestihneme na stretnut\u00ed, ka\u017ed\u00fd je povinn\u00fd si rozdeli\u0165 svoje user stories, na ktor\u00fdch bude pracova\u0165 na tasky, e\u0161te v ten de\u0148 .","title":"1. stretnutie (s ved\u00facim)"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/#2-stretnutie-bez-ved\u00faceho","text":"Po\u010das tohto stretnutia pracujeme na priraden\u00fdch taskoch a konzultujeme pr\u00edpadn\u00e9 probl\u00e9my.","title":"2. stretnutie (bez ved\u00faceho)"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/#3-stretnutie-s-ved\u00facim","text":"Na tomto stretnut\u00ed sa zameriavame na rie\u0161enie vzniknut\u00fdch probl\u00e9mov po\u010das prvej \u010dasti \u0161printu. V tejto f\u00e1ze \u0161printu by u\u017e mali by\u0165 v\u0161etky user stories aspo\u0148 za\u010dat\u00e9. Venujeme sa tie\u017e \u00faprave backlogu. Vym\u00fd\u0161\u013eame nove user stories, ohodnocujeme ich a prioritizujeme.","title":"3. stretnutie (s ved\u00facim)"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_iteracii/#4-stretnutie-bez-ved\u00faceho","text":"Na poslednom stretnut\u00ed v iter\u00e1cii vytv\u00e1rame pod doh\u013eadom scrum mastera retrospekt\u00edvu, na ktorej zap\u00ed\u0161e ka\u017ed\u00fd \u010dlen t\u00edmu v\u0161etky pozit\u00edva, negat\u00edva a n\u00e1pady na vylep\u0161enie za uplynul\u00fd \u0161print. Po zap\u00edsan\u00ed t\u00fdchto inform\u00e1cii do dokumentu je uverejnen\u00fd na t\u00edmovej web str\u00e1nke. Po\u010das tohto stretnutia si tie\u017e vyhodnot\u00edme percentu\u00e1lny podiel pr\u00e1ce na jednotliv\u00fdch user stories za uplynul\u00fd \u0161print. \u010ealej pokra\u010dujeme samostatnou pr\u00e1cou na priraden\u00fdch taskoch.","title":"4. stretnutie (bez ved\u00faceho)"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_riadenia_uloh/","text":"Metodika riadenia \u00faloh \u00b6 Na riadenie \u00faloh pou\u017e\u00edvame n\u00e1stroj Azure DevOps. \u017divotn\u00fd proces User Story \u00b6 Backlog Po identifikovan\u00ed sa user story prid\u00e1 do backlogu a nach\u00e1dza sa v stave New . User stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v backlogu nemusia ma\u0165 kompletn\u00fd alebo v\u00f4bec nejak\u00fd opis, nie s\u00fa rozdelen\u00e9 na tasky ani nie je ohodnoten\u00e1 ich zlo\u017eitos\u0165. User stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v backlogu n\u00e1m sl\u00fa\u017eia hlavne ako zdroj n\u00e1padov a funkcionality, ktor\u00fa by sme chceli niekedy v projekte ma\u0165. Ready to plan User stories, ktor\u00e9 maj\u00fa pridan\u00fd opis, sa pres\u00favaj\u00fa do stavu Ready to plan . Nad user stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v tomto stave, sa m\u00f4\u017eeme hlb\u0161ie zam\u00fd\u0161\u013ea\u0165, rozde\u013eova\u0165 ich na tasky a ohodnocova\u0165 ich zlo\u017eitos\u0165. Plan done V pr\u00edpade, \u017ee u\u017e m\u00e1 user story pridan\u00fd opis, je rozdelen\u00e1 na jednotliv\u00e9 tasky a je odhadnut\u00e1 jej zlo\u017eitos\u0165, m\u00f4\u017eeme ju presun\u00fa\u0165 do stavu Planned . Znamen\u00e1 to, \u017ee user story je pripraven\u00e1 na to, aby mohla by\u0165 vybran\u00e1 do \u0161printu. Ready to develop User stories, ktor\u00e9 boli vybran\u00e9 do \u0161printu, sa pres\u00favaj\u00fa do stavu Ready to develop . Ako t\u00edm sa zav\u00e4zujeme, \u017ee tieto stories bud\u00fa do konca \u0161printu v stave To accept . Ka\u017ed\u00e1 user story v tomto stave mus\u00ed by\u0165 niekomu priraden\u00e1. Ten, komu je user story priraden\u00e1, je potom zodpovedn\u00fd za jej dokon\u010denie. To znamen\u00e1, \u017ee db\u00e1 na to, aby \u013eudia participuj\u00faci na tejto user story, za\u010dali na nej v\u010das pracova\u0165, pr\u00edpadne pom\u00e1ha rie\u0161i\u0165 vzniknut\u00e9 probl\u00e9my. Develop doing Akon\u00e1hle sa na user story za\u010dne pracova\u0165 (aspo\u0148 jeden z jej taskov je v stave In Progress ), pres\u00fava sa do stavu In development . Ready to review Po dokon\u010den\u00ed v\u0161etk\u00fdch taskov prisl\u00fachaj\u00facich k danej user story sa t\u00e1to story pres\u00fava do stavu Ready to review . Akon\u00e1hle je user story v tomto stave, je potrebn\u00e9, aby niekto skontroloval pr\u00e1cu, ktor\u00e1 sa na tejto story vykonala. To sa m\u00f4\u017ee udia\u0165 dvomi sp\u00f4sobmi. Prv\u00fd sp\u00f4sob je \u017ee ten, kto je zodpovedn\u00fd za dan\u00fa user story vytvor\u00ed task na review a prirad\u00ed ho niekomu na kontrolu. Druh\u00e1 mo\u017enos\u0165 je, \u017ee user story nie je nikomu priraden\u00e1 na kontrolu. V takomto pr\u00edpade bude robi\u0165 review ten, kto m\u00e1 aktu\u00e1lne \u010das alebo schopnosti na review. Reviewer si s\u00e1m vytvor\u00ed task na review a prirad\u00ed si ho. In review Akon\u00e1hle za\u010dne reviewer pracova\u0165 na kontrole user story, pres\u00fava sa do stavu In review . V tomto stave zost\u00e1va do momentu, k\u00fdm reviewer nedokon\u010d\u00ed kontrolu. To znamen\u00e1, \u017ee v\u0161etky tasky s\u00fa dokon\u010den\u00e9 a sp\u013a\u0148aj\u00fa definition of done. Z\u00e1rove\u0148 s\u00fa splen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ri\u00e1 danej user story a v\u0161etky zapracovan\u00e9 zmeny s\u00fa mergnut\u00e9 v develop vetve pr\u00edslu\u0161n\u00e9ho repozit\u00e1ra. V pr\u00edpade, \u017ee toto v\u0161etko je splnen\u00e9, pres\u00fava sa user story do stavu To accept . V opa\u010dnom pr\u00edpade sa user story pres\u00fava nasp\u00e4\u0165 do stavu In development a je potrebn\u00e9 opravi\u0165 n\u00e1jden\u00e9 nedostatky. To accept User stories, ktor\u00e9 pre\u0161li review sa nach\u00e1dzaj\u00fa v stave To accept . V tomto stave zost\u00e1vaj\u00fa a\u017e do momentu ich akceptovania alebo neakceptovania product ownerom. V pr\u00edpade neakceptovania sa user story pres\u00fava do stavu In development a je potrebn\u00e9 zapracova\u0165 v\u0161etky nedostatky. Done V pr\u00edpade akceptovania product ownerom sa user story pres\u00fava do stavu Done . Tento stav je kone\u010dn\u00fd. \u017divotn\u00fd proces taskov v \u0161printe \u00b6 To Do V\u0161etky novo vytvoren\u00e9 tasky pre nejak\u00fa user story sa najprv nach\u00e1dzaj\u00fa v stave To Do . Ka\u017ed\u00fd task v tomto stave je niekomu priraden\u00fd, m\u00e1 nap\u00edsan\u00fd opis a odhadovan\u00fa \u010dasov\u00fa zlo\u017eitos\u0165 v hodin\u00e1ch. In Progress Po za\u010dat\u00ed pr\u00e1ce na nejakom tasku sa tento task pres\u00fava do stavu In progress . To, \u017ee sa task nach\u00e1dza v tomto stave zna\u010d\u00ed, \u017ee rozpracovan\u00fd. Na tak\u00fdchto taskoch m\u00f4\u017eeme a mali by sme upravova\u0165 zost\u00e1vaj\u00faci \u010das dokon\u010denia tasku. Tento \u010das sa m\u00f4\u017ee zvy\u0161ova\u0165 alebo zni\u017eova\u0165 pod\u013ea toho, \u010di pr\u00e1ca na tasku ub\u00fada, alebo sme narazili na nejak\u00fd probl\u00e9m a pr\u00e1ca sa teda pred\u013a\u017ei. Done Po dokon\u010den\u00ed tasku sa pres\u00fava do stavu Done .","title":"Metodika riadenia \u00faloh"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_riadenia_uloh/#metodika-riadenia-\u00faloh","text":"Na riadenie \u00faloh pou\u017e\u00edvame n\u00e1stroj Azure DevOps.","title":"Metodika riadenia \u00faloh"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_riadenia_uloh/#\u017eivotn\u00fd-proces-user-story","text":"Backlog Po identifikovan\u00ed sa user story prid\u00e1 do backlogu a nach\u00e1dza sa v stave New . User stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v backlogu nemusia ma\u0165 kompletn\u00fd alebo v\u00f4bec nejak\u00fd opis, nie s\u00fa rozdelen\u00e9 na tasky ani nie je ohodnoten\u00e1 ich zlo\u017eitos\u0165. User stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v backlogu n\u00e1m sl\u00fa\u017eia hlavne ako zdroj n\u00e1padov a funkcionality, ktor\u00fa by sme chceli niekedy v projekte ma\u0165. Ready to plan User stories, ktor\u00e9 maj\u00fa pridan\u00fd opis, sa pres\u00favaj\u00fa do stavu Ready to plan . Nad user stories, ktor\u00e9 sa nach\u00e1dzaj\u00fa v tomto stave, sa m\u00f4\u017eeme hlb\u0161ie zam\u00fd\u0161\u013ea\u0165, rozde\u013eova\u0165 ich na tasky a ohodnocova\u0165 ich zlo\u017eitos\u0165. Plan done V pr\u00edpade, \u017ee u\u017e m\u00e1 user story pridan\u00fd opis, je rozdelen\u00e1 na jednotliv\u00e9 tasky a je odhadnut\u00e1 jej zlo\u017eitos\u0165, m\u00f4\u017eeme ju presun\u00fa\u0165 do stavu Planned . Znamen\u00e1 to, \u017ee user story je pripraven\u00e1 na to, aby mohla by\u0165 vybran\u00e1 do \u0161printu. Ready to develop User stories, ktor\u00e9 boli vybran\u00e9 do \u0161printu, sa pres\u00favaj\u00fa do stavu Ready to develop . Ako t\u00edm sa zav\u00e4zujeme, \u017ee tieto stories bud\u00fa do konca \u0161printu v stave To accept . Ka\u017ed\u00e1 user story v tomto stave mus\u00ed by\u0165 niekomu priraden\u00e1. Ten, komu je user story priraden\u00e1, je potom zodpovedn\u00fd za jej dokon\u010denie. To znamen\u00e1, \u017ee db\u00e1 na to, aby \u013eudia participuj\u00faci na tejto user story, za\u010dali na nej v\u010das pracova\u0165, pr\u00edpadne pom\u00e1ha rie\u0161i\u0165 vzniknut\u00e9 probl\u00e9my. Develop doing Akon\u00e1hle sa na user story za\u010dne pracova\u0165 (aspo\u0148 jeden z jej taskov je v stave In Progress ), pres\u00fava sa do stavu In development . Ready to review Po dokon\u010den\u00ed v\u0161etk\u00fdch taskov prisl\u00fachaj\u00facich k danej user story sa t\u00e1to story pres\u00fava do stavu Ready to review . Akon\u00e1hle je user story v tomto stave, je potrebn\u00e9, aby niekto skontroloval pr\u00e1cu, ktor\u00e1 sa na tejto story vykonala. To sa m\u00f4\u017ee udia\u0165 dvomi sp\u00f4sobmi. Prv\u00fd sp\u00f4sob je \u017ee ten, kto je zodpovedn\u00fd za dan\u00fa user story vytvor\u00ed task na review a prirad\u00ed ho niekomu na kontrolu. Druh\u00e1 mo\u017enos\u0165 je, \u017ee user story nie je nikomu priraden\u00e1 na kontrolu. V takomto pr\u00edpade bude robi\u0165 review ten, kto m\u00e1 aktu\u00e1lne \u010das alebo schopnosti na review. Reviewer si s\u00e1m vytvor\u00ed task na review a prirad\u00ed si ho. In review Akon\u00e1hle za\u010dne reviewer pracova\u0165 na kontrole user story, pres\u00fava sa do stavu In review . V tomto stave zost\u00e1va do momentu, k\u00fdm reviewer nedokon\u010d\u00ed kontrolu. To znamen\u00e1, \u017ee v\u0161etky tasky s\u00fa dokon\u010den\u00e9 a sp\u013a\u0148aj\u00fa definition of done. Z\u00e1rove\u0148 s\u00fa splen\u00e9 akcepta\u010dn\u00e9 krit\u00e9ri\u00e1 danej user story a v\u0161etky zapracovan\u00e9 zmeny s\u00fa mergnut\u00e9 v develop vetve pr\u00edslu\u0161n\u00e9ho repozit\u00e1ra. V pr\u00edpade, \u017ee toto v\u0161etko je splnen\u00e9, pres\u00fava sa user story do stavu To accept . V opa\u010dnom pr\u00edpade sa user story pres\u00fava nasp\u00e4\u0165 do stavu In development a je potrebn\u00e9 opravi\u0165 n\u00e1jden\u00e9 nedostatky. To accept User stories, ktor\u00e9 pre\u0161li review sa nach\u00e1dzaj\u00fa v stave To accept . V tomto stave zost\u00e1vaj\u00fa a\u017e do momentu ich akceptovania alebo neakceptovania product ownerom. V pr\u00edpade neakceptovania sa user story pres\u00fava do stavu In development a je potrebn\u00e9 zapracova\u0165 v\u0161etky nedostatky. Done V pr\u00edpade akceptovania product ownerom sa user story pres\u00fava do stavu Done . Tento stav je kone\u010dn\u00fd.","title":"\u017divotn\u00fd proces User Story"},{"location":"dokumentacia_k_riadeniu/metodiky/metodika_riadenia_uloh/#\u017eivotn\u00fd-proces-taskov-v-\u0161printe","text":"To Do V\u0161etky novo vytvoren\u00e9 tasky pre nejak\u00fa user story sa najprv nach\u00e1dzaj\u00fa v stave To Do . Ka\u017ed\u00fd task v tomto stave je niekomu priraden\u00fd, m\u00e1 nap\u00edsan\u00fd opis a odhadovan\u00fa \u010dasov\u00fa zlo\u017eitos\u0165 v hodin\u00e1ch. In Progress Po za\u010dat\u00ed pr\u00e1ce na nejakom tasku sa tento task pres\u00fava do stavu In progress . To, \u017ee sa task nach\u00e1dza v tomto stave zna\u010d\u00ed, \u017ee rozpracovan\u00fd. Na tak\u00fdchto taskoch m\u00f4\u017eeme a mali by sme upravova\u0165 zost\u00e1vaj\u00faci \u010das dokon\u010denia tasku. Tento \u010das sa m\u00f4\u017ee zvy\u0161ova\u0165 alebo zni\u017eova\u0165 pod\u013ea toho, \u010di pr\u00e1ca na tasku ub\u00fada, alebo sme narazili na nejak\u00fd probl\u00e9m a pr\u00e1ca sa teda pred\u013a\u017ei. Done Po dokon\u010den\u00ed tasku sa pres\u00fava do stavu Done .","title":"\u017divotn\u00fd proces taskov v \u0161printe"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/motivacia_pre_jednotlive_temy/","text":"\u2b50 Motiv\u00e1cie pre jednotliv\u00e9 t\u00e9my \u00b6 T\u00e9ma 18 - FIF\u00e9 International Cat Show [MIAOW] \u00b6 T\u00e9ma n\u00e1s oslovila svojou v\u0161estrannos\u0165ou, vytvori\u0165 tak\u00fd komplexn\u00fd inteligentn\u00fd informa\u010dn\u00fd syst\u00e9m znie ako skvel\u00e1 v\u00fdzva, v ktorej by sa n\u00e1\u0161 t\u00edm r\u00e1d anga\u017eoval pomocou vlastn\u00fdch pr\u00ednosov. Z\u00e1rove\u0148 spolupr\u00e1ca s priemyseln\u00fdm partnerom by bola u\u017eito\u010dnou sk\u00fasenos\u0165ou, ktor\u00e1 by n\u00e1m mohla pom\u00f4c\u0165 v bud\u00facom kari\u00e9rnom \u017eivote. Na tak\u00fato spolupr\u00e1cu sme sa v\u0161etci pripravovali do ur\u010ditej miery na niektor\u00fdch predmetoch bakal\u00e1rskeho \u0161t\u00fadia, ale najm\u00e4 v praxi, ke\u010f\u017ee v\u00e4\u010d\u0161ina \u010dlenov t\u00edmu u\u017e pracuje a stretli sme sa s vytv\u00e1ran\u00edm softv\u00e9ru na mieru pod\u013ea po\u017eiadaviek z\u00e1kazn\u00edka, resp. zad\u00e1vate\u013ea. N\u00e1\u0161 t\u00edm m\u00e1 pokro\u010dil\u00e9 znalosti v spracovan\u00ed \u00fadajov a pr\u00e1ci s datab\u00e1zami, taktie\u017e m\u00e1me sk\u00fasenosti s v\u00fdvojom mobiln\u00fdch aplik\u00e1ci\u00ed a pr\u00e1ve to je jedna z oblast\u00ed, ktor\u00e9 preferujeme pri v\u00fdbere t\u00edmov\u00e9ho projektu. Viacer\u00ed z n\u00e1s si tie\u017e osvojili hlb\u0161ie poznatky o n\u00e1vrhu u\u017e\u00edvate\u013esk\u00e9ho rozhrania vo volite\u013en\u00fdch predmetoch, pri\u010dom v\u0161etci sme absolvovali predmet zameran\u00fd na fundament\u00e1lny n\u00e1vrh u\u017e\u00edvate\u013esk\u00e9ho rozhrania. Rovnako sme mali mo\u017enos\u0165 pracova\u0165 na v\u00fdvoji element\u00e1rneho informa\u010dn\u00e9ho syst\u00e9mu na predmete bakal\u00e1rskeho \u0161t\u00fadia, ktor\u00fd vyu\u017e\u00edval architekt\u00faru rozhrania REST. Mysl\u00edme si, \u017ee na\u0161e poznatky a sk\u00fasenosti z\u00edskan\u00e9 \u010di u\u017e v \u0161kole, alebo mimo nej s\u00fa dosta\u010duj\u00face na realiz\u00e1ciu tohto projektu. Ve\u013emi zauj\u00edmavo znie aj po\u017eiadavka na komplexn\u00fd projektov\u00fd mana\u017ement a hoci n\u00e1\u0161 t\u00edm doposia\u013e nem\u00e1 sk\u00fasenosti s mana\u017ementom projektov, tak\u00fato \u00falohu by sme si radi vysk\u00fa\u0161ali. Pozit\u00edvne hodnot\u00edme fakt, \u017ee zad\u00e1vate\u013e m\u00e1 presn\u00fa predstavu o tom, ak\u00e9 funkcie by mal syst\u00e9m zabezpe\u010di\u0165. V\u010faka tomu bude n\u00e1\u0161 t\u00edm schopn\u00fd tieto po\u017eiadavky naplni\u0165 tak, aby bol zad\u00e1vate\u013e \u010do najviac spokojn\u00fd. T\u00e9ma 17 - VR laborat\u00f3rium pre di\u0161tan\u010dn\u00e9 vzdel\u00e1vanie [VRLab] \u00b6 Pre niektorych clenov tymu sa tato tema nachadzala na prvom mieste, no po dlhsej konzultacii sme sa ju rozhodli zaradit na druhe miesto. Na nesom liste priorit sa nachadza tak vysoko z dvoch dvovodov 1. Tema je velmi zaujimava (ako casto mozte vyvyjat aplikacie pre rozsirenu realitu) 2. Schopnosti, skusenosti a preferencie nasho tymu by sa skvelo hodili na riesenie tohto projektu Preco je tato tema podla nas zaujimava? Pretoze oblast vyvoja apliacii a hier pre vyrtualnu realitu je nove a rychlo sa zorvijajuce odvetvie, v ktorom by sme radi nabrali nove, niektori prve skusenosti. Dalej vyvoj hier je je tiez zaujimave odvetvie v ktorom sa nejaky clenovia tymu (Ivana a Niko) planuju pohybovat aj dalej, ale ani pre zvysok tymu to nieje oblast v ktorej by sa bali ako Danko diktatu, prave naopak, radi by sa v nej zacali pohybovat. Ale teraz k bodu dva. Najvecsie skusenosti s touto temou ma z nasho tymu Niko. Vyvoju aplikacii do rozsirejej reality sa venuje uz cez rok aj na profesionalnej urovni, v startupe Cviker, vyvyjaju aplikaciu Akular(link na google store) v Unity3D. Iste rozsirena realita \u2260 vyrtualna realita, no minimalne ma bohate skusenosti s prostredim unity, ktoremu sa venuje aj vo volnom case a ktore bude predstavovat hlavny nastroj na vyvoj tejto aplikacie (je spomenute v zadani a za nas tym je to skvele prostredie). Tiez ma zapisany predmet vyvoj pc hier, rovnako ako dalsi clen tymu Ivana, ktora ma zu tiez skusenosti s unity aj ked nie na urovni Nika. Ostatny clenovia tymu nemaju predchadzajuce skusenosti s unity, alebo vyvojom hier, ale nemali by problem sa to naucit, a vyjadrili nadsenie z tejto temy. Vsetci zu ale maju skusenosti s vyvojom aplikacii alebo maju ine skusenosti a predispozicie ktore by sme vedeli vyuzit niekde inde vo vyvoji. Nasa predstava riesenia projektu, aj ked je este otvorena na diskusiu a pripadne upravy, vyzera zhruba nejako takto. Aplikacia by sa vyvijala pre virtualu realitu, podla headsetov ktory by boli k dispozicii, no tiez by sme chceli spravit jednoduchsiu verziu spustitelnu na mobilnych zariadeniach, pre moznost zachytenia vecsieho publika. Do aplikacie, laboratoria, by sa vedelo pripojit viacero ziakov naraz, pripadne aj ucitel/ucitelia. Aplikacia by vsak mala obsahovat aj automatickeho ucitela, pomocnika ktory by zadaval experimenty, vysvetloval ktore zariadenie sluzi na co a podobne. Ulohou ziakov by potom bolo vykonavat tieto experimenty vo vyrualnom laboratoriu. Samotne laboratorium by bolo realizovane ako sandbox, vsetky potrebne veci by sa nachadzali v laboratoriu a bolo by ulohou ziakov ich najst a spravne dat dokopy, ziaci by mali moznost spravit pri experimentoch chyby s ich pripadnymi nasledkami, nebezpecie by im hrozit nemalo a vedelo by to lepsie nasimulovat realne prostredie, kde asi nebudu mat k dispozicii iba uzku cast pomocok ktore iste suvisia s experimentom. Nase riesenie ale este nieje vyrite do kamena a je otvorene na diskusiu. T\u00e9ma 4 - Educational Content Engineering Hub - Datab\u00e1za ot\u00e1zok, odpoved\u00ed, \u00faloh a rie\u0161en\u00ed [ECEH-DU] \u00b6 T\u00e9ma n\u00e1s zaujala najm\u00e4 svojou hlavnou my\u0161lienkou. S \u010dlenmi t\u00edmu sme sa zhodli, \u017ee tak\u00fdto typ databanky ot\u00e1zok a \u00faloh by bol ve\u013emi n\u00e1pomocn\u00fd \u0161tudentom po\u010das ich \u0161t\u00fadia. V\u0161\u00edmame si najm\u00e4 potenci\u00e1l projektu. Zjednodu\u0161en\u00edm procesu u\u010denia by \u0161tudenti u\u0161etrili pre nich drahocenn\u00fd \u010das, \u010do by mohlo vies\u0165 ku skvalitneniu v\u00fdsledkov a spokojnosti \u0161tudentov. Sami by sme existenciu databanky s kone\u010dnou mno\u017einou ot\u00e1zok na sk\u00fa\u0161ky uv\u00edtali aj na na\u0161ej fakulte. \u010eal\u0161\u00edm faktorom, ktor\u00fd prispel k vysokej preferencii danej t\u00e9my je jej realiz\u00e1cia vo forme online prostredia. Pri prvom pre\u010d\u00edtan\u00ed zadania si \u010dlenovia n\u00e1\u0161ho t\u00edmu vedeli predstavi\u0165 poz\u00edcie, ktor\u00e9 by pri pr\u00e1ci na projekte zast\u00e1vali a zoznam \u00faloh, ktor\u00e9 by po\u010das pr\u00e1ce museli plni\u0165. N\u00e1\u0161 t\u00edm disponuje sk\u00fasenos\u0165ami s pr\u00e1cou s datab\u00e1zami a so v\u0161etk\u00fdmi uveden\u00fdmi povinn\u00fdmi technol\u00f3giami. S n\u00e1vrhom architekt\u00fary syst\u00e9mu sa stretli v\u0161etci \u010dlenovia t\u00edmu po\u010das bakal\u00e1rskeho \u0161t\u00fadia. Mysl\u00edme si, \u017ee sme dostato\u010dne schopn\u00ed a sk\u00fasen\u00ed na realiz\u00e1ciu tohto projektu. Za pozit\u00edvum a z\u00e1rove\u0148 v\u00fdzvu vn\u00edmame fakt, \u017ee p\u00f4jde o pokra\u010dovanie projektu, \u010do m\u00f4\u017ee prinies\u0165 ve\u013emi dobr\u00fa a praktick\u00fa sk\u00fasenos\u0165 do pracovn\u00e9ho \u017eivota po ukon\u010den\u00ed \u0161t\u00fadia. Z\u00e1rove\u0148 predstava o tom, \u017ee by nami pridan\u00e1 funkcionalita napomohla k uvedeniu databanky do prev\u00e1dzky na niektorej \u0161kole alebo fakulte je dostato\u010dnou motiv\u00e1ciou.","title":"\u2b50 Motiv\u00e1cie pre jednotliv\u00e9 t\u00e9my"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/motivacia_pre_jednotlive_temy/#-motiv\u00e1cie-pre-jednotliv\u00e9-t\u00e9my","text":"","title":"\u2b50 Motiv\u00e1cie pre jednotliv\u00e9 t\u00e9my"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/motivacia_pre_jednotlive_temy/#t\u00e9ma-18---fif\u00e9-international-cat-show-miaow","text":"T\u00e9ma n\u00e1s oslovila svojou v\u0161estrannos\u0165ou, vytvori\u0165 tak\u00fd komplexn\u00fd inteligentn\u00fd informa\u010dn\u00fd syst\u00e9m znie ako skvel\u00e1 v\u00fdzva, v ktorej by sa n\u00e1\u0161 t\u00edm r\u00e1d anga\u017eoval pomocou vlastn\u00fdch pr\u00ednosov. Z\u00e1rove\u0148 spolupr\u00e1ca s priemyseln\u00fdm partnerom by bola u\u017eito\u010dnou sk\u00fasenos\u0165ou, ktor\u00e1 by n\u00e1m mohla pom\u00f4c\u0165 v bud\u00facom kari\u00e9rnom \u017eivote. Na tak\u00fato spolupr\u00e1cu sme sa v\u0161etci pripravovali do ur\u010ditej miery na niektor\u00fdch predmetoch bakal\u00e1rskeho \u0161t\u00fadia, ale najm\u00e4 v praxi, ke\u010f\u017ee v\u00e4\u010d\u0161ina \u010dlenov t\u00edmu u\u017e pracuje a stretli sme sa s vytv\u00e1ran\u00edm softv\u00e9ru na mieru pod\u013ea po\u017eiadaviek z\u00e1kazn\u00edka, resp. zad\u00e1vate\u013ea. N\u00e1\u0161 t\u00edm m\u00e1 pokro\u010dil\u00e9 znalosti v spracovan\u00ed \u00fadajov a pr\u00e1ci s datab\u00e1zami, taktie\u017e m\u00e1me sk\u00fasenosti s v\u00fdvojom mobiln\u00fdch aplik\u00e1ci\u00ed a pr\u00e1ve to je jedna z oblast\u00ed, ktor\u00e9 preferujeme pri v\u00fdbere t\u00edmov\u00e9ho projektu. Viacer\u00ed z n\u00e1s si tie\u017e osvojili hlb\u0161ie poznatky o n\u00e1vrhu u\u017e\u00edvate\u013esk\u00e9ho rozhrania vo volite\u013en\u00fdch predmetoch, pri\u010dom v\u0161etci sme absolvovali predmet zameran\u00fd na fundament\u00e1lny n\u00e1vrh u\u017e\u00edvate\u013esk\u00e9ho rozhrania. Rovnako sme mali mo\u017enos\u0165 pracova\u0165 na v\u00fdvoji element\u00e1rneho informa\u010dn\u00e9ho syst\u00e9mu na predmete bakal\u00e1rskeho \u0161t\u00fadia, ktor\u00fd vyu\u017e\u00edval architekt\u00faru rozhrania REST. Mysl\u00edme si, \u017ee na\u0161e poznatky a sk\u00fasenosti z\u00edskan\u00e9 \u010di u\u017e v \u0161kole, alebo mimo nej s\u00fa dosta\u010duj\u00face na realiz\u00e1ciu tohto projektu. Ve\u013emi zauj\u00edmavo znie aj po\u017eiadavka na komplexn\u00fd projektov\u00fd mana\u017ement a hoci n\u00e1\u0161 t\u00edm doposia\u013e nem\u00e1 sk\u00fasenosti s mana\u017ementom projektov, tak\u00fato \u00falohu by sme si radi vysk\u00fa\u0161ali. Pozit\u00edvne hodnot\u00edme fakt, \u017ee zad\u00e1vate\u013e m\u00e1 presn\u00fa predstavu o tom, ak\u00e9 funkcie by mal syst\u00e9m zabezpe\u010di\u0165. V\u010faka tomu bude n\u00e1\u0161 t\u00edm schopn\u00fd tieto po\u017eiadavky naplni\u0165 tak, aby bol zad\u00e1vate\u013e \u010do najviac spokojn\u00fd.","title":"T\u00e9ma 18 - FIF\u00e9 International Cat Show [MIAOW]"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/motivacia_pre_jednotlive_temy/#t\u00e9ma-17---vr-laborat\u00f3rium-pre-di\u0161tan\u010dn\u00e9-vzdel\u00e1vanie-vrlab","text":"Pre niektorych clenov tymu sa tato tema nachadzala na prvom mieste, no po dlhsej konzultacii sme sa ju rozhodli zaradit na druhe miesto. Na nesom liste priorit sa nachadza tak vysoko z dvoch dvovodov 1. Tema je velmi zaujimava (ako casto mozte vyvyjat aplikacie pre rozsirenu realitu) 2. Schopnosti, skusenosti a preferencie nasho tymu by sa skvelo hodili na riesenie tohto projektu Preco je tato tema podla nas zaujimava? Pretoze oblast vyvoja apliacii a hier pre vyrtualnu realitu je nove a rychlo sa zorvijajuce odvetvie, v ktorom by sme radi nabrali nove, niektori prve skusenosti. Dalej vyvoj hier je je tiez zaujimave odvetvie v ktorom sa nejaky clenovia tymu (Ivana a Niko) planuju pohybovat aj dalej, ale ani pre zvysok tymu to nieje oblast v ktorej by sa bali ako Danko diktatu, prave naopak, radi by sa v nej zacali pohybovat. Ale teraz k bodu dva. Najvecsie skusenosti s touto temou ma z nasho tymu Niko. Vyvoju aplikacii do rozsirejej reality sa venuje uz cez rok aj na profesionalnej urovni, v startupe Cviker, vyvyjaju aplikaciu Akular(link na google store) v Unity3D. Iste rozsirena realita \u2260 vyrtualna realita, no minimalne ma bohate skusenosti s prostredim unity, ktoremu sa venuje aj vo volnom case a ktore bude predstavovat hlavny nastroj na vyvoj tejto aplikacie (je spomenute v zadani a za nas tym je to skvele prostredie). Tiez ma zapisany predmet vyvoj pc hier, rovnako ako dalsi clen tymu Ivana, ktora ma zu tiez skusenosti s unity aj ked nie na urovni Nika. Ostatny clenovia tymu nemaju predchadzajuce skusenosti s unity, alebo vyvojom hier, ale nemali by problem sa to naucit, a vyjadrili nadsenie z tejto temy. Vsetci zu ale maju skusenosti s vyvojom aplikacii alebo maju ine skusenosti a predispozicie ktore by sme vedeli vyuzit niekde inde vo vyvoji. Nasa predstava riesenia projektu, aj ked je este otvorena na diskusiu a pripadne upravy, vyzera zhruba nejako takto. Aplikacia by sa vyvijala pre virtualu realitu, podla headsetov ktory by boli k dispozicii, no tiez by sme chceli spravit jednoduchsiu verziu spustitelnu na mobilnych zariadeniach, pre moznost zachytenia vecsieho publika. Do aplikacie, laboratoria, by sa vedelo pripojit viacero ziakov naraz, pripadne aj ucitel/ucitelia. Aplikacia by vsak mala obsahovat aj automatickeho ucitela, pomocnika ktory by zadaval experimenty, vysvetloval ktore zariadenie sluzi na co a podobne. Ulohou ziakov by potom bolo vykonavat tieto experimenty vo vyrualnom laboratoriu. Samotne laboratorium by bolo realizovane ako sandbox, vsetky potrebne veci by sa nachadzali v laboratoriu a bolo by ulohou ziakov ich najst a spravne dat dokopy, ziaci by mali moznost spravit pri experimentoch chyby s ich pripadnymi nasledkami, nebezpecie by im hrozit nemalo a vedelo by to lepsie nasimulovat realne prostredie, kde asi nebudu mat k dispozicii iba uzku cast pomocok ktore iste suvisia s experimentom. Nase riesenie ale este nieje vyrite do kamena a je otvorene na diskusiu.","title":"T\u00e9ma 17 - VR laborat\u00f3rium pre di\u0161tan\u010dn\u00e9 vzdel\u00e1vanie [VRLab]"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/motivacia_pre_jednotlive_temy/#t\u00e9ma-4---educational-content-engineering-hub---datab\u00e1za-ot\u00e1zok-odpoved\u00ed-\u00faloh-a-rie\u0161en\u00ed-eceh-du","text":"T\u00e9ma n\u00e1s zaujala najm\u00e4 svojou hlavnou my\u0161lienkou. S \u010dlenmi t\u00edmu sme sa zhodli, \u017ee tak\u00fdto typ databanky ot\u00e1zok a \u00faloh by bol ve\u013emi n\u00e1pomocn\u00fd \u0161tudentom po\u010das ich \u0161t\u00fadia. V\u0161\u00edmame si najm\u00e4 potenci\u00e1l projektu. Zjednodu\u0161en\u00edm procesu u\u010denia by \u0161tudenti u\u0161etrili pre nich drahocenn\u00fd \u010das, \u010do by mohlo vies\u0165 ku skvalitneniu v\u00fdsledkov a spokojnosti \u0161tudentov. Sami by sme existenciu databanky s kone\u010dnou mno\u017einou ot\u00e1zok na sk\u00fa\u0161ky uv\u00edtali aj na na\u0161ej fakulte. \u010eal\u0161\u00edm faktorom, ktor\u00fd prispel k vysokej preferencii danej t\u00e9my je jej realiz\u00e1cia vo forme online prostredia. Pri prvom pre\u010d\u00edtan\u00ed zadania si \u010dlenovia n\u00e1\u0161ho t\u00edmu vedeli predstavi\u0165 poz\u00edcie, ktor\u00e9 by pri pr\u00e1ci na projekte zast\u00e1vali a zoznam \u00faloh, ktor\u00e9 by po\u010das pr\u00e1ce museli plni\u0165. N\u00e1\u0161 t\u00edm disponuje sk\u00fasenos\u0165ami s pr\u00e1cou s datab\u00e1zami a so v\u0161etk\u00fdmi uveden\u00fdmi povinn\u00fdmi technol\u00f3giami. S n\u00e1vrhom architekt\u00fary syst\u00e9mu sa stretli v\u0161etci \u010dlenovia t\u00edmu po\u010das bakal\u00e1rskeho \u0161t\u00fadia. Mysl\u00edme si, \u017ee sme dostato\u010dne schopn\u00ed a sk\u00fasen\u00ed na realiz\u00e1ciu tohto projektu. Za pozit\u00edvum a z\u00e1rove\u0148 v\u00fdzvu vn\u00edmame fakt, \u017ee p\u00f4jde o pokra\u010dovanie projektu, \u010do m\u00f4\u017ee prinies\u0165 ve\u013emi dobr\u00fa a praktick\u00fa sk\u00fasenos\u0165 do pracovn\u00e9ho \u017eivota po ukon\u010den\u00ed \u0161t\u00fadia. Z\u00e1rove\u0148 predstava o tom, \u017ee by nami pridan\u00e1 funkcionalita napomohla k uvedeniu databanky do prev\u00e1dzky na niektorej \u0161kole alebo fakulte je dostato\u010dnou motiv\u00e1ciou.","title":"T\u00e9ma 4 - Educational Content Engineering Hub - Datab\u00e1za ot\u00e1zok, odpoved\u00ed, \u00faloh a rie\u0161en\u00ed [ECEH-DU]"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/predstavenie_timu/","text":"\ud83d\udc65 Predstavenie t\u00edmu \u00b6 N\u00e1\u0161 t\u00edm sa sklad\u00e1 zo \u0161iestich \u010dlenov. Nikod\u00e9m Adler, Ivana Frankovi\u010dov\u00e1, Samuel \u0160ouc, Michal Jozefek, Michael Kro\u010dka a Andrej Hoferica. Piati z n\u00e1s \u0161tudujeme inteligentn\u00e9 softv\u00e9rov\u00e9 syst\u00e9my a jeden \u0161tuduje internetov\u00e9 technol\u00f3gie. N\u00e1\u0161 t\u00edm nie je zameran\u00fd len na jednu oblas\u0165 informatiky, ale pokr\u00fdvame \u0161irok\u00e9 spektrum predmetov, ktor\u00e9 sa vyu\u010duj\u00fa na in\u017einierskom \u0161t\u00fadiu od oblasti po\u010d\u00edta\u010dov\u00e9ho videnia, cez spracovanie ve\u013ek\u00fdch d\u00e1t a\u017e po vnoren\u00e9 syst\u00e9my. V\u00e4\u010d\u0161ina \u010dlenov t\u00edmu u\u017e m\u00e1 predch\u00e1dzaj\u00face sk\u00fasenosti s pr\u00e1cou na t\u00edmov\u00fdch projektoch, teda pl\u00e1novanie projektu, stand-upy a pr\u00e1ca s viacer\u00fdmi \u013eu\u010fmi pre n\u00e1s nie s\u00fa novinka a ur\u010dite nebudeme ma\u0165 probl\u00e9m pom\u00f4c\u0165 nabehn\u00fa\u0165 do tohto koloto\u010da \u010dlenom, ktor\u00ed s t\u00edmov\u00fdm projektom sk\u00fasenos\u0165 nemaj\u00fa. Rovnako ako zameranie na\u0161ich predmetov v \u0161kole, aj na\u0161e predch\u00e1dzaj\u00face sk\u00fasenosti mimo \u0161koly s\u00fa r\u00f4znorod\u00e9: Niko sa mimo \u0161koly venuje tvorbe mobiln\u00fdch aplik\u00e1ci\u00ed pre roz\u0161\u00edren\u00fa realitu na platformy Android a iOS v prostred\u00ed Unity. Pr\u00e1ci s Unity sa venuje aj vo svojom vo\u013enom \u010dase. Zap\u00edsal si predmet N\u00e1vrh a v\u00fdvoj po\u010d\u00edta\u010dov\u00fdch hier, ktor\u00fd mu v Unity e\u0161te viac roz\u0161\u00edri jeho znalosti. Ivka ma sk\u00fasenosti s tvorbou webov\u00fdch aplik\u00e1ci\u00ed v ASP.NET Core a vo vo\u013enom \u010dase sa venuje UX dizajnu a navrhovaniu pou\u017e\u00edvate\u013esk\u00fdch rozhran\u00ed. Taktie\u017e m\u00e1 zap\u00edsan\u00fd predmet N\u00e1vrh a v\u00fdvoj po\u010d\u00edta\u010dov\u00fdch hier, kde roz\u0161\u00edri svoje znalosti aj v tomto smere. A\u010fo sa venuje automatizovan\u00e9mu testovaniu - hlavne regresn\u00e9mu, ale s\u010dasti aj jednotkov\u00e9mu testovaniu. Rob\u00ed v TCL a popritom skripty v Bashi. Vo vo\u013enom \u010dase sa venuje Pythonu (kni\u017enice ako pandas, numpy, selenium). Mi\u0161o m\u00e1 sk\u00fasenosti s umelou inteligenciou a strojov\u00fdm u\u010den\u00edm, tvorbou webov\u00fdch str\u00e1nok a viacvrstvov\u00fdch aplik\u00e1cii (JAVA a JEE). Tie\u017e sa hrabe v Pythone, konkr\u00e9tne kni\u017enice pandas, numpy, scikit-learn, keras a tensorflow. Zauj\u00edma ho spracovanie d\u00e1t, \u010do je d\u00f4vodom, pre\u010do si vybral aj predmet Vyh\u013ead\u00e1vanie inform\u00e1ci\u00ed. Jo\u017eo (Michal Jozefek) m\u00e1 sk\u00fasenosti s tvorbou mobiln\u00fdch aplik\u00e1ci\u00ed pre Android, tvorbou datab\u00e1z, programovan\u00edm backendu a pr\u00e1cou so serverom pomocou XAMMPu. Na svoju pr\u00e1cu pou\u017e\u00edva najm\u00e4 jazyky Java a PHP. Samo m\u00e1 sk\u00fasenosti najm\u00e4 v oblasti pr\u00e1ce s datab\u00e1zami, konkr\u00e9tne PostgreSQL a MySQL. Taktie\u017e v r\u00e1mci n\u00e1plne pr\u00e1ce v zamestnan\u00ed vykon\u00e1va \u00fapravu tabu\u013ekov\u00fdch d\u00e1t v Pythone s kni\u017enicami pandas a numpy. V r\u00e1mci s\u00fa\u010dasn\u00e9ho zamestnania naprogramoval v Node.js middleware, ktor\u00fd pomohol pri prechode na nov\u00fd syst\u00e9m.","title":"\ud83d\udc65 Predstavenie t\u00edmu"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/predstavenie_timu/#-predstavenie-t\u00edmu","text":"N\u00e1\u0161 t\u00edm sa sklad\u00e1 zo \u0161iestich \u010dlenov. Nikod\u00e9m Adler, Ivana Frankovi\u010dov\u00e1, Samuel \u0160ouc, Michal Jozefek, Michael Kro\u010dka a Andrej Hoferica. Piati z n\u00e1s \u0161tudujeme inteligentn\u00e9 softv\u00e9rov\u00e9 syst\u00e9my a jeden \u0161tuduje internetov\u00e9 technol\u00f3gie. N\u00e1\u0161 t\u00edm nie je zameran\u00fd len na jednu oblas\u0165 informatiky, ale pokr\u00fdvame \u0161irok\u00e9 spektrum predmetov, ktor\u00e9 sa vyu\u010duj\u00fa na in\u017einierskom \u0161t\u00fadiu od oblasti po\u010d\u00edta\u010dov\u00e9ho videnia, cez spracovanie ve\u013ek\u00fdch d\u00e1t a\u017e po vnoren\u00e9 syst\u00e9my. V\u00e4\u010d\u0161ina \u010dlenov t\u00edmu u\u017e m\u00e1 predch\u00e1dzaj\u00face sk\u00fasenosti s pr\u00e1cou na t\u00edmov\u00fdch projektoch, teda pl\u00e1novanie projektu, stand-upy a pr\u00e1ca s viacer\u00fdmi \u013eu\u010fmi pre n\u00e1s nie s\u00fa novinka a ur\u010dite nebudeme ma\u0165 probl\u00e9m pom\u00f4c\u0165 nabehn\u00fa\u0165 do tohto koloto\u010da \u010dlenom, ktor\u00ed s t\u00edmov\u00fdm projektom sk\u00fasenos\u0165 nemaj\u00fa. Rovnako ako zameranie na\u0161ich predmetov v \u0161kole, aj na\u0161e predch\u00e1dzaj\u00face sk\u00fasenosti mimo \u0161koly s\u00fa r\u00f4znorod\u00e9: Niko sa mimo \u0161koly venuje tvorbe mobiln\u00fdch aplik\u00e1ci\u00ed pre roz\u0161\u00edren\u00fa realitu na platformy Android a iOS v prostred\u00ed Unity. Pr\u00e1ci s Unity sa venuje aj vo svojom vo\u013enom \u010dase. Zap\u00edsal si predmet N\u00e1vrh a v\u00fdvoj po\u010d\u00edta\u010dov\u00fdch hier, ktor\u00fd mu v Unity e\u0161te viac roz\u0161\u00edri jeho znalosti. Ivka ma sk\u00fasenosti s tvorbou webov\u00fdch aplik\u00e1ci\u00ed v ASP.NET Core a vo vo\u013enom \u010dase sa venuje UX dizajnu a navrhovaniu pou\u017e\u00edvate\u013esk\u00fdch rozhran\u00ed. Taktie\u017e m\u00e1 zap\u00edsan\u00fd predmet N\u00e1vrh a v\u00fdvoj po\u010d\u00edta\u010dov\u00fdch hier, kde roz\u0161\u00edri svoje znalosti aj v tomto smere. A\u010fo sa venuje automatizovan\u00e9mu testovaniu - hlavne regresn\u00e9mu, ale s\u010dasti aj jednotkov\u00e9mu testovaniu. Rob\u00ed v TCL a popritom skripty v Bashi. Vo vo\u013enom \u010dase sa venuje Pythonu (kni\u017enice ako pandas, numpy, selenium). Mi\u0161o m\u00e1 sk\u00fasenosti s umelou inteligenciou a strojov\u00fdm u\u010den\u00edm, tvorbou webov\u00fdch str\u00e1nok a viacvrstvov\u00fdch aplik\u00e1cii (JAVA a JEE). Tie\u017e sa hrabe v Pythone, konkr\u00e9tne kni\u017enice pandas, numpy, scikit-learn, keras a tensorflow. Zauj\u00edma ho spracovanie d\u00e1t, \u010do je d\u00f4vodom, pre\u010do si vybral aj predmet Vyh\u013ead\u00e1vanie inform\u00e1ci\u00ed. Jo\u017eo (Michal Jozefek) m\u00e1 sk\u00fasenosti s tvorbou mobiln\u00fdch aplik\u00e1ci\u00ed pre Android, tvorbou datab\u00e1z, programovan\u00edm backendu a pr\u00e1cou so serverom pomocou XAMMPu. Na svoju pr\u00e1cu pou\u017e\u00edva najm\u00e4 jazyky Java a PHP. Samo m\u00e1 sk\u00fasenosti najm\u00e4 v oblasti pr\u00e1ce s datab\u00e1zami, konkr\u00e9tne PostgreSQL a MySQL. Taktie\u017e v r\u00e1mci n\u00e1plne pr\u00e1ce v zamestnan\u00ed vykon\u00e1va \u00fapravu tabu\u013ekov\u00fdch d\u00e1t v Pythone s kni\u017enicami pandas a numpy. V r\u00e1mci s\u00fa\u010dasn\u00e9ho zamestnania naprogramoval v Node.js middleware, ktor\u00fd pomohol pri prechode na nov\u00fd syst\u00e9m.","title":"\ud83d\udc65 Predstavenie t\u00edmu"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/preferencie_tem/","text":"\ud83d\udd22 Pr\u00edloha A - Preferencie t\u00e9m \u00b6 T\u00e9ma 18 - FIF\u00e9 International Cat Show [MIAOW] T\u00e9ma 17 - VR laborat\u00f3rium pre di\u0161tan\u010dn\u00e9 vzdel\u00e1vanie [VRLab] T\u00e9ma 4 - Educational Content Engineering Hub - Datab\u00e1za ot\u00e1zok, odpoved\u00ed, \u00faloh a rie\u0161en\u00ed [ECEH-DU] T\u00e9ma 8 - Automatick\u00e9 rozpozn\u00e1vanie spektier [ARS] T\u00e9ma 3 - Vizualiza\u0301cia softv\u00e9ru vo virtu\u00e1lnej a roz\u0161\u00edrenej realite [VizReal] T\u00e9ma 5 - Educational and coworking driven orchestration portal [EDUCO] T\u00e9ma 14 - Platforma pre sledovanie dod\u00e1vate\u013esk\u00e9ho re\u0165azca s vyu\u017eit\u00edm technol\u00f3gie blockchain [S-Chain] T\u00e9ma 19 - Podporn\u00fd informa\u010dn\u00fd syst\u00e9m pre \u0161tudijn\u00e9 oddelenie [CROSS-CHECK] T\u00e9ma 16 - Inteligentn\u00fd informa\u010dn\u00fd syst\u00e9m zameran\u00fd na projektov\u00fd mana\u017ement a automatiz\u00e1ciu procesu verejn\u00e9ho obstar\u00e1vania [iPP] T\u00e9ma 1 - Blockchain platobn\u00e9 br\u00e1ny [BlockPay] T\u00e9ma 7 - Vnoren\u00fd syst\u00e9m pre zabezpe\u010den\u00fd zber d\u00e1t [DSC] T\u00e9ma 10 - Game-chain: Ako bezpe\u010dne vymie\u0148a\u0165 hern\u00e9 \u00fa\u010dty T\u00e9ma 9 - Vzdialen\u00e9 monitorovanie zdravotn\u00e9ho stavu \u010dloveka pomocou E-Health T\u00e9ma 6 - Transform\u00e1cia priestorov na bezpe\u010dn\u00e9 a inteligentn\u00e9 miesta na pr\u00e1cu [SmartSpace] T\u00e9ma 12 - Safety panel a sp\u00e4tn\u00e1 anal\u00fdza \u00fadajov pre v\u00fdvoj auton\u00f3mneho vozidla [avPANEL] T\u00e9ma 11 - Cyber Range: Simula\u010dn\u00e9 prostredie pre testovanie kybernetickej ochrany [CYRAN] T\u00e9ma 13 - Korekcia dynamick\u00fdch vlastnost\u00ed virtu\u00e1lnych modelov komponentov vozidiel [CarComponents] T\u00e9ma 2 - Webov\u00e9 IDE pre ASIC [ASICDE] T\u00e9ma 15 - Webov\u00fd vyh\u013ead\u00e1va\u010d podobnosti [AntiPlag]","title":"\ud83d\udd22 Pr\u00edloha A - Preferencie t\u00e9m"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/preferencie_tem/#-pr\u00edloha-a---preferencie-t\u00e9m","text":"T\u00e9ma 18 - FIF\u00e9 International Cat Show [MIAOW] T\u00e9ma 17 - VR laborat\u00f3rium pre di\u0161tan\u010dn\u00e9 vzdel\u00e1vanie [VRLab] T\u00e9ma 4 - Educational Content Engineering Hub - Datab\u00e1za ot\u00e1zok, odpoved\u00ed, \u00faloh a rie\u0161en\u00ed [ECEH-DU] T\u00e9ma 8 - Automatick\u00e9 rozpozn\u00e1vanie spektier [ARS] T\u00e9ma 3 - Vizualiza\u0301cia softv\u00e9ru vo virtu\u00e1lnej a roz\u0161\u00edrenej realite [VizReal] T\u00e9ma 5 - Educational and coworking driven orchestration portal [EDUCO] T\u00e9ma 14 - Platforma pre sledovanie dod\u00e1vate\u013esk\u00e9ho re\u0165azca s vyu\u017eit\u00edm technol\u00f3gie blockchain [S-Chain] T\u00e9ma 19 - Podporn\u00fd informa\u010dn\u00fd syst\u00e9m pre \u0161tudijn\u00e9 oddelenie [CROSS-CHECK] T\u00e9ma 16 - Inteligentn\u00fd informa\u010dn\u00fd syst\u00e9m zameran\u00fd na projektov\u00fd mana\u017ement a automatiz\u00e1ciu procesu verejn\u00e9ho obstar\u00e1vania [iPP] T\u00e9ma 1 - Blockchain platobn\u00e9 br\u00e1ny [BlockPay] T\u00e9ma 7 - Vnoren\u00fd syst\u00e9m pre zabezpe\u010den\u00fd zber d\u00e1t [DSC] T\u00e9ma 10 - Game-chain: Ako bezpe\u010dne vymie\u0148a\u0165 hern\u00e9 \u00fa\u010dty T\u00e9ma 9 - Vzdialen\u00e9 monitorovanie zdravotn\u00e9ho stavu \u010dloveka pomocou E-Health T\u00e9ma 6 - Transform\u00e1cia priestorov na bezpe\u010dn\u00e9 a inteligentn\u00e9 miesta na pr\u00e1cu [SmartSpace] T\u00e9ma 12 - Safety panel a sp\u00e4tn\u00e1 anal\u00fdza \u00fadajov pre v\u00fdvoj auton\u00f3mneho vozidla [avPANEL] T\u00e9ma 11 - Cyber Range: Simula\u010dn\u00e9 prostredie pre testovanie kybernetickej ochrany [CYRAN] T\u00e9ma 13 - Korekcia dynamick\u00fdch vlastnost\u00ed virtu\u00e1lnych modelov komponentov vozidiel [CarComponents] T\u00e9ma 2 - Webov\u00e9 IDE pre ASIC [ASICDE] T\u00e9ma 15 - Webov\u00fd vyh\u013ead\u00e1va\u010d podobnosti [AntiPlag]","title":"\ud83d\udd22 Pr\u00edloha A - Preferencie t\u00e9m"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/rozvrh/","text":"\ud83d\udd22 Pr\u00edloha B - Rozvrh t\u00edmu \u00b6 Na Obr\u00e1zku 1 je zn\u00e1zornen\u00fd rozvrh cvi\u010den\u00ed a predn\u00e1\u0161ok v zimnom semestri v\u0161etk\u00fdch \u010dlenov t\u00edmu. Pod\u013ea farebn\u00fdch guli\u010diek a legendy v spodnej \u010dasti obr\u00e1zka je mo\u017en\u00e9 rozozna\u0165 povinnosti jednotliv\u00fdch \u010dlenov t\u00edmu. Na t\u00edmov\u00fd projekt sme si vyhradili v rozvrhu dva bloky. Jeden trojhodinov\u00fd v stredu od 18:00 do 21:00 na stretnutie s ved\u00facim projektu a jeden \u0161tvorhodinov\u00fd v piatok od 12:00 do 16:00 na spolo\u010dn\u00fa pr\u00e1cu na projekte.","title":"\ud83d\udd22 Pr\u00edloha B - Rozvrh t\u00edmu"},{"location":"dokumentacia_k_riadeniu/motivacny_dokument/rozvrh/#-pr\u00edloha-b---rozvrh-t\u00edmu","text":"Na Obr\u00e1zku 1 je zn\u00e1zornen\u00fd rozvrh cvi\u010den\u00ed a predn\u00e1\u0161ok v zimnom semestri v\u0161etk\u00fdch \u010dlenov t\u00edmu. Pod\u013ea farebn\u00fdch guli\u010diek a legendy v spodnej \u010dasti obr\u00e1zka je mo\u017en\u00e9 rozozna\u0165 povinnosti jednotliv\u00fdch \u010dlenov t\u00edmu. Na t\u00edmov\u00fd projekt sme si vyhradili v rozvrhu dva bloky. Jeden trojhodinov\u00fd v stredu od 18:00 do 21:00 na stretnutie s ved\u00facim projektu a jeden \u0161tvorhodinov\u00fd v piatok od 12:00 do 16:00 na spolo\u010dn\u00fa pr\u00e1cu na projekte.","title":"\ud83d\udd22 Pr\u00edloha B - Rozvrh t\u00edmu"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_na_dokumentacii_k_inzinierskemu_dielu/","text":"\ud83d\udce6 Podiel pr\u00e1ce na dokument\u00e1cii k in\u017einierskemu dielu \u00b6 N\u00e1zov sekcie Autor \u00davod Martina Han\u00e1kov\u00e1, \u0160imon V\u00e1ro\u0161 Glob\u00e1lne ciele projektu \u0160imon V\u00e1ro\u0161, Mat\u00fa\u0161 Zele\u0148\u00e1k Architekt\u00fara syst\u00e9mu Andrej Erd\u00e9lsky, Jakub Bla\u017eej, Ladislav Zemko, Mat\u00fa\u0161 Zele\u0148\u00e1k Infra\u0161trukt\u00fara Ladislav Zemko, Andrej Erd\u00e9lsky, Jakub Bla\u017eej, Martina Han\u00e1kov\u00e1 Funkcionalita syst\u00e9mu Mat\u00fa\u0161 Zele\u0148\u00e1k, \u0160imon V\u00e1ro\u0161, Eva Nedeliakov\u00e1, Jakub Bla\u017eej Pr\u00edru\u010dky Jakub Bla\u017eej, Ladislav Zemko, Marek Kr\u00e1tky, Mat\u00fa\u0161 Zele\u0148\u00e1k","title":"\ud83d\udce6 Podiel pr\u00e1ce na dokument\u00e1cii k in\u017einierskemu dielu"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_na_dokumentacii_k_inzinierskemu_dielu/#-podiel-pr\u00e1ce-na-dokument\u00e1cii-k-in\u017einierskemu-dielu","text":"N\u00e1zov sekcie Autor \u00davod Martina Han\u00e1kov\u00e1, \u0160imon V\u00e1ro\u0161 Glob\u00e1lne ciele projektu \u0160imon V\u00e1ro\u0161, Mat\u00fa\u0161 Zele\u0148\u00e1k Architekt\u00fara syst\u00e9mu Andrej Erd\u00e9lsky, Jakub Bla\u017eej, Ladislav Zemko, Mat\u00fa\u0161 Zele\u0148\u00e1k Infra\u0161trukt\u00fara Ladislav Zemko, Andrej Erd\u00e9lsky, Jakub Bla\u017eej, Martina Han\u00e1kov\u00e1 Funkcionalita syst\u00e9mu Mat\u00fa\u0161 Zele\u0148\u00e1k, \u0160imon V\u00e1ro\u0161, Eva Nedeliakov\u00e1, Jakub Bla\u017eej Pr\u00edru\u010dky Jakub Bla\u017eej, Ladislav Zemko, Marek Kr\u00e1tky, Mat\u00fa\u0161 Zele\u0148\u00e1k","title":"\ud83d\udce6 Podiel pr\u00e1ce na dokument\u00e1cii k in\u017einierskemu dielu"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_na_dokumentacii_k_riadeniu_projektu/","text":"\ud83d\udcc5 Podiel pr\u00e1ce na dokument\u00e1cii k riadeniu projektu \u00b6 N\u00e1zov sekcie Autor \u00davod Martina Han\u00e1kov\u00e1 Roly \u010dlenov t\u00edmu Michael Kro\u010dka Aplik\u00e1cie mana\u017ementov Martina Han\u00e1kov\u00e1 Sumariz\u00e1cia \u0161printov Martina Han\u00e1kov\u00e1, Eva Nedeliakov\u00e1 Motiva\u010dn\u00fd dokument Martina Han\u00e1kov\u00e1, Eva Nedeliakov\u00e1, Ladislav Zemko Metodiky Andrej Erd\u00e9lsky, Martina Han\u00e1kov\u00e1, Marek Kr\u00e1tky, Jakub Bla\u017eej Webov\u00e9 s\u00eddlo Michael Kro\u010dka","title":"\ud83d\udcc5 Podiel pr\u00e1ce na dokument\u00e1cii k riadeniu projektu"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_na_dokumentacii_k_riadeniu_projektu/#-podiel-pr\u00e1ce-na-dokument\u00e1cii-k-riadeniu-projektu","text":"N\u00e1zov sekcie Autor \u00davod Martina Han\u00e1kov\u00e1 Roly \u010dlenov t\u00edmu Michael Kro\u010dka Aplik\u00e1cie mana\u017ementov Martina Han\u00e1kov\u00e1 Sumariz\u00e1cia \u0161printov Martina Han\u00e1kov\u00e1, Eva Nedeliakov\u00e1 Motiva\u010dn\u00fd dokument Martina Han\u00e1kov\u00e1, Eva Nedeliakov\u00e1, Ladislav Zemko Metodiky Andrej Erd\u00e9lsky, Martina Han\u00e1kov\u00e1, Marek Kr\u00e1tky, Jakub Bla\u017eej Webov\u00e9 s\u00eddlo Michael Kro\u010dka","title":"\ud83d\udcc5 Podiel pr\u00e1ce na dokument\u00e1cii k riadeniu projektu"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_sprinty/","text":"\ud83c\udf92 Podiel pr\u00e1ce za jednotliv\u00e9 \u0161printy v zimnom semestri \u00b6 \u0160print 1 \u00b6 Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 2 2 X 6 12.5% Ivana Frankovi\u010dov\u00e1 2 2 X 4 12.5% Michael Kro\u010dka 3 3 X 5 18.75% Samuel \u0160ouc 2 2 X 4 12.5% Andrej Hoferica 2 2 X 12 18.75% Michal Jozefek 6 4 X 3 25% \u0160print 2 \u00b6 Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 4 4 9 6 16.66% Ivana Frankovi\u010dov\u00e1 7 7 10 6 18.51% Michael Kro\u010dka 14 14 11 8 20.37% Samuel \u0160ouc 14 14 7 7 12.96% Andrej Hoferica 13 13 9 4.5 16.66% Michal Jozefek 5 5 8 4 14.81% \u0160print 3 \u00b6 Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 10 7 2 X 8.33% Ivana Frankovi\u010dov\u00e1 5 5 1 7 4.16% Michael Kro\u010dka 10 10 9 14 37.5% Samuel \u0160ouc 11 11 2 3 8.33% Andrej Hoferica 3 3 3 5 12.5% Michal Jozefek 8 8 7 X 29.16%","title":"\ud83c\udf92 Podiel pr\u00e1ce za jednotliv\u00e9 \u0161printy v zimnom semestri"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_sprinty/#-podiel-pr\u00e1ce-za-jednotliv\u00e9-\u0161printy-v-zimnom-semestri","text":"","title":"\ud83c\udf92 Podiel pr\u00e1ce za jednotliv\u00e9 \u0161printy v zimnom semestri"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_sprinty/#\u0161print-1","text":"Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 2 2 X 6 12.5% Ivana Frankovi\u010dov\u00e1 2 2 X 4 12.5% Michael Kro\u010dka 3 3 X 5 18.75% Samuel \u0160ouc 2 2 X 4 12.5% Andrej Hoferica 2 2 X 12 18.75% Michal Jozefek 6 4 X 3 25%","title":"\u0160print 1"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_sprinty/#\u0161print-2","text":"Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 4 4 9 6 16.66% Ivana Frankovi\u010dov\u00e1 7 7 10 6 18.51% Michael Kro\u010dka 14 14 11 8 20.37% Samuel \u0160ouc 14 14 7 7 12.96% Andrej Hoferica 13 13 9 4.5 16.66% Michal Jozefek 5 5 8 4 14.81%","title":"\u0160print 2"},{"location":"dokumentacia_k_riadeniu/podiel_prace_clenov_timu/podiel_prace_sprinty/#\u0161print-3","text":"Po\u010det napl\u00e1novan\u00fdch taskov Po\u010det dodan\u00fdch taskov Po\u010det dodan\u00fdch story pointov Po\u010det hod\u00edn Percent\u00e1 Nikod\u00e9m Adler 10 7 2 X 8.33% Ivana Frankovi\u010dov\u00e1 5 5 1 7 4.16% Michael Kro\u010dka 10 10 9 14 37.5% Samuel \u0160ouc 11 11 2 3 8.33% Andrej Hoferica 3 3 3 5 12.5% Michal Jozefek 8 8 7 X 29.16%","title":"\u0160print 3"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/burndownchart/","text":"Burn down chart \u00b6 Z d\u00f4vodu na\u0161ej nedisciplinovanosti pri zapisovan\u00ed odhadovan\u00e9ho \u010dasu pre jednotliv\u00e9 \u00falohy, nem\u00e1me pre tento \u0161print burndownchart.","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/burndownchart/#burn-down-chart","text":"Z d\u00f4vodu na\u0161ej nedisciplinovanosti pri zapisovan\u00ed odhadovan\u00e9ho \u010dasu pre jednotliv\u00e9 \u00falohy, nem\u00e1me pre tento \u0161print burndownchart.","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/export_uloh/","text":"ID Work Item Type Title Assigned To State Effort 140 Feature Pri\u0165ahuje (odpudzuje) uzly pod\u013ea ur\u010ditej vzdialenosti New 356 Feature Zobrazenie UML pre Lua projekty New 357 Feature Vytvorenie UML diagramu z LuaDB grafu New 364 Product Backlog Item Ziskat data pre generovanie diagramu New 380 Product Backlog Item Automatizovan\u00e9 generovanie dokument\u00e1cie z k\u00f3du Bc. Martina Han\u00e1kov\u00e1 Done 8 451 Feature Dokument\u00e1cia analyz\u00e1tora New 452 Product Backlog Item Dokument\u00e1cia analyz\u00e1tora - LuaDb a LuaMetrics Bc. Eva Nedeliakov\u00e1 In development 5 453 Product Backlog Item Dokument\u00e1cia analyz\u00e1tora - Lua k\u00f3dy v Unity Mat\u00fa\u0161 Zele\u0148\u00e1k In development 5 454 Product Backlog Item Dokument\u00e1cia analyz\u00e1tora - Unity Bc. \u0160imon V\u00e1ro\u0161 To accept 5 455 Product Backlog Item UML diagram z Luadb grafu Jakub Bla\u017eej In development 5 456 Task V\u00fdber n\u00e1stroja pre generovanie dokument\u00e1cie z Lua zdrojov\u00e9ho k\u00f3du Bc. Ladislav Zemko Done 457 Task Vytvorenie image pre CI - LuaDB a LuaMetrics Bc. Ladislav Zemko Done 458 Task Modifik\u00e1cia CI pre LuaDB Bc. Ladislav Zemko Done 461 Task Export doxygen dokument\u00e1cie modulu LuaInterface Bc. Ladislav Zemko Done 462 Task Modifik\u00e1cia image pre LuaInterface a LuaGraph Bc. Ladislav Zemko Done 463 Task Export doxygen dokument\u00e1cie modulu LuaGraph Bc. Ladislav Zemko Done 464 Task Export doxygen dokument\u00e1cie projektu 3DSoftviz Bc. Ladislav Zemko Done 465 Task Modifik\u00e1cia image pre 3dsoftviz Bc. Ladislav Zemko Done 467 Task Vytvorenie CI pre luatree Bc. Martina Han\u00e1kov\u00e1 Done 468 Task Vytvorenie CI pre luameg Bc. Martina Han\u00e1kov\u00e1 Done 469 Task Vytvorenie CI pre luametrics Bc. Martina Han\u00e1kov\u00e1 Done 471 Task Vytvorenie CI pre luagit Bc. Martina Han\u00e1kov\u00e1 Done 472 Task Modifik\u00e1cia dokument\u00e1cie k produktu Bc. Ladislav Zemko Done 476 Task Sp\u00edsanie dokument\u00e1cie Done 479 Task Anal\u00fdza Jakub Bla\u017eej To Do 480 Task Implement\u00e1cia Jakub Bla\u017eej To Do 483 Task Nap\u00edsa\u0165 dokument\u00e1ciu Mat\u00fa\u0161 Zele\u0148\u00e1k To Do","title":"Export uloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/popis/","text":"Trvanie \u0161printu: 17.02.-01.03. 2020 Doru\u010den\u00e9 story pointy: 18/28 Po\u010das prv\u00e9ho \u0161printu v letnom semestri sme sa zamerali na automatick\u00e9 generovanie dokument\u00e1cie zo zdrojov\u00fdch k\u00f3dov, ako aj ich upload na na\u0161u str\u00e1nku. \u010ealej sme sa venovali anal\u00fdze toho ako sa vytv\u00e1ra n\u00e1\u0161 graf v jednotliv\u00fdch moduloch projektu. V\u00fdstupom tejto anal\u00fdzy by mal by\u0165 graf volan\u00ed. Tie\u017e sme analyzovali vytv\u00e1ranie UML diagramov z Luadb grafu. Tento \u0161print dopadol pomerne \u00faspe\u0161ne, zostalo len p\u00e1r taskov, ktor\u00e9 neboli dokon\u010den\u00e9.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Stara\u0165 sa o DevOps Pr\u00e1ca vo dvojiciach/trojiciach Zab\u00edja\u0165 \u010das s vecami, ktor\u00e9 neviem vyriesi\u0165 Rad\u0161ej rovno popros\u00edm niekoho o pomoc Trackovanie si odroben\u00e9ho \u010dasu na taskoch Efekt\u00edvne vyu\u017eitie \u010dasu na stretnut\u00ed - pr\u00e1ca v skupin\u00e1ch na vybran\u00fdch \u00faloh\u00e1ch Nedochv\u00ed\u013enos\u0165 Strata percent z podielu pr\u00e1ce pri me\u0161kan\u00ed viac ako 10 min\u00fa\u0165 Viac sa zauj\u00edma\u0165 o dianie v t\u00edme Nekomunikova\u0165 prim\u00e1rne na Facebooku Viac pou\u017e\u00edva\u0165 na komunik\u00e1ciu Teamsy Evidencia \u00faloh - evidova\u0165 tasky, odroben\u00fd \u010das, aktu\u00e1lny stav \u00falohy Zlep\u0161i\u0165 \u010dasov\u00fd mana\u017ement ka\u017ed\u00e9ho jedn\u00e9ho z n\u00e1s","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_1/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Stara\u0165 sa o DevOps Pr\u00e1ca vo dvojiciach/trojiciach Zab\u00edja\u0165 \u010das s vecami, ktor\u00e9 neviem vyriesi\u0165 Rad\u0161ej rovno popros\u00edm niekoho o pomoc Trackovanie si odroben\u00e9ho \u010dasu na taskoch Efekt\u00edvne vyu\u017eitie \u010dasu na stretnut\u00ed - pr\u00e1ca v skupin\u00e1ch na vybran\u00fdch \u00faloh\u00e1ch Nedochv\u00ed\u013enos\u0165 Strata percent z podielu pr\u00e1ce pri me\u0161kan\u00ed viac ako 10 min\u00fa\u0165 Viac sa zauj\u00edma\u0165 o dianie v t\u00edme Nekomunikova\u0165 prim\u00e1rne na Facebooku Viac pou\u017e\u00edva\u0165 na komunik\u00e1ciu Teamsy Evidencia \u00faloh - evidova\u0165 tasky, odroben\u00fd \u010das, aktu\u00e1lny stav \u00falohy Zlep\u0161i\u0165 \u010dasov\u00fd mana\u017ement ka\u017ed\u00e9ho jedn\u00e9ho z n\u00e1s","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/burndownchart/","text":"Burn down chart \u00b6 Z d\u00f4vodu na\u0161ej nedisciplinovanosti pri zapisovan\u00ed odhadovan\u00e9ho \u010dasu pre jednotliv\u00e9 \u00falohy, nem\u00e1me pre tento \u0161print burndownchart.","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/burndownchart/#burn-down-chart","text":"Z d\u00f4vodu na\u0161ej nedisciplinovanosti pri zapisovan\u00ed odhadovan\u00e9ho \u010dasu pre jednotliv\u00e9 \u00falohy, nem\u00e1me pre tento \u0161print burndownchart.","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/export_uloh/","text":"ID Work Item Type Title Assigned To State Effort 350 Feature Pridanie podpory pre spracovanie Moonscript projektov New 353 Product Backlog Item Na\u010d\u00edtanie adres\u00e1ra s Moonscript projektom Bc. \u0160imon V\u00e1ro\u0161 Ready to develop 5 354 Task Overenie funkcnosti analyzatora Moonscript projektov Bc. \u0160imon V\u00e1ro\u0161 Done 358 Feature Zobrazenie UML diagramov v 3D okne browsera New 481 Task Analyza a vyber coverage nastroja pre Lua zdrojove kody Bc. Ladislav Zemko Done 482 Task Modifikacia Lua image Bc. Ladislav Zemko Done 484 Task Modifikacia CMakeLists.txt pre Luadb Bc. Ladislav Zemko Done 485 Task Modifikacia CI pre LuaDB Bc. Ladislav Zemko Done 486 Task Instalacia luacheck do lua CI image Bc. Ladislav Zemko Done 487 Task Vytvorenie a export luacheck reporu pre modul LuaDB Bc. Ladislav Zemko Done 488 Task Modifikacia CI pre luameg Bc. Ladislav Zemko To Do 489 Task Modifikacia CI pre luametrics Bc. Martina Han\u00e1kov\u00e1 In Progress 490 Task Modifikacia CMakeLists.txt pre Luametrics Bc. Martina Han\u00e1kov\u00e1 In Progress 491 Task Modifikacia CMakeLists.txt pre luameg Bc. Martina Han\u00e1kov\u00e1 To Do 492 Task Busted tests Bc. Andrej Erd\u00e9lsky In Progress 493 Task Sp\u00edsanie dokument\u00e1cie k upraven\u00fdm CI a CMakeLists To Do","title":"Export uloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/popis/","text":"Trvanie \u0161printu: 02.02.-15.03. 2020 Doru\u010den\u00e9 story pointy: 0/10 evidovan\u00fdch V druhom \u0161printe sme pokra\u010dovali v pr\u00e1ci na CI, a to pridan\u00edm sp\u00fa\u0161\u0165ania busted testov. Z\u00e1rove\u0148 sme pridali LuaCov na zistenie test coverage. S t\u00fdm tie\u017e s\u00favis\u00ed nap\u00edsanie busted testov. \u010eal\u0161ou \u010das\u0165ou n\u00e1plne tohto \u0161printu bolo vytvorenie docker imagov, ktor\u00e9 by sa importovali do nejak\u00e9ho existuj\u00faceho IDE. V\u010faka tomu by sme z\u00edskali n\u00e1stroj na vyv\u00edjanie a debugovanie Lua projektov. Zis\u0165ovali sme, \u010di vieme v na\u0161om projekte analyzova\u0165 nielen Lua projekty ale aj Moonscript. Tie\u017e sme pokra\u010dovali v implement\u00e1cii UML diagramov. Tento \u0161print sa skon\u010dil ve\u013emi ne\u00faspe\u0161ne. \u017diadnu z na\u0161ich user stories sa n\u00e1m nepodarilo dokon\u010di\u0165. Taktie\u017e sme si prestali zapisova\u0165 user stories a tasky. Toto mus\u00edme okam\u017eite napravi\u0165.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Stara\u0165 sa o DevOps Spolupr\u00e1ca By\u0165 demotivovan\u00fd Spolupr\u00e1ca pri zdie\u013ean\u00fdch taskoch Pracova\u0165 na taskoch Uisti\u0165 sa, \u017ee je task dostato\u010dne pop\u00edsan\u00fd Nedochv\u00ed\u013enos\u0165 Sk\u00f4r analyzova\u0165, a tak identifikova\u0165 v \u010dasovom predstihu pr\u00edpadn\u00e9 probl\u00e9my/z\u00e1le\u017eitosti potrebn\u00e9 konzultova\u0165 Trackovanie si odroben\u00e9ho \u010dasu na taskoch Probl\u00e9my s komunik\u00e1ciou medzi \u010dlenmi t\u00edmu By\u0165 \u00fastretovej\u0161\u00ed Za\u010da\u0165 pracova\u0165 na taskoch dostato\u010dne skoro Odml\u010da\u0165 sa, nekomunikova\u0165 s \u010dlenmi t\u00edmu Priebe\u017ene aktualizova\u0165 stav \u00faloh N\u00e1js\u0165 si viac \u010dasu na TP Komunikova\u0165 prim\u00e1rne na Facebooku Ignor\u00e1cia spr\u00e1v na Facebooku, odpovedanie na ot\u00e1zu v Teamsoch s ozna\u010den\u00edm p\u00fdtaj\u00faceho sa (pokus o presmerovanie komunik\u00e1cie) Viac sa zauj\u00edma\u0165 o dianie v t\u00edme Ignorova\u0165 online stretnutia kv\u00f4li pr\u00e1ci a in\u00fdm osobn\u00fdm veciam Napl\u00e1nova\u0165 si \u010das na t\u00edmov\u00fd projekt tak ako sme sa dohodli na za\u010diatku semestra Viac pou\u017e\u00edva\u0165 na komunik\u00e1ciu Teamsy Priebe\u017ene aktualizova\u0165 dokumenty na webovom s\u00eddle","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_2/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Stara\u0165 sa o DevOps Spolupr\u00e1ca By\u0165 demotivovan\u00fd Spolupr\u00e1ca pri zdie\u013ean\u00fdch taskoch Pracova\u0165 na taskoch Uisti\u0165 sa, \u017ee je task dostato\u010dne pop\u00edsan\u00fd Nedochv\u00ed\u013enos\u0165 Sk\u00f4r analyzova\u0165, a tak identifikova\u0165 v \u010dasovom predstihu pr\u00edpadn\u00e9 probl\u00e9my/z\u00e1le\u017eitosti potrebn\u00e9 konzultova\u0165 Trackovanie si odroben\u00e9ho \u010dasu na taskoch Probl\u00e9my s komunik\u00e1ciou medzi \u010dlenmi t\u00edmu By\u0165 \u00fastretovej\u0161\u00ed Za\u010da\u0165 pracova\u0165 na taskoch dostato\u010dne skoro Odml\u010da\u0165 sa, nekomunikova\u0165 s \u010dlenmi t\u00edmu Priebe\u017ene aktualizova\u0165 stav \u00faloh N\u00e1js\u0165 si viac \u010dasu na TP Komunikova\u0165 prim\u00e1rne na Facebooku Ignor\u00e1cia spr\u00e1v na Facebooku, odpovedanie na ot\u00e1zu v Teamsoch s ozna\u010den\u00edm p\u00fdtaj\u00faceho sa (pokus o presmerovanie komunik\u00e1cie) Viac sa zauj\u00edma\u0165 o dianie v t\u00edme Ignorova\u0165 online stretnutia kv\u00f4li pr\u00e1ci a in\u00fdm osobn\u00fdm veciam Napl\u00e1nova\u0165 si \u010das na t\u00edmov\u00fd projekt tak ako sme sa dohodli na za\u010diatku semestra Viac pou\u017e\u00edva\u0165 na komunik\u00e1ciu Teamsy Priebe\u017ene aktualizova\u0165 dokumenty na webovom s\u00eddle","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort Remaining Work \ufeff53 Task Spojazdni\u0165 Unity projekt Bc. Ladislav Zemko To Do 8 117 Task Spojazdni\u0165 C# projekt Bc. Ladislav Zemko In Progress 8 120 Product Backlog Item Analyzova\u0165 a zdokumentova\u0165 pou\u017eie logovac\u00edch modulov Bc. Marek Kr\u00e1tky In development 5 147 Product Backlog Item Pohybova\u0165 magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 Ready to plan 159 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (backend) Jakub Bla\u017eej Done 13 172 Task Sp\u00edsanie dokument\u00e1cie pre v\u0161etky analyzovan\u00e9 oblasti Bc. Marek Kr\u00e1tky In Progress 1 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetov Bc. \u0160imon V\u00e1ro\u0161 In development 5 352 Feature Vizualizacia Moonscript projektu ako grafu New 353 Product Backlog Item Na\u010d\u00edtanie adres\u00e1ra s Moonscript projektom Bc. \u0160imon V\u00e1ro\u0161 Done 5 355 Feature Zobrazenie UML pre Moonscript projekty New 377 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko Ready to develop 13 378 Bug Nefunguje search v dokument\u00e1cii Jakub Bla\u017eej Done 1 385 Task Aplikova\u0165 pr\u00edznak pagesize_zero Bc. Ladislav Zemko In Progress 386 Task Spojazdni\u0165 testy Lua Common a Lua Graph Bc. Ladislav Zemko To Do 389 Task Presk\u00fama\u0165 ako je selekcia rie\u0161en\u00e1 doteraz Bc. \u0160imon V\u00e1ro\u0161 Done 390 Task Implement\u00e1cia ozna\u010dovania Bc. \u0160imon V\u00e1ro\u0161 In Progress 2 453 Product Backlog Item Dokument\u00e1cia analyz\u00e1tora - Lua k\u00f3dy v Unity Mat\u00fa\u0161 Zele\u0148\u00e1k Done 5 455 Product Backlog Item UML diagram z Luadb grafu Jakub Bla\u017eej To accept 5 474 Product Backlog Item Testy do LuaDB, LuaMetrics, LuaMeg, LuaGit Bc. Martina Han\u00e1kov\u00e1 Review 5 475 Product Backlog Item Setup IDE pre Lua projekty Bc. Marek Kr\u00e1tky In development 5 479 Task Anal\u00fdza Jakub Bla\u017eej Done 480 Task Implement\u00e1cia Jakub Bla\u017eej Done 483 Task Nap\u00edsa\u0165 dokument\u00e1ciu Mat\u00fa\u0161 Zele\u0148\u00e1k Done 489 Task Modifikacia CI pre luametrics Bc. Martina Han\u00e1kov\u00e1 Done 490 Task Modifikacia CMakeLists.txt pre Luametrics Bc. Martina Han\u00e1kov\u00e1 Done 491 Task Modifikacia CMakeLists.txt a CI pre Luameg a Luagit Bc. Martina Han\u00e1kov\u00e1 Done 492 Task Busted tests Bc. Andrej Erd\u00e9lsky Done 494 Bug Probl\u00e9mov\u00e9 rozbeh\u00e1vanie projektu (VRScene) Jakub Bla\u017eej Done 93.45 495 Task Doplni\u0165 v\u00fdstup do dokument\u00e1cie Bc. \u0160imon V\u00e1ro\u0161 Done 496 Task Rebase na aktu\u00e1lny develop Jakub Bla\u017eej Done 497 Product Backlog Item Doplnenie a vylep\u0161enie logovania pre Lua \u010dasti Bc. Ladislav Zemko Review 8 498 Product Backlog Item Zozn\u00e1menie sa s webom + \u00fapravy Bc. Martina Han\u00e1kov\u00e1 Done 5 499 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luadb Bc. Ladislav Zemko Done 500 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luametrics Bc. Ladislav Zemko Done 501 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luameg Bc. Ladislav Zemko Done 502 Task Doplnenie logu - require done - do init s\u00faborov Lua modulov Bc. Ladislav Zemko Done 503 Task Kontrola a zdokumentovanie v\u00fdskytu tvorby objektov starou syntaxou Bc. Ladislav Zemko Done 504 Task Doplni\u0165 do dist.info z\u00e1vislos\u0165 lualogging Bc. Ladislav Zemko Done 506 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre LuaMetrics Bc. Martina Han\u00e1kov\u00e1 Done 507 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre LuaMeg Bc. Martina Han\u00e1kov\u00e1 Done 508 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre Luagit Bc. Martina Han\u00e1kov\u00e1 Done 509 Task Zozn\u00e1menie sa s webovou str\u00e1nkou a n\u00e1strojom mobirise Bc. Martina Han\u00e1kov\u00e1 Done 510 Task Doplni\u0165 z\u00e1pisy zo stretnut\u00ed Bc. Martina Han\u00e1kov\u00e1 Done 511 Task Doplni\u0165 export \u00faloh Bc. Martina Han\u00e1kov\u00e1 Done 512 Task Doplni\u0165 retrospekt\u00edvy Bc. Martina Han\u00e1kov\u00e1 Done 513 Task Doplni\u0165 pomer pr\u00e1ce na \u00faloh\u00e1ch Bc. Martina Han\u00e1kov\u00e1 Done 514 Task Rozdeli\u0165 stage build_test na dve stage vo v\u0161etk\u00fdch moduloch Bc. Martina Han\u00e1kov\u00e1 Done 515 Task Zdokumentova\u0165 pr\u00e1cu na CI Bc. Martina Han\u00e1kov\u00e1 Done 516 Task Vytvori\u0165 dokumenty na str\u00e1nku Bc. Martina Han\u00e1kov\u00e1 Done 517 Task N\u00e1js\u0165 vhodn\u00e9 IDE Bc. Marek Kr\u00e1tky Done 518 Task Nap\u00edsa\u0165 n\u00e1vod Bc. Marek Kr\u00e1tky In Progress 519 Task Dokument\u00e1cia Jakub Bla\u017eej Done 520 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luagit Bc. Ladislav Zemko Done 521 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luatree Bc. Ladislav Zemko Done 522 Task Doplnenie mo\u017enosti pou\u017eitia glob\u00e1lneho logger-u Bc. Ladislav Zemko Done 523 Task Sp\u00edsanie dokument\u00e1cie pre Lua logovacie moduly Bc. Ladislav Zemko Done 524 Task Opravi\u0165 chyby v Luameg Jakub Bla\u017eej Done 526 Bug Neporiadky v dokument\u00e1cii Committed 527 Task Modifik\u00e1cia CI image Lua Bc. Ladislav Zemko Done 528 Task Modifikova\u0165 CMakeLists modulu LuaDB + pou\u017ei\u0165 CI image v2 Bc. Ladislav Zemko Done 529 Task Dokument\u00e1cia zmien v image Lua Bc. Ladislav Zemko Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort Remaining Work \ufeff53 Task Spojazdni\u0165 Unity projekt Bc. Ladislav Zemko To Do 8 117 Task Spojazdni\u0165 C# projekt Bc. Ladislav Zemko In Progress 8 120 Product Backlog Item Analyzova\u0165 a zdokumentova\u0165 pou\u017eie logovac\u00edch modulov Bc. Marek Kr\u00e1tky In development 5 147 Product Backlog Item Pohybova\u0165 magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 Ready to plan 159 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (backend) Jakub Bla\u017eej Done 13 172 Task Sp\u00edsanie dokument\u00e1cie pre v\u0161etky analyzovan\u00e9 oblasti Bc. Marek Kr\u00e1tky In Progress 1 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetov Bc. \u0160imon V\u00e1ro\u0161 In development 5 352 Feature Vizualizacia Moonscript projektu ako grafu New 353 Product Backlog Item Na\u010d\u00edtanie adres\u00e1ra s Moonscript projektom Bc. \u0160imon V\u00e1ro\u0161 Done 5 355 Feature Zobrazenie UML pre Moonscript projekty New 377 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko Ready to develop 13 378 Bug Nefunguje search v dokument\u00e1cii Jakub Bla\u017eej Done 1 385 Task Aplikova\u0165 pr\u00edznak pagesize_zero Bc. Ladislav Zemko In Progress 386 Task Spojazdni\u0165 testy Lua Common a Lua Graph Bc. Ladislav Zemko To Do 389 Task Presk\u00fama\u0165 ako je selekcia rie\u0161en\u00e1 doteraz Bc. \u0160imon V\u00e1ro\u0161 Done 390 Task Implement\u00e1cia ozna\u010dovania Bc. \u0160imon V\u00e1ro\u0161 In Progress 2 453 Product Backlog Item Dokument\u00e1cia analyz\u00e1tora - Lua k\u00f3dy v Unity Mat\u00fa\u0161 Zele\u0148\u00e1k Done 5 455 Product Backlog Item UML diagram z Luadb grafu Jakub Bla\u017eej To accept 5 474 Product Backlog Item Testy do LuaDB, LuaMetrics, LuaMeg, LuaGit Bc. Martina Han\u00e1kov\u00e1 Review 5 475 Product Backlog Item Setup IDE pre Lua projekty Bc. Marek Kr\u00e1tky In development 5 479 Task Anal\u00fdza Jakub Bla\u017eej Done 480 Task Implement\u00e1cia Jakub Bla\u017eej Done 483 Task Nap\u00edsa\u0165 dokument\u00e1ciu Mat\u00fa\u0161 Zele\u0148\u00e1k Done 489 Task Modifikacia CI pre luametrics Bc. Martina Han\u00e1kov\u00e1 Done 490 Task Modifikacia CMakeLists.txt pre Luametrics Bc. Martina Han\u00e1kov\u00e1 Done 491 Task Modifikacia CMakeLists.txt a CI pre Luameg a Luagit Bc. Martina Han\u00e1kov\u00e1 Done 492 Task Busted tests Bc. Andrej Erd\u00e9lsky Done 494 Bug Probl\u00e9mov\u00e9 rozbeh\u00e1vanie projektu (VRScene) Jakub Bla\u017eej Done 93.45 495 Task Doplni\u0165 v\u00fdstup do dokument\u00e1cie Bc. \u0160imon V\u00e1ro\u0161 Done 496 Task Rebase na aktu\u00e1lny develop Jakub Bla\u017eej Done 497 Product Backlog Item Doplnenie a vylep\u0161enie logovania pre Lua \u010dasti Bc. Ladislav Zemko Review 8 498 Product Backlog Item Zozn\u00e1menie sa s webom + \u00fapravy Bc. Martina Han\u00e1kov\u00e1 Done 5 499 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luadb Bc. Ladislav Zemko Done 500 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luametrics Bc. Ladislav Zemko Done 501 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luameg Bc. Ladislav Zemko Done 502 Task Doplnenie logu - require done - do init s\u00faborov Lua modulov Bc. Ladislav Zemko Done 503 Task Kontrola a zdokumentovanie v\u00fdskytu tvorby objektov starou syntaxou Bc. Ladislav Zemko Done 504 Task Doplni\u0165 do dist.info z\u00e1vislos\u0165 lualogging Bc. Ladislav Zemko Done 506 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre LuaMetrics Bc. Martina Han\u00e1kov\u00e1 Done 507 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre LuaMeg Bc. Martina Han\u00e1kov\u00e1 Done 508 Task Zistenie a doplnenie z\u00e1vislost\u00ed pre Luagit Bc. Martina Han\u00e1kov\u00e1 Done 509 Task Zozn\u00e1menie sa s webovou str\u00e1nkou a n\u00e1strojom mobirise Bc. Martina Han\u00e1kov\u00e1 Done 510 Task Doplni\u0165 z\u00e1pisy zo stretnut\u00ed Bc. Martina Han\u00e1kov\u00e1 Done 511 Task Doplni\u0165 export \u00faloh Bc. Martina Han\u00e1kov\u00e1 Done 512 Task Doplni\u0165 retrospekt\u00edvy Bc. Martina Han\u00e1kov\u00e1 Done 513 Task Doplni\u0165 pomer pr\u00e1ce na \u00faloh\u00e1ch Bc. Martina Han\u00e1kov\u00e1 Done 514 Task Rozdeli\u0165 stage build_test na dve stage vo v\u0161etk\u00fdch moduloch Bc. Martina Han\u00e1kov\u00e1 Done 515 Task Zdokumentova\u0165 pr\u00e1cu na CI Bc. Martina Han\u00e1kov\u00e1 Done 516 Task Vytvori\u0165 dokumenty na str\u00e1nku Bc. Martina Han\u00e1kov\u00e1 Done 517 Task N\u00e1js\u0165 vhodn\u00e9 IDE Bc. Marek Kr\u00e1tky Done 518 Task Nap\u00edsa\u0165 n\u00e1vod Bc. Marek Kr\u00e1tky In Progress 519 Task Dokument\u00e1cia Jakub Bla\u017eej Done 520 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luagit Bc. Ladislav Zemko Done 521 Task Kontrola, pr\u00edpadn\u00e9 doplnenie logovania modulu Luatree Bc. Ladislav Zemko Done 522 Task Doplnenie mo\u017enosti pou\u017eitia glob\u00e1lneho logger-u Bc. Ladislav Zemko Done 523 Task Sp\u00edsanie dokument\u00e1cie pre Lua logovacie moduly Bc. Ladislav Zemko Done 524 Task Opravi\u0165 chyby v Luameg Jakub Bla\u017eej Done 526 Bug Neporiadky v dokument\u00e1cii Committed 527 Task Modifik\u00e1cia CI image Lua Bc. Ladislav Zemko Done 528 Task Modifikova\u0165 CMakeLists modulu LuaDB + pou\u017ei\u0165 CI image v2 Bc. Ladislav Zemko Done 529 Task Dokument\u00e1cia zmien v image Lua Bc. Ladislav Zemko Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/popis/","text":"Trvanie \u0161printu: 16.03.-29.03. 2020 Doru\u010den\u00e9 story pointy: 48/84 Tret\u00ed \u0161print sme za\u010dali ve\u013emi \u00faspe\u0161ne. Podarilo sa n\u00e1m napravi\u0165 chyby z predch\u00e1dzaj\u00facich \u0161printov, pomerne na\u010das sme si napl\u00e1novali tasky (aj ke\u010f st\u00e1le nie v\u0161etci). V prvej polovici \u0161printu sa n\u00e1m podarilo dokon\u010di\u0165 user stories z minul\u00e9ho \u0161printu a aj sme za\u010dali robi\u0165 na nov\u00fdch. Pokra\u010dovali sme v pr\u00e1ci na automatiz\u00e1cii testov a pridali sme logovanie do jednotliv\u00fdch modulov. Pokra\u010dovalo sa aj v pr\u00e1ci s magnetom, presnej\u0161ie ozna\u010denie magnetu. A nakoniec sme sa venovali nastaveniu IDE pre Lua projekty, aby sme ich vedeli debugova\u0165. S\u00edce sme v\u00e4\u010d\u0161inu pr\u00e1ce na na\u0161ich \u00faloh\u00e1ch splnili, ale detaily neboli dotiahnut\u00e9. Viacero \u00faloh skon\u010dilo na review, niektor\u00e9 len nemali dop\u00edsan\u00fa dokument\u00e1ciu. Tu vid\u00edme \u010fal\u0161\u00ed pristor na zlep\u0161enie v \u010fal\u0161om \u0161printe.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Ka\u017ed\u00fd by si mal robi\u0165 pozn\u00e1mky, ke\u010f mu ved\u00faci nie\u010do vysvet\u013euje Zapisovanie taskov do TFS Negativizmus Pozit\u00edvnej\u0161ia sp\u00e4tn\u00e1 v\u00e4zba, Viac pracova\u0165 na taskoch, ktor\u00e9 n\u00e1s bavia Lep\u0161ie popisova\u0165 storky Odhadovanie \u010dasu na tasky dopredu Cudzie tasky bez op\u00fdtania Ke\u010f chcem s nie\u010d\u00edm pom\u00f4c\u0165 alebo m\u00e1m dobr\u00fd n\u00e1pad, najprv o tom informujem \u010dloveka, ktor\u00fd na tom rob\u00ed Vypn\u00fa\u0165 si mikrof\u00f3n na calle, ke\u010f dohovor\u00edm Upload dokumentov na web Me\u0161ka\u0165 na stretnutia cez call Pros\u00edm d\u00e1vajme si pozor a dodr\u017eujme \u010dasov\u00fd harmonogram, lebo z toho budeme musie\u0165 vyvodi\u0165 postihy Viac pracova\u0165 vo dvojiciach (aby nikto nechce nebol s\u00e1m) Trackovanie \u010dasu Lep\u0161ia komunik\u00e1cia - viacej si medzi sebou pom\u00e1hame Vyhradenie \u010dasu na spolo\u010dn\u00fa retrospekt\u00edvu","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_3/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Ka\u017ed\u00fd by si mal robi\u0165 pozn\u00e1mky, ke\u010f mu ved\u00faci nie\u010do vysvet\u013euje Zapisovanie taskov do TFS Negativizmus Pozit\u00edvnej\u0161ia sp\u00e4tn\u00e1 v\u00e4zba, Viac pracova\u0165 na taskoch, ktor\u00e9 n\u00e1s bavia Lep\u0161ie popisova\u0165 storky Odhadovanie \u010dasu na tasky dopredu Cudzie tasky bez op\u00fdtania Ke\u010f chcem s nie\u010d\u00edm pom\u00f4c\u0165 alebo m\u00e1m dobr\u00fd n\u00e1pad, najprv o tom informujem \u010dloveka, ktor\u00fd na tom rob\u00ed Vypn\u00fa\u0165 si mikrof\u00f3n na calle, ke\u010f dohovor\u00edm Upload dokumentov na web Me\u0161ka\u0165 na stretnutia cez call Pros\u00edm d\u00e1vajme si pozor a dodr\u017eujme \u010dasov\u00fd harmonogram, lebo z toho budeme musie\u0165 vyvodi\u0165 postihy Viac pracova\u0165 vo dvojiciach (aby nikto nechce nebol s\u00e1m) Trackovanie \u010dasu Lep\u0161ia komunik\u00e1cia - viacej si medzi sebou pom\u00e1hame Vyhradenie \u010dasu na spolo\u010dn\u00fa retrospekt\u00edvu","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort Remaining Work 145 Product Backlog Item Odobra\u0165 magnet zo sc\u00e9ny Bc. \u0160imon V\u00e1ro\u0161 To accept 3 147 Product Backlog Item Pohybova\u0165 magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 Ready to develop 5 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetov Bc. \u0160imon V\u00e1ro\u0161 To accept 5 362 Product Backlog Item Zobrazi\u0165 diagram pre zvolen\u00fd uzol Jakub Bla\u017eej In development 526 Bug Neporiadky v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 Committed 2 536 Product Backlog Item Metodika ako p\u00edsa\u0165 dokument\u00e1ciu Bc. Martina Han\u00e1kov\u00e1 Review 5 537 Task Pop\u00edsa\u0165 \u00fa\u010del jednotliv\u00fdch \u010dast\u00ed dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 538 Task Pripravi\u0165 templates pre niektor\u00e9 \u010dasti dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 539 Task Nap\u00edsa\u0165 / upravi\u0165 metodiku na p\u00edsanie dokument\u00e1cie [linky] Bc. Martina Han\u00e1kov\u00e1 Done 540 Task Konzult\u00e1cie s Jakubom oh\u013eadom \u0161trukt\u00fary dokument\u00e1cie a obsahu metodiky Bc. Martina Han\u00e1kov\u00e1 Done 541 Task Oprava form\u00e1tovac\u00edch ch\u00fdb Bc. Martina Han\u00e1kov\u00e1 Done 542 Task Zmena umiestnenia niektor\u00fdch dokumetov + \u0161trukt\u00farne zmeny Bc. Martina Han\u00e1kov\u00e1 Done 543 Product Backlog Item Modifik\u00e1cia Lua CI Image Bc. Ladislav Zemko Review 8 544 Task Vytvorenie image s funk\u010dn\u00fdm Luapower Bc. Ladislav Zemko Done 545 Task In\u0161tal\u00e1cia luarocks Bc. Ladislav Zemko Done 546 Task In\u0161tal\u00e1cia z\u00e1vislost\u00ed s explicitn\u00fdm uveden\u00edm verzie Bc. Ladislav Zemko Done 547 Task Linkovanie syst\u00e9mov\u00fdch modulov a Luapower modulov Bc. Ladislav Zemko Done 548 Task Vytvorenie Dockerfile Bc. Ladislav Zemko Done 549 Task Dokument\u00e1cia CI image Bc. Ladislav Zemko Done 550 Product Backlog Item Modifik\u00e1cia CMakeLists Lua modulov Bc. Ladislav Zemko Review 3 551 Task Modifik\u00e1cia Luadb Bc. Ladislav Zemko Done 552 Task Modifik\u00e1cia Luametrics Bc. Ladislav Zemko Done 553 Task Modifik\u00e1cia Luameg Bc. Ladislav Zemko Done 554 Task Modifik\u00e1cia Luagit Bc. Ladislav Zemko Done 555 Task Modifik\u00e1cia Luatree Bc. Ladislav Zemko Done 556 Product Backlog Item \u00daprava CI Lua modulov Bc. Ladislav Zemko Review 5 557 Task Modifik\u00e1cia Luadb Bc. Ladislav Zemko Done 558 Task Modifik\u00e1cia Luameg Bc. Ladislav Zemko Done 559 Task Modifik\u00e1cia Luametrics Bc. Ladislav Zemko Done 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky In development 5 561 Task Busted testy LuaDB Bc. Andrej Erd\u00e9lsky In Progress 5 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky In Progress 5 563 Task Busted testy LuaMeg Bc. Andrej Erd\u00e9lsky In Progress 5 564 Task Modifik\u00e1cia Luagit Bc. Ladislav Zemko Done 565 Task Modifik\u00e1cia Luatree Bc. Ladislav Zemko Done 566 Task Analyzova\u0165 pou\u017eitie browsera Jakub Bla\u017eej Done 567 Task Upravi\u0165 Unity \u010das\u0165 Jakub Bla\u017eej In Progress 3 568 Task Upravi\u0165 Lua \u010das\u0165 Jakub Bla\u017eej To Do 3 569 Task Opravi\u0165 bug Bc. \u0160imon V\u00e1ro\u0161 Done 570 Task Implementova\u0165 funkcionalitu na pr\u00edslu\u0161n\u00e9 tla\u010didlo Bc. \u0160imon V\u00e1ro\u0161 Done 571 Task Navrhnu\u0165 ovl\u00e1dac\u00ed prvok Bc. \u0160imon V\u00e1ro\u0161 To Do 1 572 Task Implementova\u0165 premiest\u0148ovanie Bc. \u0160imon V\u00e1ro\u0161 To Do 4 573 Bug Chybn\u00e1 URL na gitlab repozit\u00e1r v in\u0161tala\u010dnej pr\u00edru\u010dke (Windows) Jakub Bla\u017eej Done 574 Bug Doplni\u0165 do in\u0161tala\u010dnej pr\u00edru\u010dky (Windows), \u017ee pri konfigur\u00e1cii CMake-u treba vybra\u0165 verziu VS s nain\u0161talovan\u00fdm Cpp kompil\u00e1torom Jakub Bla\u017eej Done 575 Task Integr\u00e1cia LRDB Bc. Ladislav Zemko Done 576 Task Upravi\u0165 link Jakub Bla\u017eej Done 577 Task \u00daprava stages a podmienok exportu artefaktov Bc. Ladislav Zemko Done 578 Task Oprava modulu metrics/utils Bc. Ladislav Zemko Done 579 Task Rie\u0161enie konfliktov Bc. Ladislav Zemko Done 580 Task Prida\u0165 zn\u00e1my probl\u00e9m Jakub Bla\u017eej Done 581 Bug Odzna\u010dovanie v\u0161etk\u00fdch pri ozna\u017eovan\u00ed viacer\u00fdch objektov pri kliknut\u00ed mimo New 582 Task Prehladnejsi coverage Bc. Andrej Erd\u00e9lsky Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort Remaining Work 145 Product Backlog Item Odobra\u0165 magnet zo sc\u00e9ny Bc. \u0160imon V\u00e1ro\u0161 To accept 3 147 Product Backlog Item Pohybova\u0165 magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 Ready to develop 5 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetov Bc. \u0160imon V\u00e1ro\u0161 To accept 5 362 Product Backlog Item Zobrazi\u0165 diagram pre zvolen\u00fd uzol Jakub Bla\u017eej In development 526 Bug Neporiadky v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 Committed 2 536 Product Backlog Item Metodika ako p\u00edsa\u0165 dokument\u00e1ciu Bc. Martina Han\u00e1kov\u00e1 Review 5 537 Task Pop\u00edsa\u0165 \u00fa\u010del jednotliv\u00fdch \u010dast\u00ed dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 538 Task Pripravi\u0165 templates pre niektor\u00e9 \u010dasti dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 539 Task Nap\u00edsa\u0165 / upravi\u0165 metodiku na p\u00edsanie dokument\u00e1cie [linky] Bc. Martina Han\u00e1kov\u00e1 Done 540 Task Konzult\u00e1cie s Jakubom oh\u013eadom \u0161trukt\u00fary dokument\u00e1cie a obsahu metodiky Bc. Martina Han\u00e1kov\u00e1 Done 541 Task Oprava form\u00e1tovac\u00edch ch\u00fdb Bc. Martina Han\u00e1kov\u00e1 Done 542 Task Zmena umiestnenia niektor\u00fdch dokumetov + \u0161trukt\u00farne zmeny Bc. Martina Han\u00e1kov\u00e1 Done 543 Product Backlog Item Modifik\u00e1cia Lua CI Image Bc. Ladislav Zemko Review 8 544 Task Vytvorenie image s funk\u010dn\u00fdm Luapower Bc. Ladislav Zemko Done 545 Task In\u0161tal\u00e1cia luarocks Bc. Ladislav Zemko Done 546 Task In\u0161tal\u00e1cia z\u00e1vislost\u00ed s explicitn\u00fdm uveden\u00edm verzie Bc. Ladislav Zemko Done 547 Task Linkovanie syst\u00e9mov\u00fdch modulov a Luapower modulov Bc. Ladislav Zemko Done 548 Task Vytvorenie Dockerfile Bc. Ladislav Zemko Done 549 Task Dokument\u00e1cia CI image Bc. Ladislav Zemko Done 550 Product Backlog Item Modifik\u00e1cia CMakeLists Lua modulov Bc. Ladislav Zemko Review 3 551 Task Modifik\u00e1cia Luadb Bc. Ladislav Zemko Done 552 Task Modifik\u00e1cia Luametrics Bc. Ladislav Zemko Done 553 Task Modifik\u00e1cia Luameg Bc. Ladislav Zemko Done 554 Task Modifik\u00e1cia Luagit Bc. Ladislav Zemko Done 555 Task Modifik\u00e1cia Luatree Bc. Ladislav Zemko Done 556 Product Backlog Item \u00daprava CI Lua modulov Bc. Ladislav Zemko Review 5 557 Task Modifik\u00e1cia Luadb Bc. Ladislav Zemko Done 558 Task Modifik\u00e1cia Luameg Bc. Ladislav Zemko Done 559 Task Modifik\u00e1cia Luametrics Bc. Ladislav Zemko Done 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky In development 5 561 Task Busted testy LuaDB Bc. Andrej Erd\u00e9lsky In Progress 5 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky In Progress 5 563 Task Busted testy LuaMeg Bc. Andrej Erd\u00e9lsky In Progress 5 564 Task Modifik\u00e1cia Luagit Bc. Ladislav Zemko Done 565 Task Modifik\u00e1cia Luatree Bc. Ladislav Zemko Done 566 Task Analyzova\u0165 pou\u017eitie browsera Jakub Bla\u017eej Done 567 Task Upravi\u0165 Unity \u010das\u0165 Jakub Bla\u017eej In Progress 3 568 Task Upravi\u0165 Lua \u010das\u0165 Jakub Bla\u017eej To Do 3 569 Task Opravi\u0165 bug Bc. \u0160imon V\u00e1ro\u0161 Done 570 Task Implementova\u0165 funkcionalitu na pr\u00edslu\u0161n\u00e9 tla\u010didlo Bc. \u0160imon V\u00e1ro\u0161 Done 571 Task Navrhnu\u0165 ovl\u00e1dac\u00ed prvok Bc. \u0160imon V\u00e1ro\u0161 To Do 1 572 Task Implementova\u0165 premiest\u0148ovanie Bc. \u0160imon V\u00e1ro\u0161 To Do 4 573 Bug Chybn\u00e1 URL na gitlab repozit\u00e1r v in\u0161tala\u010dnej pr\u00edru\u010dke (Windows) Jakub Bla\u017eej Done 574 Bug Doplni\u0165 do in\u0161tala\u010dnej pr\u00edru\u010dky (Windows), \u017ee pri konfigur\u00e1cii CMake-u treba vybra\u0165 verziu VS s nain\u0161talovan\u00fdm Cpp kompil\u00e1torom Jakub Bla\u017eej Done 575 Task Integr\u00e1cia LRDB Bc. Ladislav Zemko Done 576 Task Upravi\u0165 link Jakub Bla\u017eej Done 577 Task \u00daprava stages a podmienok exportu artefaktov Bc. Ladislav Zemko Done 578 Task Oprava modulu metrics/utils Bc. Ladislav Zemko Done 579 Task Rie\u0161enie konfliktov Bc. Ladislav Zemko Done 580 Task Prida\u0165 zn\u00e1my probl\u00e9m Jakub Bla\u017eej Done 581 Bug Odzna\u010dovanie v\u0161etk\u00fdch pri ozna\u017eovan\u00ed viacer\u00fdch objektov pri kliknut\u00ed mimo New 582 Task Prehladnejsi coverage Bc. Andrej Erd\u00e9lsky Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/popis/","text":"Trvanie \u0161printu: 30.03.-14.04. 2020 Doru\u010den\u00e9 story pointy: 40/77 Po\u010das \u0161tvrt\u00e9ho \u0161printu sme pokra\u010dovali v pr\u00e1ci na megnetoch. Mali sme dorobi\u0165 zmazanie magnetu, jeho presun a aj spojenie s uzlami. \u010ealej sme sa venovali aj v\u00fdvoju nov\u00e9ho docker image-u pre Lua moduly, s t\u00fdm s\u00favisiace aj zmeny v CI. Pokra\u010dovali sme v pr\u00e1ci na zobrazen\u00ed UML diagramov. Povedali sme si tie\u017e, \u017ee prerob\u00edme metodiku na p\u00edsanie dokument\u00e1cie a oprav\u00edme chyby v dokument\u00e1cii, ktor\u00e9 priebe\u017ene vznikli. Po\u010das tohto \u0161printu sa n\u00e1m pomerne darilo. V\u00e4\u010d\u0161inu \u00faloh sa podarilo dokon\u010di\u0165. \u010casto m\u00e1me probl\u00e9m s rozbeh\u00e1van\u00edm projektu a str\u00e1came na tom ve\u013ea \u010dasu.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie \u010c\u00edta\u0165 emaily z gitlabu ke\u010f si zadal MR, aby reviewer ne\u010dakal dva t\u00fd\u017edne na opravu Priebe\u017ene pracova\u0165 na taskoch D\u00e1va\u0165 do jedn\u00e9ho \u0161printu dve user story, ktor\u00e9 sa dot\u00fdkaj\u00fa toho ist\u00e9ho k\u00f3du, lebo dok\u00e1dza k probl\u00e9mom pri vytv\u00e1ran\u00ed vea n\u00e1sledne MR Pr\u00ed pl\u00e1novan\u00ed \u0161printu zobra\u0165 do \u00favahy, \u010di dve user story nemanipuluj\u00fa s t\u00fdm ist\u00fdm k\u00f3dom Kontrolova\u0165 si pipeline po pushnut\u00ed - testovanie si vlastn\u00e9ho k\u00f3du V\u0161etci sa viacej zap\u00e1jame do diania na stretnutiach aj projekte D\u00e1va\u0165 MR na review na posledn\u00fa chv\u00ed\u013eu Pok\u00fasi\u0165 sa d\u00e1va\u0165 merge request nareview aspo\u0148 3 dni pred ukon\u010den\u00edm \u0161printu a sna\u017ei\u0165 sa pru\u017ene reagova\u0165 na pripomienky, aby sa stihli review dokon\u010di\u0165 do konca \u0161printu Podpisova\u0165 sa do retrospekt\u00edvy (priebe\u017enej verzii) Spolupr\u00e1ca na \u00faloh\u00e1ch Prid\u00e1va\u0165 si tasky do TFS a\u017e nieko\u013enko dn\u00ed po za\u010diatku \u0161printu V\u0161etci si musia zap\u00edsa\u0165 tasky v prv\u00fd de\u0148 \u0161printu hne\u010f po stretnut\u00ed V\u017edy ke\u010f vytv\u00e1ram MR assignem ho reviewerovi, aby mu pri\u0161lo upozornenie Viac komunikova\u0165 s ved\u00facim Prid\u00e1va\u0165 si tasky do TFS sk\u00f4r Dochv\u00ed\u013enos\u0165","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_4/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie \u010c\u00edta\u0165 emaily z gitlabu ke\u010f si zadal MR, aby reviewer ne\u010dakal dva t\u00fd\u017edne na opravu Priebe\u017ene pracova\u0165 na taskoch D\u00e1va\u0165 do jedn\u00e9ho \u0161printu dve user story, ktor\u00e9 sa dot\u00fdkaj\u00fa toho ist\u00e9ho k\u00f3du, lebo dok\u00e1dza k probl\u00e9mom pri vytv\u00e1ran\u00ed vea n\u00e1sledne MR Pr\u00ed pl\u00e1novan\u00ed \u0161printu zobra\u0165 do \u00favahy, \u010di dve user story nemanipuluj\u00fa s t\u00fdm ist\u00fdm k\u00f3dom Kontrolova\u0165 si pipeline po pushnut\u00ed - testovanie si vlastn\u00e9ho k\u00f3du V\u0161etci sa viacej zap\u00e1jame do diania na stretnutiach aj projekte D\u00e1va\u0165 MR na review na posledn\u00fa chv\u00ed\u013eu Pok\u00fasi\u0165 sa d\u00e1va\u0165 merge request nareview aspo\u0148 3 dni pred ukon\u010den\u00edm \u0161printu a sna\u017ei\u0165 sa pru\u017ene reagova\u0165 na pripomienky, aby sa stihli review dokon\u010di\u0165 do konca \u0161printu Podpisova\u0165 sa do retrospekt\u00edvy (priebe\u017enej verzii) Spolupr\u00e1ca na \u00faloh\u00e1ch Prid\u00e1va\u0165 si tasky do TFS a\u017e nieko\u013enko dn\u00ed po za\u010diatku \u0161printu V\u0161etci si musia zap\u00edsa\u0165 tasky v prv\u00fd de\u0148 \u0161printu hne\u010f po stretnut\u00ed V\u017edy ke\u010f vytv\u00e1ram MR assignem ho reviewerovi, aby mu pri\u0161lo upozornenie Viac komunikova\u0165 s ved\u00facim Prid\u00e1va\u0165 si tasky do TFS sk\u00f4r Dochv\u00ed\u013enos\u0165","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort Remaining Work 316 Product Backlog Item Odstr\u00e1nenie prepojen\u00ed magnetov s uzlami Mat\u00fa\u0161 Zele\u0148\u00e1k Ready to develop 3 321 Product Backlog Item Nastavenie vzdialenosti magnetu Bc. \u0160imon V\u00e1ro\u0161 In development 5 322 Product Backlog Item Nastavenie m\u00f3du pri\u0165ahovania/odpudzovania Bc. \u0160imon V\u00e1ro\u0161 Planned 5 362 Product Backlog Item Zobrazi\u0165 diagram pre zvolen\u00fd uzol Jakub Bla\u017eej Review 8 533 Task Implement\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k Done 535 Task Implement\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 4 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky In development 5 561 Task Busted testy LuaGit Bc. Andrej Erd\u00e9lsky Done 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky In Progress 5 563 Task Busted testy LuaMeg Bc. Andrej Erd\u00e9lsky Done 567 Task Upravi\u0165 Unity \u010das\u0165 Jakub Bla\u017eej Done 568 Task Upravi\u0165 Lua \u010das\u0165 Jakub Bla\u017eej Done 571 Task Navrhnu\u0165 ovl\u00e1dac\u00ed prvok Bc. \u0160imon V\u00e1ro\u0161 Done 572 Task Implementova\u0165 premiest\u0148ovanie Bc. \u0160imon V\u00e1ro\u0161 Done 583 Product Backlog Item Pripravi\u0165 stavov\u00e9 diagramy k magnetom a menu Planned 5 584 Task Stavov\u00fd diagram k menu To Do 585 Task Stavov\u00fd diagram k magnetu To Do 586 Task Premyslie\u0165 ako bude potrebn\u00e9 upravi\u0165 UI Bc. \u0160imon V\u00e1ro\u0161 To Do 2 587 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 To Do 3 588 Task Premyslie\u0165, kde a ako sa bude vzdialenos\u0165 nastavova\u0165 Bc. \u0160imon V\u00e1ro\u0161 Done 589 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 In Progress 2 591 Task Nastavenie LUA_PATH a LUA_CPATH Bc. Ladislav Zemko In Progress 592 Task Odstr\u00e1nenie symbolick\u00fdch liniek Bc. Ladislav Zemko In Progress 593 Task In\u0161tal\u00e1cia modulov do syst\u00e9mov\u00fdch adres\u00e1rov Bc. Ladislav Zemko In Progress 599 Feature Develop image pre Lua In Progress 600 Product Backlog Item Implement\u00e1cia Lua develop image Bc. Ladislav Zemko Review 5 601 Task Vytvorenie docker-compose Bc. Ladislav Zemko Done 602 Task Nastavenie LUA_PATH a LUA_CPATH Bc. Ladislav Zemko Done 603 Task Mount adres\u00e1rov Jakub Bla\u017eej Done 605 Task Vytvori\u0165 docker image Jakub Bla\u017eej Done 606 Product Backlog Item \u00daprava ozna\u010denia verzie C++ CI Image Bc. Ladislav Zemko Done 3 607 Task Zmena tagu image Bc. Ladislav Zemko Done 608 Task \u00daprava v CI LuaInterface Bc. Ladislav Zemko Done 609 Task \u00daprava v CI Luagraph Bc. Ladislav Zemko Done 610 Task Review Bc. Ladislav Zemko Done 611 Task Dokument\u00e1cia Bc. Ladislav Zemko Done 614 Product Backlog Item Staticka anal\u00fdza k\u00f3du C# Bc. Andrej Erd\u00e9lsky In development 5 615 Task Analyza dostupnych analyz\u00e1torov k\u00f3du C# Bc. Andrej Erd\u00e9lsky In Progress 616 Task nasadenie analyz\u00e1tora Bc. Andrej Erd\u00e9lsky To Do 618 Product Backlog Item Presk\u00fama\u0165 mo\u017enosti automatickej zmeny uk\u00e1\u017eok k\u00f3du v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 In development 8 619 Task Na\u0161tudova\u0165 si mo\u017enosti automatickej zmeny k\u00f3du pre Mkdocs Bc. Martina Han\u00e1kov\u00e1 Done 620 Task Na\u0161tudova\u0165 si mo\u017enosti automatickej zmeny k\u00f3du pre Sphinx Bc. Martina Han\u00e1kov\u00e1 Done 622 Task Vysk\u00fa\u0161a\u0165 si pre\u0161tudovan\u00e9 mo\u017enosti v praxi Bc. Martina Han\u00e1kov\u00e1 Done 623 Task Konzult\u00e1cia s Jakubom Bc. Martina Han\u00e1kov\u00e1 In Progress 1.25 624 Task Spravi\u0165 skript na vytvorenie artefaktov, ktor\u00e9 bud\u00fa obsahova\u0165 otagovan\u00e9 \u010dasti k\u00f3du Bc. Martina Han\u00e1kov\u00e1 In Progress 4 625 Task Spravi\u0165 skript na stiahnutie artefaktov a ich pou\u017eitie pre aktu\u00e1lnu branch Bc. Martina Han\u00e1kov\u00e1 To Do 3 626 Task Spravi\u0165 makro, ktor\u00e9 bude dosadzova\u0165 uk\u00e1\u017eky k\u00f3du do dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 To Do 2 627 Bug Prieklep pri volan\u00ed met\u00f3d loggera Lua modulov Bc. Ladislav Zemko Done 628 Product Backlog Item code maintenance - lua modules Bc. Marek Kr\u00e1tky In development 629 Task Rozbehanie prostredia Bc. Marek Kr\u00e1tky Done 630 Impediment Company firewall blocking drive sharing with docker Bc. Marek Kr\u00e1tky Open 631 Task CM - luameg Bc. Marek Kr\u00e1tky In Progress 632 Task CM - luadb Bc. Marek Kr\u00e1tky In Progress 633 Task CM - Luagit Bc. Marek Kr\u00e1tky To Do 634 Task CM - luametrics Bc. Marek Kr\u00e1tky In Progress 635 Task CM - luatree Bc. Marek Kr\u00e1tky To Do 636 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej Done 637 Product Backlog Item Komplexn\u00e9 testy pre LuaDb Bc. Eva Nedeliakov\u00e1 Ready to develop 5 638 Task Rozbehanie prostredia na sp\u00fa\u0161\u0165anie testov To Do 639 Task Vytvorenie testu na sample s\u00fabore To Do 640 Task Rozbehanie testov v dockeri Bc. Eva Nedeliakov\u00e1 Done 642 Product Backlog Item Mergova\u0165 vetvu pre hlasov\u00e9 pr\u00edkazy Ready to plan","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort Remaining Work 316 Product Backlog Item Odstr\u00e1nenie prepojen\u00ed magnetov s uzlami Mat\u00fa\u0161 Zele\u0148\u00e1k Ready to develop 3 321 Product Backlog Item Nastavenie vzdialenosti magnetu Bc. \u0160imon V\u00e1ro\u0161 In development 5 322 Product Backlog Item Nastavenie m\u00f3du pri\u0165ahovania/odpudzovania Bc. \u0160imon V\u00e1ro\u0161 Planned 5 362 Product Backlog Item Zobrazi\u0165 diagram pre zvolen\u00fd uzol Jakub Bla\u017eej Review 8 533 Task Implement\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k Done 535 Task Implement\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 4 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky In development 5 561 Task Busted testy LuaGit Bc. Andrej Erd\u00e9lsky Done 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky In Progress 5 563 Task Busted testy LuaMeg Bc. Andrej Erd\u00e9lsky Done 567 Task Upravi\u0165 Unity \u010das\u0165 Jakub Bla\u017eej Done 568 Task Upravi\u0165 Lua \u010das\u0165 Jakub Bla\u017eej Done 571 Task Navrhnu\u0165 ovl\u00e1dac\u00ed prvok Bc. \u0160imon V\u00e1ro\u0161 Done 572 Task Implementova\u0165 premiest\u0148ovanie Bc. \u0160imon V\u00e1ro\u0161 Done 583 Product Backlog Item Pripravi\u0165 stavov\u00e9 diagramy k magnetom a menu Planned 5 584 Task Stavov\u00fd diagram k menu To Do 585 Task Stavov\u00fd diagram k magnetu To Do 586 Task Premyslie\u0165 ako bude potrebn\u00e9 upravi\u0165 UI Bc. \u0160imon V\u00e1ro\u0161 To Do 2 587 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 To Do 3 588 Task Premyslie\u0165, kde a ako sa bude vzdialenos\u0165 nastavova\u0165 Bc. \u0160imon V\u00e1ro\u0161 Done 589 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 In Progress 2 591 Task Nastavenie LUA_PATH a LUA_CPATH Bc. Ladislav Zemko In Progress 592 Task Odstr\u00e1nenie symbolick\u00fdch liniek Bc. Ladislav Zemko In Progress 593 Task In\u0161tal\u00e1cia modulov do syst\u00e9mov\u00fdch adres\u00e1rov Bc. Ladislav Zemko In Progress 599 Feature Develop image pre Lua In Progress 600 Product Backlog Item Implement\u00e1cia Lua develop image Bc. Ladislav Zemko Review 5 601 Task Vytvorenie docker-compose Bc. Ladislav Zemko Done 602 Task Nastavenie LUA_PATH a LUA_CPATH Bc. Ladislav Zemko Done 603 Task Mount adres\u00e1rov Jakub Bla\u017eej Done 605 Task Vytvori\u0165 docker image Jakub Bla\u017eej Done 606 Product Backlog Item \u00daprava ozna\u010denia verzie C++ CI Image Bc. Ladislav Zemko Done 3 607 Task Zmena tagu image Bc. Ladislav Zemko Done 608 Task \u00daprava v CI LuaInterface Bc. Ladislav Zemko Done 609 Task \u00daprava v CI Luagraph Bc. Ladislav Zemko Done 610 Task Review Bc. Ladislav Zemko Done 611 Task Dokument\u00e1cia Bc. Ladislav Zemko Done 614 Product Backlog Item Staticka anal\u00fdza k\u00f3du C# Bc. Andrej Erd\u00e9lsky In development 5 615 Task Analyza dostupnych analyz\u00e1torov k\u00f3du C# Bc. Andrej Erd\u00e9lsky In Progress 616 Task nasadenie analyz\u00e1tora Bc. Andrej Erd\u00e9lsky To Do 618 Product Backlog Item Presk\u00fama\u0165 mo\u017enosti automatickej zmeny uk\u00e1\u017eok k\u00f3du v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 In development 8 619 Task Na\u0161tudova\u0165 si mo\u017enosti automatickej zmeny k\u00f3du pre Mkdocs Bc. Martina Han\u00e1kov\u00e1 Done 620 Task Na\u0161tudova\u0165 si mo\u017enosti automatickej zmeny k\u00f3du pre Sphinx Bc. Martina Han\u00e1kov\u00e1 Done 622 Task Vysk\u00fa\u0161a\u0165 si pre\u0161tudovan\u00e9 mo\u017enosti v praxi Bc. Martina Han\u00e1kov\u00e1 Done 623 Task Konzult\u00e1cia s Jakubom Bc. Martina Han\u00e1kov\u00e1 In Progress 1.25 624 Task Spravi\u0165 skript na vytvorenie artefaktov, ktor\u00e9 bud\u00fa obsahova\u0165 otagovan\u00e9 \u010dasti k\u00f3du Bc. Martina Han\u00e1kov\u00e1 In Progress 4 625 Task Spravi\u0165 skript na stiahnutie artefaktov a ich pou\u017eitie pre aktu\u00e1lnu branch Bc. Martina Han\u00e1kov\u00e1 To Do 3 626 Task Spravi\u0165 makro, ktor\u00e9 bude dosadzova\u0165 uk\u00e1\u017eky k\u00f3du do dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 To Do 2 627 Bug Prieklep pri volan\u00ed met\u00f3d loggera Lua modulov Bc. Ladislav Zemko Done 628 Product Backlog Item code maintenance - lua modules Bc. Marek Kr\u00e1tky In development 629 Task Rozbehanie prostredia Bc. Marek Kr\u00e1tky Done 630 Impediment Company firewall blocking drive sharing with docker Bc. Marek Kr\u00e1tky Open 631 Task CM - luameg Bc. Marek Kr\u00e1tky In Progress 632 Task CM - luadb Bc. Marek Kr\u00e1tky In Progress 633 Task CM - Luagit Bc. Marek Kr\u00e1tky To Do 634 Task CM - luametrics Bc. Marek Kr\u00e1tky In Progress 635 Task CM - luatree Bc. Marek Kr\u00e1tky To Do 636 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej Done 637 Product Backlog Item Komplexn\u00e9 testy pre LuaDb Bc. Eva Nedeliakov\u00e1 Ready to develop 5 638 Task Rozbehanie prostredia na sp\u00fa\u0161\u0165anie testov To Do 639 Task Vytvorenie testu na sample s\u00fabore To Do 640 Task Rozbehanie testov v dockeri Bc. Eva Nedeliakov\u00e1 Done 642 Product Backlog Item Mergova\u0165 vetvu pre hlasov\u00e9 pr\u00edkazy Ready to plan","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/popis/","text":"Trvanie \u0161printu: 15.04.-26.04. 2020 Doru\u010den\u00e9 story pointy: 51/82 Po\u010das n\u00e1\u0161ho predposledn\u00e9ho \u0161printu sme u\u017e v\u0161etci dos\u0165 dobre vedeli, na \u010dom chceme pracova\u0165. Pracovali sme na r\u00f4znych oblastiach. Implementovali sme \u010fal\u0161iu funkcionalitu k magnetom, roz\u0161irovali sme testi a aj infra\u0161trukt\u00faru. Robili sme na zobrazovan\u00ed UML diagramov a opravovan\u00ed ch\u00fdb v k\u00f3de. Tie\u017e sme pracovali na zlep\u0161en\u00ed dokument\u00e1cie. Cel\u00fd \u0161print prebiehal hladko, dobre sa n\u00e1m spolupracovalo. Je c\u00edti\u0165, \u017ee u\u017e sme zabehnut\u00ed. V\u00e4\u010d\u0161inu \u00faloh sa n\u00e1m podarilo dokon\u010di\u0165 alebo s\u00fa to \u00falohy, ktor\u00e9 trvaj\u00fa dlh\u0161ie a pokra\u010dujeme v pr\u00e1ci na nich aj v \u010fal\u0161om \u0161printe.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Assignova\u0165 v\u0161etky MR k jednej US na toho ist\u00e9ho reviewera Akt\u00edvna spolupr\u00e1ca pri code review a r\u00fdchlej\u0161ie reakcie na emaily z Gitlabu Plytva\u0165 \u010das na calle, ke\u010f sa rie\u0161ia veci, ktor\u00e9 sa ma net\u00fdkaj\u00fa Odpoji\u0165 sa z callu, ale po\u010das doby stretnutia by\u0165 st\u00e1le dostupn\u00fd a v pr\u00edpade potreby sa znova pripoji\u0165 Viac diskutova\u0165 pripomienky pri review Udr\u017eiava\u0165 si poriadok vo vetv\u00e1ch P\u00edsa\u0165 subjekt\u00edvne pripomienky Sna\u017ei\u0165 sa len o objekt\u00edvne pripomienky, pr\u00edpadne si prizva\u0165 tretiu osobu do diskusie Efekt\u00edvnej\u0161ia pr\u00e1ca na stretnutiach Samostatn\u00e9 konverz\u00e1cie len medzi zainteresovan\u00fdmi \u013eu\u010fmi k dan\u00e9mu probl\u00e9mu Priebe\u017en\u00e9 skor\u0161ie za\u010datie taskov","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_5/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Assignova\u0165 v\u0161etky MR k jednej US na toho ist\u00e9ho reviewera Akt\u00edvna spolupr\u00e1ca pri code review a r\u00fdchlej\u0161ie reakcie na emaily z Gitlabu Plytva\u0165 \u010das na calle, ke\u010f sa rie\u0161ia veci, ktor\u00e9 sa ma net\u00fdkaj\u00fa Odpoji\u0165 sa z callu, ale po\u010das doby stretnutia by\u0165 st\u00e1le dostupn\u00fd a v pr\u00edpade potreby sa znova pripoji\u0165 Viac diskutova\u0165 pripomienky pri review Udr\u017eiava\u0165 si poriadok vo vetv\u00e1ch P\u00edsa\u0165 subjekt\u00edvne pripomienky Sna\u017ei\u0165 sa len o objekt\u00edvne pripomienky, pr\u00edpadne si prizva\u0165 tretiu osobu do diskusie Efekt\u00edvnej\u0161ia pr\u00e1ca na stretnutiach Samostatn\u00e9 konverz\u00e1cie len medzi zainteresovan\u00fdmi \u013eu\u010fmi k dan\u00e9mu probl\u00e9mu Priebe\u017en\u00e9 skor\u0161ie za\u010datie taskov","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort Remaining Work 321 Product Backlog Item Nastavenie vzdialenosti magnetu Bc. \u0160imon V\u00e1ro\u0161 Done 5 322 Product Backlog Item Nastavenie m\u00f3du pri\u0165ahovania/odpudzovania Bc. \u0160imon V\u00e1ro\u0161 Planned 5 359 Product Backlog Item Generovanie sequence diagramu pre Lua funkcie Jakub Bla\u017eej Ready to develop 3 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky Done 5 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky Done 583 Product Backlog Item Pripravi\u0165 stavov\u00e9 diagramy k magnetom a menu Planned 5 584 Task Stavov\u00fd diagram k menu To Do 585 Task Stavov\u00fd diagram k magnetu To Do 586 Task Premyslie\u0165 ako bude potrebn\u00e9 upravi\u0165 UI Bc. \u0160imon V\u00e1ro\u0161 To Do 2 587 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 To Do 3 589 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 614 Product Backlog Item Staticka anal\u00fdza k\u00f3du C# Bc. Andrej Erd\u00e9lsky Done 5 615 Task Analyza dostupnych analyz\u00e1torov k\u00f3du C# Bc. Andrej Erd\u00e9lsky Done 616 Task nasadenie analyz\u00e1tora Jakub Bla\u017eej Done 618 Product Backlog Item Presk\u00fama\u0165 mo\u017enosti automatickej zmeny uk\u00e1\u017eok k\u00f3du v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 In development 8 623 Task Konzult\u00e1cia s Jakubom Bc. Martina Han\u00e1kov\u00e1 Done 624 Task Spravi\u0165 skript na vytvorenie artefaktov, ktor\u00e9 bud\u00fa obsahova\u0165 otagovan\u00e9 \u010dasti k\u00f3du Bc. Martina Han\u00e1kov\u00e1 Done 625 Task Spravi\u0165 skript na stiahnutie artefaktov a ich pou\u017eitie pre aktu\u00e1lnu branch Jakub Bla\u017eej Done 626 Task Spravi\u0165 makro, ktor\u00e9 bude dosadzova\u0165 uk\u00e1\u017eky k\u00f3du do dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 628 Product Backlog Item code maintenance - lua modules Bc. Marek Kr\u00e1tky In development 5 631 Task CM - luameg Bc. Marek Kr\u00e1tky Done 632 Task CM - luadb Bc. Marek Kr\u00e1tky Done 634 Task CM - luametrics Bc. Marek Kr\u00e1tky Done 637 Product Backlog Item Komplexn\u00e9 testy pre LuaDb Bc. Eva Nedeliakov\u00e1 To accept 5 638 Task Rozbehanie prostredia na sp\u00fa\u0161\u0165anie testov Bc. Eva Nedeliakov\u00e1 Done 639 Task Vytvorenie testu na sample s\u00fabore Bc. Andrej Erd\u00e9lsky Done 640 Task Rozbehanie testov v dockeri Bc. Eva Nedeliakov\u00e1 Done 641 Task Upravi\u0165 luameg plantuml gener\u00e1tor Jakub Bla\u017eej In Progress 5 643 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej To Do 2 644 Task Vytvori\u0165 CI image Jakub Bla\u017eej Done 645 Product Backlog Item Anal\u00fdza IPC/RPC n\u00e1strojov Bc. Ladislav Zemko Review 646 Task Roztriedenie materi\u00e1lov Bc. Ladislav Zemko Done 647 Task Anal\u00fdza n\u00e1strojov Bc. Ladislav Zemko Done 648 Task Dokument\u00e1cia Bc. Ladislav Zemko Done 649 Product Backlog Item Schovanie magnetov / meta hr\u00e1n Mat\u00fa\u0161 Zele\u0148\u00e1k In development 3 650 Task Pridanie funkcionality Mat\u00fa\u0161 Zele\u0148\u00e1k Done 651 Task \u00daprava UI magnetov Mat\u00fa\u0161 Zele\u0148\u00e1k Done 652 Product Backlog Item Pou\u017e\u00edvate\u013esk\u00e1 dokument\u00e1cia k magnetom Mat\u00fa\u0161 Zele\u0148\u00e1k Ready to develop 4 653 Task Prid\u00e1vanie/odoberanie magnetu z/do sc\u00e9ny Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 1 654 Task Typ magnetu pri\u0165ahuj\u00faceho/odpudzuj\u00faceho na z\u00e1klade spojenia s uzlom Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 1 655 Task Typ magnetu pri\u0165ahuj\u00faceho/odpudzuj\u00faceho na z\u00e1klade vzdialenosti Bc. \u0160imon V\u00e1ro\u0161 To Do 1 656 Task Pohybovanie magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 To Do 1 659 Task Dokument\u00e1cia CI image a skriptov Jakub Bla\u017eej Done 660 Task Prida\u0165 do v\u0161etk\u00fdch projektov job na code snippety Bc. Martina Han\u00e1kov\u00e1 Done 665 Task Komplexn\u00fd test na overenie spr\u00e1vneho zaradenia s\u00faborov do prie\u010dinku Bc. Eva Nedeliakov\u00e1 Done 666 Task Komplexn\u00fd test na overenie spr\u00e1vneho linkovania volan\u00ed funkcii Bc. Eva Nedeliakov\u00e1 Done 667 Product Backlog Item Komplexn\u00e9 testy pre LuaMetrics Bc. Eva Nedeliakov\u00e1 In development 5 668 Task Test na po\u010det pr\u00e1zdnych riadkov Bc. Eva Nedeliakov\u00e1 Done 669 Task Test kontroluj\u00faci spr\u00e1vne po\u010d\u00edtanie metriky po\u010dtu koment\u00e1rov Bc. Eva Nedeliakov\u00e1 Done 670 Task Test metriku riadkov k\u00f3du Bc. Eva Nedeliakov\u00e1 To Do 671 Task Test na metriku nepr\u00e1zdnych riadkov Bc. Eva Nedeliakov\u00e1 To Do 672 Task Test pre spr\u00e1vne na\u010d\u00edtanie AST - serializovanie AST do s\u00faboru Bc. Eva Nedeliakov\u00e1 To Do 673 Task Dokument\u00e1cia Bc. Martina Han\u00e1kov\u00e1 To Do 1.5 674 Task CI job pre s\u0165ahovanie Jakub Bla\u017eej Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort Remaining Work 321 Product Backlog Item Nastavenie vzdialenosti magnetu Bc. \u0160imon V\u00e1ro\u0161 Done 5 322 Product Backlog Item Nastavenie m\u00f3du pri\u0165ahovania/odpudzovania Bc. \u0160imon V\u00e1ro\u0161 Planned 5 359 Product Backlog Item Generovanie sequence diagramu pre Lua funkcie Jakub Bla\u017eej Ready to develop 3 560 Product Backlog Item Doplnenie a vylep\u0161enie Lua busted testov Bc. Andrej Erd\u00e9lsky Done 5 562 Task Busted testy LuaMetrics Bc. Andrej Erd\u00e9lsky Done 583 Product Backlog Item Pripravi\u0165 stavov\u00e9 diagramy k magnetom a menu Planned 5 584 Task Stavov\u00fd diagram k menu To Do 585 Task Stavov\u00fd diagram k magnetu To Do 586 Task Premyslie\u0165 ako bude potrebn\u00e9 upravi\u0165 UI Bc. \u0160imon V\u00e1ro\u0161 To Do 2 587 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 To Do 3 589 Task Implement\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 614 Product Backlog Item Staticka anal\u00fdza k\u00f3du C# Bc. Andrej Erd\u00e9lsky Done 5 615 Task Analyza dostupnych analyz\u00e1torov k\u00f3du C# Bc. Andrej Erd\u00e9lsky Done 616 Task nasadenie analyz\u00e1tora Jakub Bla\u017eej Done 618 Product Backlog Item Presk\u00fama\u0165 mo\u017enosti automatickej zmeny uk\u00e1\u017eok k\u00f3du v dokument\u00e1cii Bc. Martina Han\u00e1kov\u00e1 In development 8 623 Task Konzult\u00e1cia s Jakubom Bc. Martina Han\u00e1kov\u00e1 Done 624 Task Spravi\u0165 skript na vytvorenie artefaktov, ktor\u00e9 bud\u00fa obsahova\u0165 otagovan\u00e9 \u010dasti k\u00f3du Bc. Martina Han\u00e1kov\u00e1 Done 625 Task Spravi\u0165 skript na stiahnutie artefaktov a ich pou\u017eitie pre aktu\u00e1lnu branch Jakub Bla\u017eej Done 626 Task Spravi\u0165 makro, ktor\u00e9 bude dosadzova\u0165 uk\u00e1\u017eky k\u00f3du do dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 628 Product Backlog Item code maintenance - lua modules Bc. Marek Kr\u00e1tky In development 5 631 Task CM - luameg Bc. Marek Kr\u00e1tky Done 632 Task CM - luadb Bc. Marek Kr\u00e1tky Done 634 Task CM - luametrics Bc. Marek Kr\u00e1tky Done 637 Product Backlog Item Komplexn\u00e9 testy pre LuaDb Bc. Eva Nedeliakov\u00e1 To accept 5 638 Task Rozbehanie prostredia na sp\u00fa\u0161\u0165anie testov Bc. Eva Nedeliakov\u00e1 Done 639 Task Vytvorenie testu na sample s\u00fabore Bc. Andrej Erd\u00e9lsky Done 640 Task Rozbehanie testov v dockeri Bc. Eva Nedeliakov\u00e1 Done 641 Task Upravi\u0165 luameg plantuml gener\u00e1tor Jakub Bla\u017eej In Progress 5 643 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej To Do 2 644 Task Vytvori\u0165 CI image Jakub Bla\u017eej Done 645 Product Backlog Item Anal\u00fdza IPC/RPC n\u00e1strojov Bc. Ladislav Zemko Review 646 Task Roztriedenie materi\u00e1lov Bc. Ladislav Zemko Done 647 Task Anal\u00fdza n\u00e1strojov Bc. Ladislav Zemko Done 648 Task Dokument\u00e1cia Bc. Ladislav Zemko Done 649 Product Backlog Item Schovanie magnetov / meta hr\u00e1n Mat\u00fa\u0161 Zele\u0148\u00e1k In development 3 650 Task Pridanie funkcionality Mat\u00fa\u0161 Zele\u0148\u00e1k Done 651 Task \u00daprava UI magnetov Mat\u00fa\u0161 Zele\u0148\u00e1k Done 652 Product Backlog Item Pou\u017e\u00edvate\u013esk\u00e1 dokument\u00e1cia k magnetom Mat\u00fa\u0161 Zele\u0148\u00e1k Ready to develop 4 653 Task Prid\u00e1vanie/odoberanie magnetu z/do sc\u00e9ny Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 1 654 Task Typ magnetu pri\u0165ahuj\u00faceho/odpudzuj\u00faceho na z\u00e1klade spojenia s uzlom Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 1 655 Task Typ magnetu pri\u0165ahuj\u00faceho/odpudzuj\u00faceho na z\u00e1klade vzdialenosti Bc. \u0160imon V\u00e1ro\u0161 To Do 1 656 Task Pohybovanie magnetom v sc\u00e9ne Bc. \u0160imon V\u00e1ro\u0161 To Do 1 659 Task Dokument\u00e1cia CI image a skriptov Jakub Bla\u017eej Done 660 Task Prida\u0165 do v\u0161etk\u00fdch projektov job na code snippety Bc. Martina Han\u00e1kov\u00e1 Done 665 Task Komplexn\u00fd test na overenie spr\u00e1vneho zaradenia s\u00faborov do prie\u010dinku Bc. Eva Nedeliakov\u00e1 Done 666 Task Komplexn\u00fd test na overenie spr\u00e1vneho linkovania volan\u00ed funkcii Bc. Eva Nedeliakov\u00e1 Done 667 Product Backlog Item Komplexn\u00e9 testy pre LuaMetrics Bc. Eva Nedeliakov\u00e1 In development 5 668 Task Test na po\u010det pr\u00e1zdnych riadkov Bc. Eva Nedeliakov\u00e1 Done 669 Task Test kontroluj\u00faci spr\u00e1vne po\u010d\u00edtanie metriky po\u010dtu koment\u00e1rov Bc. Eva Nedeliakov\u00e1 Done 670 Task Test metriku riadkov k\u00f3du Bc. Eva Nedeliakov\u00e1 To Do 671 Task Test na metriku nepr\u00e1zdnych riadkov Bc. Eva Nedeliakov\u00e1 To Do 672 Task Test pre spr\u00e1vne na\u010d\u00edtanie AST - serializovanie AST do s\u00faboru Bc. Eva Nedeliakov\u00e1 To Do 673 Task Dokument\u00e1cia Bc. Martina Han\u00e1kov\u00e1 To Do 1.5 674 Task CI job pre s\u0165ahovanie Jakub Bla\u017eej Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/popis/","text":"Trvanie \u0161printu: 27.04.-10.05. 2020 Doru\u010den\u00e9 story pointy: 37/44 Posledn\u00fd \u0161print sme pokra\u010dovali v pr\u00e1ci na funkcionalite magnetov, presnej\u0161ie skr\u00fdvan\u00ed a odkr\u00fdvan\u00ed metahr\u00e1n a magnetov a tie\u017e distance magnete. Pokra\u010dovali sme aj vo vytv\u00e1ran\u00ed nov\u00fdch komplexnej\u0161\u00edch testov pre \u010fal\u0161ie moduly. Venovali sme sa aj oprave star\u0161\u00edch ch\u00fdb v k\u00f3de. Dokon\u010dovali sme skripty pre automatick\u00e9 vkladanie code snippetov do dokument\u00e1cie. Celkovo n\u00e1\u0161 posledn\u00fd \u0161print hodnot\u00edme ako \u00faspe\u0161n\u00fd. Podarili sa n\u00e1m dokon\u010di\u0165 skoro v\u0161etky \u00falohy a tie, \u010do sme aj nedokon\u010dili nemali od toho \u010faleko. Vieme medzi sebou komunikova\u0165 a priebe\u017ene pracova\u0165. Mysl\u00edme, \u017ee u\u017e sme sa do toho dostali.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Zapisova\u0165 veci do TFS na za\u010diatku \u0161printu Priebe\u017en\u00e1 pr\u00e1ca na taskoch Odbiehanie od t\u00e9my na calle Ur\u010di\u0165 si \u010dloveka na vedenie komunik\u00e1cie, ktor\u00fd bude upozor\u0148ova\u0165 na odbiehanie od t\u00e9my Komunikova\u0165, ke\u010f m\u00e1\u0161 s niek\u00fdm spolo\u010dn\u00fd task V\u0161etci sa zap\u00e1jame do pr\u00e1ce a diania","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/LS/sprint_6/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Zapisova\u0165 veci do TFS na za\u010diatku \u0161printu Priebe\u017en\u00e1 pr\u00e1ca na taskoch Odbiehanie od t\u00e9my na calle Ur\u010di\u0165 si \u010dloveka na vedenie komunik\u00e1cie, ktor\u00fd bude upozor\u0148ova\u0165 na odbiehanie od t\u00e9my Komunikova\u0165, ke\u010f m\u00e1\u0161 s niek\u00fdm spolo\u010dn\u00fd task V\u0161etci sa zap\u00e1jame do pr\u00e1ce a diania","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort 12358 Product Backlog Item Overi\u0165 a zdokumentova\u0165 s\u00fa\u010dasn\u00fd stav CI Approved 12722 Product Backlog Item Optimaliz\u00e1cia CI Approved 12727 Product Backlog Item Automatick\u00fd export dokument\u00e1cie na str\u00e1nku Approved 12731 Product Backlog Item CI pre Lua metrics Approved 12732 Product Backlog Item CI pre LuaDb Approved 12733 Product Backlog Item CI pre automatick\u00e9 testovanie Lua rocks repozit\u00e1rov Approved 12734 Product Backlog Item Testy k magnetom (v Lua \u010dasti) Approved 12352 Product Backlog Item Anal\u00fdza obmedzova\u010dov Bc. \u0160imon V\u00e1ro\u0161 Committed 13 12356 Product Backlog Item Definovanie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Committed 8 12368 Product Backlog Item Zdokumentovanie aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Committed 8 12372 Product Backlog Item Anal\u00fdza magnetov Mat\u00fa\u0161 Zele\u0148\u00e1k Committed 13 12715 Product Backlog Item Spojazdni\u0165 projekt Committed 5 12721 Product Backlog Item \u010eal\u0161ie metodiky Bc. Martina Han\u00e1kov\u00e1 Committed 3 12735 Product Backlog Item Doplnenie (oprava) existuj\u00facich metod\u00edk Committed 1 12361 Product Backlog Item Spojazdni\u0165 projekt Jakub Bla\u017eej Done 13 12363 Product Backlog Item Vytvorenie webstr\u00e1nky Bc. Eva Nedeliakov\u00e1 Done 8 12364 Task Spojazdni\u0165 pre Win Jakub Bla\u017eej Done 12369 Task Pripravenie webstr\u00e1nky Bc. Eva Nedeliakov\u00e1 Done 12370 Task Nasadenie webstr\u00e1nky Jakub Bla\u017eej Done 12371 Task Nastavenie pr\u00edstupu k serveru Jakub Bla\u017eej Done 12513 Product Backlog Item Vytvorenie CI pipeline pre webstr\u00e1nku Jakub Bla\u017eej Done 5 12514 Task Vytvorenie pipeline Jakub Bla\u017eej Done 12515 Task Otestovanie pipeline Bc. Eva Nedeliakov\u00e1 Done 12551 Task Dorobenie obsahu Bc. Eva Nedeliakov\u00e1 Done 12564 Task Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Done 12565 Task Metodika na p\u00edsanie dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 12566 Task Ako p\u00edsa\u0165 metodiku Bc. Marek Kr\u00e1tky Done 12568 Task Metodika p\u00edsania testov Bc. Andrej Erd\u00e9lsky Done 12569 Task Ako komentova\u0165 k\u00f3d Bc. Marek Kr\u00e1tky Done 12573 Task Code conventions and comments Bc. Martina Han\u00e1kov\u00e1 Done 12574 Task Metodika na verziovanie k\u00f3du Bc. Martina Han\u00e1kov\u00e1 Done 12575 Task Metodika na komunik\u00e1ciu v t\u00edme Bc. Martina Han\u00e1kov\u00e1 Done 12576 Task Ako p\u00edsa\u0165 items v Azure DevOps Bc. Marek Kr\u00e1tky Done 12577 Task Ako logova\u0165 z k\u00f3du Bc. Marek Kr\u00e1tky Done 12578 Task Navrhn\u00fa\u0165 z\u00e1kladn\u00fa \u0161trukt\u00faru dokument\u00e1cie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 12691 Task Metodika na code review Bc. Martina Han\u00e1kov\u00e1 Done 12696 Task Navrhn\u00fa\u0165 z\u00e1kladn\u00fa \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 12365 Task Spojazdni\u0165 pre Mac Bc. Ladislav Zemko In Progress 12553 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 In Progress 0.25 12554 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Bc. \u0160imon V\u00e1ro\u0161 In Progress 1.75 12556 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Bc. \u0160imon V\u00e1ro\u0161 In Progress 0.2 12562 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Mat\u00fa\u0161 Zele\u0148\u00e1k In Progress 2 12567 Task Sp\u00edsanie dokument\u00e1cie testov Bc. Andrej Erd\u00e9lsky In Progress 1 12720 Feature Automatizovan\u00e9 testy Lua analyz\u00e1tora New 12552 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Bc. \u0160imon V\u00e1ro\u0161 To Do 12555 Task Testy a odkaz na testy Bc. \u0160imon V\u00e1ro\u0161 To Do 0.5 12559 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 12560 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 12561 Task Testy a odkaz na testy Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 0.5 12563 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 0.5 12728 Task Analyzova\u0165 vhodn\u00fd n\u00e1stroj To Do 12729 Task Zmigrova\u0165 aktu\u00e1lnu dokument\u00e1ciu do nov\u00e9ho n\u00e1stroja To Do 12899 Task Nastavi\u0165 Pipeline To Do","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort 12358 Product Backlog Item Overi\u0165 a zdokumentova\u0165 s\u00fa\u010dasn\u00fd stav CI Approved 12722 Product Backlog Item Optimaliz\u00e1cia CI Approved 12727 Product Backlog Item Automatick\u00fd export dokument\u00e1cie na str\u00e1nku Approved 12731 Product Backlog Item CI pre Lua metrics Approved 12732 Product Backlog Item CI pre LuaDb Approved 12733 Product Backlog Item CI pre automatick\u00e9 testovanie Lua rocks repozit\u00e1rov Approved 12734 Product Backlog Item Testy k magnetom (v Lua \u010dasti) Approved 12352 Product Backlog Item Anal\u00fdza obmedzova\u010dov Bc. \u0160imon V\u00e1ro\u0161 Committed 13 12356 Product Backlog Item Definovanie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Committed 8 12368 Product Backlog Item Zdokumentovanie aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Committed 8 12372 Product Backlog Item Anal\u00fdza magnetov Mat\u00fa\u0161 Zele\u0148\u00e1k Committed 13 12715 Product Backlog Item Spojazdni\u0165 projekt Committed 5 12721 Product Backlog Item \u010eal\u0161ie metodiky Bc. Martina Han\u00e1kov\u00e1 Committed 3 12735 Product Backlog Item Doplnenie (oprava) existuj\u00facich metod\u00edk Committed 1 12361 Product Backlog Item Spojazdni\u0165 projekt Jakub Bla\u017eej Done 13 12363 Product Backlog Item Vytvorenie webstr\u00e1nky Bc. Eva Nedeliakov\u00e1 Done 8 12364 Task Spojazdni\u0165 pre Win Jakub Bla\u017eej Done 12369 Task Pripravenie webstr\u00e1nky Bc. Eva Nedeliakov\u00e1 Done 12370 Task Nasadenie webstr\u00e1nky Jakub Bla\u017eej Done 12371 Task Nastavenie pr\u00edstupu k serveru Jakub Bla\u017eej Done 12513 Product Backlog Item Vytvorenie CI pipeline pre webstr\u00e1nku Jakub Bla\u017eej Done 5 12514 Task Vytvorenie pipeline Jakub Bla\u017eej Done 12515 Task Otestovanie pipeline Bc. Eva Nedeliakov\u00e1 Done 12551 Task Dorobenie obsahu Bc. Eva Nedeliakov\u00e1 Done 12564 Task Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Done 12565 Task Metodika na p\u00edsanie dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 12566 Task Ako p\u00edsa\u0165 metodiku Bc. Marek Kr\u00e1tky Done 12568 Task Metodika p\u00edsania testov Bc. Andrej Erd\u00e9lsky Done 12569 Task Ako komentova\u0165 k\u00f3d Bc. Marek Kr\u00e1tky Done 12573 Task Code conventions and comments Bc. Martina Han\u00e1kov\u00e1 Done 12574 Task Metodika na verziovanie k\u00f3du Bc. Martina Han\u00e1kov\u00e1 Done 12575 Task Metodika na komunik\u00e1ciu v t\u00edme Bc. Martina Han\u00e1kov\u00e1 Done 12576 Task Ako p\u00edsa\u0165 items v Azure DevOps Bc. Marek Kr\u00e1tky Done 12577 Task Ako logova\u0165 z k\u00f3du Bc. Marek Kr\u00e1tky Done 12578 Task Navrhn\u00fa\u0165 z\u00e1kladn\u00fa \u0161trukt\u00faru dokument\u00e1cie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 12691 Task Metodika na code review Bc. Martina Han\u00e1kov\u00e1 Done 12696 Task Navrhn\u00fa\u0165 z\u00e1kladn\u00fa \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 12365 Task Spojazdni\u0165 pre Mac Bc. Ladislav Zemko In Progress 12553 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 In Progress 0.25 12554 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Bc. \u0160imon V\u00e1ro\u0161 In Progress 1.75 12556 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Bc. \u0160imon V\u00e1ro\u0161 In Progress 0.2 12562 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Mat\u00fa\u0161 Zele\u0148\u00e1k In Progress 2 12567 Task Sp\u00edsanie dokument\u00e1cie testov Bc. Andrej Erd\u00e9lsky In Progress 1 12720 Feature Automatizovan\u00e9 testy Lua analyz\u00e1tora New 12552 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Bc. \u0160imon V\u00e1ro\u0161 To Do 12555 Task Testy a odkaz na testy Bc. \u0160imon V\u00e1ro\u0161 To Do 0.5 12559 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 12560 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 12561 Task Testy a odkaz na testy Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 0.5 12563 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Mat\u00fa\u0161 Zele\u0148\u00e1k To Do 0.5 12728 Task Analyzova\u0165 vhodn\u00fd n\u00e1stroj To Do 12729 Task Zmigrova\u0165 aktu\u00e1lnu dokument\u00e1ciu do nov\u00e9ho n\u00e1stroja To Do 12899 Task Nastavi\u0165 Pipeline To Do","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/popis/","text":"Trvanie \u0161printu: 14.10.-28.10. 2019 Doru\u010den\u00e9 story pointy: 16/58 V \u0161printe sme sa venovali spoznaniu vyv\u00edjanej aplik\u00e1cie. Z\u00e1rove\u0148 sme si definovali metodiky, ktor\u00e9 bud\u00fa smerova\u0165 na\u0161u \u010fal\u0161iu spolupr\u00e1cu. Zoznamovali sme sa so scrumom ako tak\u00fdm - na za\u010diatku pl\u00e1novania sme vytvorili back log, ktor\u00fd sme n\u00e1sledne konzultovali s ved\u00facim t\u00edmu. Najv\u00e4\u010d\u0161\u00edm probl\u00e9mom prv\u00e9ho \u0161printu, bolo rozbehanie samotnej aplik\u00e1cie a to hlavne na MacOS zariaden\u00ed. Napriek tomu, sa n\u00e1m podarilo vylep\u0161i\u0165 pou\u017e\u00edvate\u013esk\u00fa pr\u00edru\u010dku in\u0161tal\u00e1cie na Windows zariadenia.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie V\u0161etky tasky musia prejs\u0165 review pred koncom \u0161printu Zad\u00e1va\u0165 si zost\u00e1vaj\u00faci \u010das na taskoch Rozbeh\u00e1vaniu projektu na macu sa venuje viac ako jeden \u010dlovek Za\u010da\u0165 pracova\u0165 na taskoch u\u017e v prvom t\u00fd\u017edni \u0161printu Dobr\u00e1 pr\u00e1ca s TFS Odbo\u010dovanie od t\u00e9my Scrum master (ale aj ostan\u00ed \u010dlenovia t\u00edmu) bude upozor\u0148ova\u0165 ostatn\u00fdch pri odbo\u010den\u00ed od t\u00e9my Lep\u0161ie si napl\u00e1nova\u0165 \u0161print - men\u0161ie tasky a menej story pointov Vych\u00e1dzame spolu, neh\u00e1dame sa Nabra\u0165 si ve\u013ea user stories/story pointov do jedn\u00e9ho \u0161printu Ur\u010di\u0165 si ko\u013eko story pointov vieme za jeden \u0161print doru\u010di\u0165 a nezobra\u0165 si na seba viac Nahodi\u0165 si hne\u010f na za\u010diatku \u0161printu tasky a ich \u010dasov\u00fd odhad do TFS U\u010denie sa gitu, pr\u00e1ca s gitlabom Me\u0161kanie Kto bude me\u0161ka\u0165 viac ako 15 min\u00fat, bude zap\u00edsan\u00fd, \u017ee nebol na stretnut\u00ed Ma\u0165 v\u017edy pop\u00edsan\u00e9 user stories a rodelen\u00e9 na jednotliv\u00e9 tasky Z\u00e1pisy zo stretnut\u00ed Robi\u0165 in\u00e9 ako t\u00edmak na t\u00edmov\u00fdch stretnutiach - kles\u00e1 mor\u00e1lka D\u00e1va\u0165 pozor kto \u010do rob\u00ed, a v pr\u00edpade robenia in\u00fdch vec\u00ed, upozorni\u0165 dan\u00fa osobu Po stretnut\u00ed si spravi\u0165 kr\u00e1tku rekapitul\u00e1ciu Lep\u0161ie riadenie komunik\u00e1cie s product ownerom - \u010dasto n\u00e1m nie je jasn\u00e9, \u010do m\u00e1me vlastne robi\u0165 Porozpr\u00e1va\u0165 sa o tomto probl\u00e9me a sk\u00fasi\u0165 ho vyrie\u0161i\u0165 Lep\u0161ie z\u00e1pisky zo stretnut\u00ed Po ka\u017edom stretnut\u00ed si e\u0161te raz prejs\u0165 z\u00e1pisy a prep\u00edsa\u0165 ich do zrozumite\u013enej\u0161ej podoby Zap\u00edsa\u0165 do z\u00e1piskov zo stretnut\u00ed, kedy sa stret\u00e1vame \u010fal\u0161\u00ed t\u00fd\u017ede\u0148 bez ved\u00faceho","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_1/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie V\u0161etky tasky musia prejs\u0165 review pred koncom \u0161printu Zad\u00e1va\u0165 si zost\u00e1vaj\u00faci \u010das na taskoch Rozbeh\u00e1vaniu projektu na macu sa venuje viac ako jeden \u010dlovek Za\u010da\u0165 pracova\u0165 na taskoch u\u017e v prvom t\u00fd\u017edni \u0161printu Dobr\u00e1 pr\u00e1ca s TFS Odbo\u010dovanie od t\u00e9my Scrum master (ale aj ostan\u00ed \u010dlenovia t\u00edmu) bude upozor\u0148ova\u0165 ostatn\u00fdch pri odbo\u010den\u00ed od t\u00e9my Lep\u0161ie si napl\u00e1nova\u0165 \u0161print - men\u0161ie tasky a menej story pointov Vych\u00e1dzame spolu, neh\u00e1dame sa Nabra\u0165 si ve\u013ea user stories/story pointov do jedn\u00e9ho \u0161printu Ur\u010di\u0165 si ko\u013eko story pointov vieme za jeden \u0161print doru\u010di\u0165 a nezobra\u0165 si na seba viac Nahodi\u0165 si hne\u010f na za\u010diatku \u0161printu tasky a ich \u010dasov\u00fd odhad do TFS U\u010denie sa gitu, pr\u00e1ca s gitlabom Me\u0161kanie Kto bude me\u0161ka\u0165 viac ako 15 min\u00fat, bude zap\u00edsan\u00fd, \u017ee nebol na stretnut\u00ed Ma\u0165 v\u017edy pop\u00edsan\u00e9 user stories a rodelen\u00e9 na jednotliv\u00e9 tasky Z\u00e1pisy zo stretnut\u00ed Robi\u0165 in\u00e9 ako t\u00edmak na t\u00edmov\u00fdch stretnutiach - kles\u00e1 mor\u00e1lka D\u00e1va\u0165 pozor kto \u010do rob\u00ed, a v pr\u00edpade robenia in\u00fdch vec\u00ed, upozorni\u0165 dan\u00fa osobu Po stretnut\u00ed si spravi\u0165 kr\u00e1tku rekapitul\u00e1ciu Lep\u0161ie riadenie komunik\u00e1cie s product ownerom - \u010dasto n\u00e1m nie je jasn\u00e9, \u010do m\u00e1me vlastne robi\u0165 Porozpr\u00e1va\u0165 sa o tomto probl\u00e9me a sk\u00fasi\u0165 ho vyrie\u0161i\u0165 Lep\u0161ie z\u00e1pisky zo stretnut\u00ed Po ka\u017edom stretnut\u00ed si e\u0161te raz prejs\u0165 z\u00e1pisy a prep\u00edsa\u0165 ich do zrozumite\u013enej\u0161ej podoby Zap\u00edsa\u0165 do z\u00e1piskov zo stretnut\u00ed, kedy sa stret\u00e1vame \u010fal\u0161\u00ed t\u00fd\u017ede\u0148 bez ved\u00faceho","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort 126 Bug Metodiky obsahuj\u00fa podpis commitov Bc. Martina Han\u00e1kov\u00e1 New 0.5 128 Bug \u010c\u00edslovanie nadpisov v dokument\u00e1cii nesed\u00ed s obsahom Bc. Martina Han\u00e1kov\u00e1 New 0.5 45 Feature Automatizovan\u00e9 testy Lua analyz\u00e1tora New 2 Product Backlog Item Administrat\u00edvne \u00falohy Bc. Martina Han\u00e1kov\u00e1 In development 5 3 Product Backlog Item Migr\u00e1cia DevOps do DevOps Bc. \u0160imon V\u00e1ro\u0161 Done 8 16 Product Backlog Item \u010eal\u0161ie metodiky Bc. Martina Han\u00e1kov\u00e1 Done 3 17 Product Backlog Item Doplnenie (oprava) existuj\u00facich metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 1 18 Product Backlog Item Definovanie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 2 32 Product Backlog Item Overi\u0165 a zdokumentova\u0165 s\u00fa\u010dasn\u00fd stav CI (3DSoftViz) Bc. Marek Kr\u00e1tky Done 13 40 Product Backlog Item Automatick\u00fd export dokument\u00e1cie na str\u00e1nku Bc. Eva Nedeliakov\u00e1 Review 8 41 Product Backlog Item Vytvori\u0165 CI pre LuaDb Jakub Bla\u017eej Done 5 42 Product Backlog Item Spojazdni\u0165 projekt Bc. Ladislav Zemko Done 13 48 Product Backlog Item Zdokumentovanie aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Done 8 50 Product Backlog Item Anal\u00fdza magnetov Bc. \u0160imon V\u00e1ro\u0161 Done 13 51 Product Backlog Item Anal\u00fdza obmedzova\u010dov Mat\u00fa\u0161 Zele\u0148\u00e1k Done 13 121 Product Backlog Item Vytvori\u0165 kr\u00edzov\u00fd protokol New 122 Product Backlog Item Doplnenie metodiky prehliadok k\u00f3du Planned 1 1 Task Sp\u00edsa\u0165 retrospekt\u00edvu 1 Bc. Martina Han\u00e1kov\u00e1 Done 4 Task Simul\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 7 Task Anal\u00fdza Bc. \u0160imon V\u00e1ro\u0161 Done 8 Task Migr\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 9 Task Sp\u00edsa\u0165 retrospekt\u00edvu 2 Bc. Martina Han\u00e1kov\u00e1 To Do 0.5 10 Task Sp\u00edsa\u0165 sprint review Bc. Eva Nedeliakov\u00e1 To Do 11 Task Spravi\u0165 export \u00faloh Bc. Eva Nedeliakov\u00e1 To Do 12 Task Aktualizova\u0165 str\u00e1nku Bc. Eva Nedeliakov\u00e1 To Do 13 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (7. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 14 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (6. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 15 Task Spravi\u0165 merge Bc. Martina Han\u00e1kov\u00e1 Done 19 Task Metodika na workflow v Azure DevOps Bc. Martina Han\u00e1kov\u00e1 Done 20 Task Metodika iter\u00e1cii Bc. Martina Han\u00e1kov\u00e1 Done 21 Task Upravi\u0165 metodiku na pr\u00e1cu s vetvami v gite Bc. Martina Han\u00e1kov\u00e1 Done 22 Task Doplni\u0165/upravi\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Done 23 Task Urobi\u0165 review dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 24 Task kvalita k\u00f3du Bc. Marek Kr\u00e1tky Done 25 Task statick\u00e1 anal\u00fdza Bc. Marek Kr\u00e1tky Done 26 Task Artefakty - testy Bc. Marek Kr\u00e1tky Done 27 Task Artefakty - dokument\u00e1cia Bc. Marek Kr\u00e1tky Done 28 Task Overenie CI Bc. Marek Kr\u00e1tky Done 29 Task zdokumentovanie s\u00fa\u010dasn\u00e9ho CI Bc. Marek Kr\u00e1tky Done 30 Task Na\u0161tudovanie s\u00fa\u010dasn\u00e9ho CI Bc. Marek Kr\u00e1tky Done 31 Task Obozn\u00e1menie sa s dom\u00e9nou Bc. Marek Kr\u00e1tky Done 33 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Mat\u00fa\u0161 Zele\u0148\u00e1k Done 34 Task Testy a odkaz na testy Mat\u00fa\u0161 Zele\u0148\u00e1k Done 35 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Mat\u00fa\u0161 Zele\u0148\u00e1k Done 36 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Mat\u00fa\u0161 Zele\u0148\u00e1k Done 37 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k Done 44 Task Nastavi\u0165 Pipeline Jakub Bla\u017eej Done 46 Task Analyzova\u0165 vhodn\u00fd n\u00e1stroj Bc. Eva Nedeliakov\u00e1 Done 47 Task Zmigrova\u0165 aktu\u00e1lnu dokument\u00e1ciu do nov\u00e9ho n\u00e1stroja Bc. Eva Nedeliakov\u00e1 Done 52 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Bc. \u0160imon V\u00e1ro\u0161 Done 58 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 59 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Bc. \u0160imon V\u00e1ro\u0161 Done 71 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Bc. \u0160imon V\u00e1ro\u0161 Done 74 Task Testy a odkaz na testy Bc. \u0160imon V\u00e1ro\u0161 Done 103 Task Doplnit extensions Bc. \u0160imon V\u00e1ro\u0161 Done 104 Task \"\u010eal\u0161ie opravy, ktor\u00e9 sa vynorili \"\"po ceste\"\"\" Bc. Martina Han\u00e1kov\u00e1 Done 105 Task Doplni\u0165 do DOD pre dokument\u00e1ciu, \u017ee m\u00e1 by\u0165 vygenerovan\u00e1 na str\u00e1nke Bc. Eva Nedeliakov\u00e1 Done 106 Task Na\u0161tudovanie dom\u00e9ny testovania Bc. Andrej Erd\u00e9lsky Done 107 Task Dokument\u00e1cia aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Done 108 Task Spustenie testov Bc. Andrej Erd\u00e9lsky Done 109 Task anal\u00fdza testov Jakub Bla\u017eej Done 110 Task spustenie testov Jakub Bla\u017eej Done 111 Task vytvorenie CI na testy Jakub Bla\u017eej Done 112 Task Integrova\u0165 Luapower Bc. Ladislav Zemko Done 113 Task Upravi\u0165 modul LuaInterface Bc. Ladislav Zemko Done 114 Task Upravi\u0165 modul LuaGraph Bc. Ladislav Zemko Done 116 Task Anal\u00fdza CMake Bc. Ladislav Zemko Done 118 Task Ako logova\u0165 z k\u00f3du, ver.2 Bc. Marek Kr\u00e1tky Done 119 Task Review Jakub Bla\u017eej Done 123 Task Modifik\u00e1cia CMake pre 3dsoftvis_remake Bc. Ladislav Zemko Done 124 Task zdokumentovanie Jakub Bla\u017eej Done 125 Task Dokument\u00e1cia Luapower Bc. Ladislav Zemko Done 127 Task Upravi\u0165 in\u0161tala\u010dn\u00fa pr\u00edru\u010dku Bc. Ladislav Zemko Done 129 Task Vytvori\u0165 dokument\u00e1ciu k vytvoren\u00fdm kofigur\u00e1ciam Bc. Eva Nedeliakov\u00e1 Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort 126 Bug Metodiky obsahuj\u00fa podpis commitov Bc. Martina Han\u00e1kov\u00e1 New 0.5 128 Bug \u010c\u00edslovanie nadpisov v dokument\u00e1cii nesed\u00ed s obsahom Bc. Martina Han\u00e1kov\u00e1 New 0.5 45 Feature Automatizovan\u00e9 testy Lua analyz\u00e1tora New 2 Product Backlog Item Administrat\u00edvne \u00falohy Bc. Martina Han\u00e1kov\u00e1 In development 5 3 Product Backlog Item Migr\u00e1cia DevOps do DevOps Bc. \u0160imon V\u00e1ro\u0161 Done 8 16 Product Backlog Item \u010eal\u0161ie metodiky Bc. Martina Han\u00e1kov\u00e1 Done 3 17 Product Backlog Item Doplnenie (oprava) existuj\u00facich metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 1 18 Product Backlog Item Definovanie metod\u00edk Bc. Martina Han\u00e1kov\u00e1 Done 2 32 Product Backlog Item Overi\u0165 a zdokumentova\u0165 s\u00fa\u010dasn\u00fd stav CI (3DSoftViz) Bc. Marek Kr\u00e1tky Done 13 40 Product Backlog Item Automatick\u00fd export dokument\u00e1cie na str\u00e1nku Bc. Eva Nedeliakov\u00e1 Review 8 41 Product Backlog Item Vytvori\u0165 CI pre LuaDb Jakub Bla\u017eej Done 5 42 Product Backlog Item Spojazdni\u0165 projekt Bc. Ladislav Zemko Done 13 48 Product Backlog Item Zdokumentovanie aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Done 8 50 Product Backlog Item Anal\u00fdza magnetov Bc. \u0160imon V\u00e1ro\u0161 Done 13 51 Product Backlog Item Anal\u00fdza obmedzova\u010dov Mat\u00fa\u0161 Zele\u0148\u00e1k Done 13 121 Product Backlog Item Vytvori\u0165 kr\u00edzov\u00fd protokol New 122 Product Backlog Item Doplnenie metodiky prehliadok k\u00f3du Planned 1 1 Task Sp\u00edsa\u0165 retrospekt\u00edvu 1 Bc. Martina Han\u00e1kov\u00e1 Done 4 Task Simul\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 7 Task Anal\u00fdza Bc. \u0160imon V\u00e1ro\u0161 Done 8 Task Migr\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 9 Task Sp\u00edsa\u0165 retrospekt\u00edvu 2 Bc. Martina Han\u00e1kov\u00e1 To Do 0.5 10 Task Sp\u00edsa\u0165 sprint review Bc. Eva Nedeliakov\u00e1 To Do 11 Task Spravi\u0165 export \u00faloh Bc. Eva Nedeliakov\u00e1 To Do 12 Task Aktualizova\u0165 str\u00e1nku Bc. Eva Nedeliakov\u00e1 To Do 13 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (7. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 14 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (6. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 15 Task Spravi\u0165 merge Bc. Martina Han\u00e1kov\u00e1 Done 19 Task Metodika na workflow v Azure DevOps Bc. Martina Han\u00e1kov\u00e1 Done 20 Task Metodika iter\u00e1cii Bc. Martina Han\u00e1kov\u00e1 Done 21 Task Upravi\u0165 metodiku na pr\u00e1cu s vetvami v gite Bc. Martina Han\u00e1kov\u00e1 Done 22 Task Doplni\u0165/upravi\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Done 23 Task Urobi\u0165 review dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 24 Task kvalita k\u00f3du Bc. Marek Kr\u00e1tky Done 25 Task statick\u00e1 anal\u00fdza Bc. Marek Kr\u00e1tky Done 26 Task Artefakty - testy Bc. Marek Kr\u00e1tky Done 27 Task Artefakty - dokument\u00e1cia Bc. Marek Kr\u00e1tky Done 28 Task Overenie CI Bc. Marek Kr\u00e1tky Done 29 Task zdokumentovanie s\u00fa\u010dasn\u00e9ho CI Bc. Marek Kr\u00e1tky Done 30 Task Na\u0161tudovanie s\u00fa\u010dasn\u00e9ho CI Bc. Marek Kr\u00e1tky Done 31 Task Obozn\u00e1menie sa s dom\u00e9nou Bc. Marek Kr\u00e1tky Done 33 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Mat\u00fa\u0161 Zele\u0148\u00e1k Done 34 Task Testy a odkaz na testy Mat\u00fa\u0161 Zele\u0148\u00e1k Done 35 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Mat\u00fa\u0161 Zele\u0148\u00e1k Done 36 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Mat\u00fa\u0161 Zele\u0148\u00e1k Done 37 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Mat\u00fa\u0161 Zele\u0148\u00e1k Done 44 Task Nastavi\u0165 Pipeline Jakub Bla\u017eej Done 46 Task Analyzova\u0165 vhodn\u00fd n\u00e1stroj Bc. Eva Nedeliakov\u00e1 Done 47 Task Zmigrova\u0165 aktu\u00e1lnu dokument\u00e1ciu do nov\u00e9ho n\u00e1stroja Bc. Eva Nedeliakov\u00e1 Done 52 Task V\u0161eobecn\u00fd opis (motiv\u00e1cia) Bc. \u0160imon V\u00e1ro\u0161 Done 58 Task Bli\u017e\u0161ia \u0161pecifik\u00e1cia Bc. \u0160imon V\u00e1ro\u0161 Done 59 Task Pou\u017e\u00edvate\u013esk\u00e1 pr\u00edru\u010dka Bc. \u0160imon V\u00e1ro\u0161 Done 71 Task Diagramy, technick\u00e1 dokument\u00e1cia, odkazy na k\u00f3d Bc. \u0160imon V\u00e1ro\u0161 Done 74 Task Testy a odkaz na testy Bc. \u0160imon V\u00e1ro\u0161 Done 103 Task Doplnit extensions Bc. \u0160imon V\u00e1ro\u0161 Done 104 Task \"\u010eal\u0161ie opravy, ktor\u00e9 sa vynorili \"\"po ceste\"\"\" Bc. Martina Han\u00e1kov\u00e1 Done 105 Task Doplni\u0165 do DOD pre dokument\u00e1ciu, \u017ee m\u00e1 by\u0165 vygenerovan\u00e1 na str\u00e1nke Bc. Eva Nedeliakov\u00e1 Done 106 Task Na\u0161tudovanie dom\u00e9ny testovania Bc. Andrej Erd\u00e9lsky Done 107 Task Dokument\u00e1cia aktu\u00e1lneho stavu testov Bc. Andrej Erd\u00e9lsky Done 108 Task Spustenie testov Bc. Andrej Erd\u00e9lsky Done 109 Task anal\u00fdza testov Jakub Bla\u017eej Done 110 Task spustenie testov Jakub Bla\u017eej Done 111 Task vytvorenie CI na testy Jakub Bla\u017eej Done 112 Task Integrova\u0165 Luapower Bc. Ladislav Zemko Done 113 Task Upravi\u0165 modul LuaInterface Bc. Ladislav Zemko Done 114 Task Upravi\u0165 modul LuaGraph Bc. Ladislav Zemko Done 116 Task Anal\u00fdza CMake Bc. Ladislav Zemko Done 118 Task Ako logova\u0165 z k\u00f3du, ver.2 Bc. Marek Kr\u00e1tky Done 119 Task Review Jakub Bla\u017eej Done 123 Task Modifik\u00e1cia CMake pre 3dsoftvis_remake Bc. Ladislav Zemko Done 124 Task zdokumentovanie Jakub Bla\u017eej Done 125 Task Dokument\u00e1cia Luapower Bc. Ladislav Zemko Done 127 Task Upravi\u0165 in\u0161tala\u010dn\u00fa pr\u00edru\u010dku Bc. Ladislav Zemko Done 129 Task Vytvori\u0165 dokument\u00e1ciu k vytvoren\u00fdm kofigur\u00e1ciam Bc. Eva Nedeliakov\u00e1 Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/popis/","text":"Trvanie \u0161printu: 28.10.-11.11. 2019 Doru\u010den\u00e9 story pointy: 89/97 V tomto \u0161printe i\u0161lo hlavne o anal\u00fdzu r\u00f4znych \u010dast\u00ed implement\u00e1cie ako magnety, testy \u010di obmedzova\u010de. Druhou \u010das\u0165ou boli \u00falohy zameran\u00e9 na CI a na dokument\u00e1ciu. Pokra\u010dovali sme tie\u017e v rozbeh\u00e1van\u00ed projektu na MacOS zariaden\u00ed. Tie\u017e sme pokra\u010dovali v \u00faprav\u00e1ch a p\u00edsan\u00ed metod\u00edk.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Trackovanie si odroben\u00e9ho \u010dasu na taskoch (napr. Toggle) Akt\u00edvne pou\u017e\u00edvanie sekcie Agenda v z\u00e1pisoch zo stretnut\u00ed Zbyto\u010dn\u00e9 discussion thready k merge requestom Priebe\u017en\u00e1 pr\u00e1ca na taskoch Zodpovedne a pravidelne si pres\u00fava\u0165 tasky a US v DevOpse Dobr\u00e1 komunik\u00e1cia v t\u00edme, spr\u00e1vne pou\u017e\u00edvanie kan\u00e1lov v Teamsoch Commitova\u0165 v nede\u013eu ve\u010der pred koncom \u0161printu - je potom m\u00e1lo \u010dasu na review a pr\u00edpadn\u00e9 fixy \u010castej\u0161ie komunikova\u0165 o rozpracovanej pr\u00e1ci Dodr\u017eiava\u0165 form\u00e1t commit spr\u00e1v Preassignov\u00e1va\u0165 US pri review na reviewera","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_2/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Trackovanie si odroben\u00e9ho \u010dasu na taskoch (napr. Toggle) Akt\u00edvne pou\u017e\u00edvanie sekcie Agenda v z\u00e1pisoch zo stretnut\u00ed Zbyto\u010dn\u00e9 discussion thready k merge requestom Priebe\u017en\u00e1 pr\u00e1ca na taskoch Zodpovedne a pravidelne si pres\u00fava\u0165 tasky a US v DevOpse Dobr\u00e1 komunik\u00e1cia v t\u00edme, spr\u00e1vne pou\u017e\u00edvanie kan\u00e1lov v Teamsoch Commitova\u0165 v nede\u013eu ve\u010der pred koncom \u0161printu - je potom m\u00e1lo \u010dasu na review a pr\u00edpadn\u00e9 fixy \u010castej\u0161ie komunikova\u0165 o rozpracovanej pr\u00e1ci Dodr\u017eiava\u0165 form\u00e1t commit spr\u00e1v Preassignov\u00e1va\u0165 US pri review na reviewera","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort 126 Bug Metodiky obsahuj\u00fa podpis commitov Jakub Bla\u017eej Done 0.5 128 Bug \u010c\u00edslovanie nadpisov v dokument\u00e1cii nesed\u00ed s obsahom Jakub Bla\u017eej Done 0.5 130 Bug \"Zmaza\u0165 metodiku \"\"Ako p\u00edsa\u0165 metodiku\"\"\" Jakub Bla\u017eej Done 0.5 92 Epic Magnety In Progress 305 Epic Testy New 314 Epic Webstr\u00e1nka New 306 Feature Regresn\u00e9 testy New 319 Feature Magnet s funkcionalitou New 6 Product Backlog Item Skript pre automatick\u00e9 testovanie Lua rocks repozit\u00e1rov Bc. Eva Nedeliakov\u00e1 Done 8 38 Product Backlog Item Optimaliz\u00e1cia LuaInterface CI Jakub Bla\u017eej Done 8 120 Product Backlog Item Analyzova\u0165 a zdokumentova\u0165 pou\u017eie logovac\u00edch modulov Bc. Marek Kr\u00e1tky In development 131 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko Done 13 142 Product Backlog Item Vytvori\u0165 UI pre magnety Bc. \u0160imon V\u00e1ro\u0161 Done 5 143 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (frontend) Mat\u00fa\u0161 Zele\u0148\u00e1k Done 8 148 Product Backlog Item Doplnenie metodiky p\u00edsania testov Bc. Andrej Erd\u00e9lsky Done 5 176 Product Backlog Item Zapracova\u0165 pripomienky k metodik\u00e1m Bc. Martina Han\u00e1kov\u00e1 In development 3 196 Product Backlog Item Administrat\u00edvne \u00falohy Bc. Martina Han\u00e1kov\u00e1 In development 2 198 Product Backlog Item Dokument\u00e1cia k riadeniu - m\u00ed\u013enik 1 Bc. Martina Han\u00e1kov\u00e1 Done 8 134 Task Modifikova\u0165 modul Luapower Bc. Ladislav Zemko Done 135 Task Modifikova\u0165 CMakeLists.txt v 3dsoftvis projekte Bc. Ladislav Zemko Done 136 Task Kontrola funk\u010dnosti modulu Luainterface Bc. Ladislav Zemko Done 137 Task Kontrola funk\u010dnosti modulu Luagraph Bc. Ladislav Zemko Done 150 Task Zdokumentovanie p\u00edsanie testov v jazyku v C++ Bc. Andrej Erd\u00e9lsky Done 151 Task Zdokumentovanie p\u00edsanie testov v jazyku C# Bc. Andrej Erd\u00e9lsky Done 152 Task Zdokumentovanie p\u00edsanie testov v jazyku Lua Bc. Andrej Erd\u00e9lsky Done 153 Task Zdokumentovanie p\u00edsanie testov v jazyku Terra Bc. Andrej Erd\u00e9lsky Done 154 Task Spustenie testov Bc. Andrej Erd\u00e9lsky Done 155 Task Zjednotenie metodiky p\u00edsania testov na gitlabe Bc. Andrej Erd\u00e9lsky Done 156 Task Nain\u0161talova\u0165 bal\u00edky Bc. Eva Nedeliakov\u00e1 Done 157 Task Vytvori\u0165 skript Bc. Eva Nedeliakov\u00e1 Done 160 Task Vytvorenie nov\u00e9ho canvasu s pr\u00edslu\u0161n\u00fdmi tla\u010didlami Bc. \u0160imon V\u00e1ro\u0161 Done 161 Task Nastavi\u0165 prep\u00ednanie canvasov na tla\u010didlo Bc. \u0160imon V\u00e1ro\u0161 Done 162 Task Responz\u00edvny canvas Bc. \u0160imon V\u00e1ro\u0161 Done 163 Task Pripoji\u0165 skript s pr\u00e1zdnymi funkciami Bc. \u0160imon V\u00e1ro\u0161 Done 164 Task Vytvori\u0165 prefab pre magnet Mat\u00fa\u0161 Zele\u0148\u00e1k Done 165 Task Nastavenie polohy a pridanie magnetu do sc\u00e9ny Mat\u00fa\u0161 Zele\u0148\u00e1k Done 166 Task Presun\u00fa\u0165 in\u0161tal\u00e1cie bal\u00edkov do dockerfile Jakub Bla\u017eej Done 167 Task Anal\u00fdza logovania pre Lua Bc. Marek Kr\u00e1tky Done 170 Task Anal\u00fdza logovania pre C++ Bc. Marek Kr\u00e1tky In Progress 171 Task Anal\u00fdza logovania pre C# Bc. Marek Kr\u00e1tky In Progress 172 Task Sp\u00edsanie dokument\u00e1cie pre v\u0161etky analyzovan\u00e9 oblasti Bc. Marek Kr\u00e1tky In Progress 173 Task Opravi\u0165 \u010d\u00edslovanie nadpisov Bc. Martina Han\u00e1kov\u00e1 Done 174 Task Zmaza\u0165 bod podpisovanie commitov Bc. Martina Han\u00e1kov\u00e1 Done 175 Task Zmaza\u0165 metodiku ako p\u00edsa\u0165 metodiku Bc. Martina Han\u00e1kov\u00e1 Done 184 Task Doplni\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 In Progress 185 Task Upravi\u0165 metodiku na popisovanie polo\u017eiek v Azure DevOps Bc. Marek Kr\u00e1tky In Progress 186 Task Doplnenie konvenci\u00ed Jakub Bla\u017eej To Do 187 Task Upravi\u0165 a doplni\u0165 metodiku na pr\u00e1cu s gitom Bc. Martina Han\u00e1kov\u00e1 Done 189 Task Doplni\u0165 metodiku na robenie code review Bc. Martina Han\u00e1kov\u00e1 Done 193 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (8. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 194 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (9. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 195 Task Sp\u00edsa\u0165 retrospekt\u00edvu 3 Bc. Martina Han\u00e1kov\u00e1 Done 197 Task Sprint review 3 Bc. Eva Nedeliakov\u00e1 In Progress 199 Task Pre\u010d\u00edta\u0165 si pokyny Bc. Martina Han\u00e1kov\u00e1 Done 200 Task Big picture k dokumentu in\u017einierske dielo Bc. Martina Han\u00e1kov\u00e1 Done 201 Task Big picture k dokumentu riadenie projektu Bc. Martina Han\u00e1kov\u00e1 Done 202 Task Spojenie \u010dast\u00ed dokumentu Bc. Martina Han\u00e1kov\u00e1 Done 203 Task Modifikova\u0165 CMakeLists.txt v module LuaInterface Bc. Ladislav Zemko Done 324 Task Modifikova\u0165 CMakeLists.txt v LuaGraph module Bc. Ladislav Zemko Done 349 Task Review Jakub Bla\u017eej Done 375 Task Panel pre upozornenia Bc. \u0160imon V\u00e1ro\u0161 Done 376 Task Prepoji\u0165 s UI Mat\u00fa\u0161 Zele\u0148\u00e1k Done 180 Test Case Doplni\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Design 181 Test Plan Timovy projekt 2019_Stories_Sprint 3 Bc. Martina Han\u00e1kov\u00e1 Active 182 Test Suite Timovy projekt 2019_Stories_Sprint 3 Bc. Martina Han\u00e1kov\u00e1 In Progress 183 Test Suite 176 : Zapracova\u0165 pripomienky k metodik\u00e1m Bc. Martina Han\u00e1kov\u00e1 In Progress","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort 126 Bug Metodiky obsahuj\u00fa podpis commitov Jakub Bla\u017eej Done 0.5 128 Bug \u010c\u00edslovanie nadpisov v dokument\u00e1cii nesed\u00ed s obsahom Jakub Bla\u017eej Done 0.5 130 Bug \"Zmaza\u0165 metodiku \"\"Ako p\u00edsa\u0165 metodiku\"\"\" Jakub Bla\u017eej Done 0.5 92 Epic Magnety In Progress 305 Epic Testy New 314 Epic Webstr\u00e1nka New 306 Feature Regresn\u00e9 testy New 319 Feature Magnet s funkcionalitou New 6 Product Backlog Item Skript pre automatick\u00e9 testovanie Lua rocks repozit\u00e1rov Bc. Eva Nedeliakov\u00e1 Done 8 38 Product Backlog Item Optimaliz\u00e1cia LuaInterface CI Jakub Bla\u017eej Done 8 120 Product Backlog Item Analyzova\u0165 a zdokumentova\u0165 pou\u017eie logovac\u00edch modulov Bc. Marek Kr\u00e1tky In development 131 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko Done 13 142 Product Backlog Item Vytvori\u0165 UI pre magnety Bc. \u0160imon V\u00e1ro\u0161 Done 5 143 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (frontend) Mat\u00fa\u0161 Zele\u0148\u00e1k Done 8 148 Product Backlog Item Doplnenie metodiky p\u00edsania testov Bc. Andrej Erd\u00e9lsky Done 5 176 Product Backlog Item Zapracova\u0165 pripomienky k metodik\u00e1m Bc. Martina Han\u00e1kov\u00e1 In development 3 196 Product Backlog Item Administrat\u00edvne \u00falohy Bc. Martina Han\u00e1kov\u00e1 In development 2 198 Product Backlog Item Dokument\u00e1cia k riadeniu - m\u00ed\u013enik 1 Bc. Martina Han\u00e1kov\u00e1 Done 8 134 Task Modifikova\u0165 modul Luapower Bc. Ladislav Zemko Done 135 Task Modifikova\u0165 CMakeLists.txt v 3dsoftvis projekte Bc. Ladislav Zemko Done 136 Task Kontrola funk\u010dnosti modulu Luainterface Bc. Ladislav Zemko Done 137 Task Kontrola funk\u010dnosti modulu Luagraph Bc. Ladislav Zemko Done 150 Task Zdokumentovanie p\u00edsanie testov v jazyku v C++ Bc. Andrej Erd\u00e9lsky Done 151 Task Zdokumentovanie p\u00edsanie testov v jazyku C# Bc. Andrej Erd\u00e9lsky Done 152 Task Zdokumentovanie p\u00edsanie testov v jazyku Lua Bc. Andrej Erd\u00e9lsky Done 153 Task Zdokumentovanie p\u00edsanie testov v jazyku Terra Bc. Andrej Erd\u00e9lsky Done 154 Task Spustenie testov Bc. Andrej Erd\u00e9lsky Done 155 Task Zjednotenie metodiky p\u00edsania testov na gitlabe Bc. Andrej Erd\u00e9lsky Done 156 Task Nain\u0161talova\u0165 bal\u00edky Bc. Eva Nedeliakov\u00e1 Done 157 Task Vytvori\u0165 skript Bc. Eva Nedeliakov\u00e1 Done 160 Task Vytvorenie nov\u00e9ho canvasu s pr\u00edslu\u0161n\u00fdmi tla\u010didlami Bc. \u0160imon V\u00e1ro\u0161 Done 161 Task Nastavi\u0165 prep\u00ednanie canvasov na tla\u010didlo Bc. \u0160imon V\u00e1ro\u0161 Done 162 Task Responz\u00edvny canvas Bc. \u0160imon V\u00e1ro\u0161 Done 163 Task Pripoji\u0165 skript s pr\u00e1zdnymi funkciami Bc. \u0160imon V\u00e1ro\u0161 Done 164 Task Vytvori\u0165 prefab pre magnet Mat\u00fa\u0161 Zele\u0148\u00e1k Done 165 Task Nastavenie polohy a pridanie magnetu do sc\u00e9ny Mat\u00fa\u0161 Zele\u0148\u00e1k Done 166 Task Presun\u00fa\u0165 in\u0161tal\u00e1cie bal\u00edkov do dockerfile Jakub Bla\u017eej Done 167 Task Anal\u00fdza logovania pre Lua Bc. Marek Kr\u00e1tky Done 170 Task Anal\u00fdza logovania pre C++ Bc. Marek Kr\u00e1tky In Progress 171 Task Anal\u00fdza logovania pre C# Bc. Marek Kr\u00e1tky In Progress 172 Task Sp\u00edsanie dokument\u00e1cie pre v\u0161etky analyzovan\u00e9 oblasti Bc. Marek Kr\u00e1tky In Progress 173 Task Opravi\u0165 \u010d\u00edslovanie nadpisov Bc. Martina Han\u00e1kov\u00e1 Done 174 Task Zmaza\u0165 bod podpisovanie commitov Bc. Martina Han\u00e1kov\u00e1 Done 175 Task Zmaza\u0165 metodiku ako p\u00edsa\u0165 metodiku Bc. Martina Han\u00e1kov\u00e1 Done 184 Task Doplni\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 In Progress 185 Task Upravi\u0165 metodiku na popisovanie polo\u017eiek v Azure DevOps Bc. Marek Kr\u00e1tky In Progress 186 Task Doplnenie konvenci\u00ed Jakub Bla\u017eej To Do 187 Task Upravi\u0165 a doplni\u0165 metodiku na pr\u00e1cu s gitom Bc. Martina Han\u00e1kov\u00e1 Done 189 Task Doplni\u0165 metodiku na robenie code review Bc. Martina Han\u00e1kov\u00e1 Done 193 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (8. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 194 Task Upravi\u0165 z\u00e1pisky zo stretnut\u00ed (9. t\u00fd\u017ede\u0148) Bc. Martina Han\u00e1kov\u00e1 Done 195 Task Sp\u00edsa\u0165 retrospekt\u00edvu 3 Bc. Martina Han\u00e1kov\u00e1 Done 197 Task Sprint review 3 Bc. Eva Nedeliakov\u00e1 In Progress 199 Task Pre\u010d\u00edta\u0165 si pokyny Bc. Martina Han\u00e1kov\u00e1 Done 200 Task Big picture k dokumentu in\u017einierske dielo Bc. Martina Han\u00e1kov\u00e1 Done 201 Task Big picture k dokumentu riadenie projektu Bc. Martina Han\u00e1kov\u00e1 Done 202 Task Spojenie \u010dast\u00ed dokumentu Bc. Martina Han\u00e1kov\u00e1 Done 203 Task Modifikova\u0165 CMakeLists.txt v module LuaInterface Bc. Ladislav Zemko Done 324 Task Modifikova\u0165 CMakeLists.txt v LuaGraph module Bc. Ladislav Zemko Done 349 Task Review Jakub Bla\u017eej Done 375 Task Panel pre upozornenia Bc. \u0160imon V\u00e1ro\u0161 Done 376 Task Prepoji\u0165 s UI Mat\u00fa\u0161 Zele\u0148\u00e1k Done 180 Test Case Doplni\u0165 Definitions of Done Bc. Martina Han\u00e1kov\u00e1 Design 181 Test Plan Timovy projekt 2019_Stories_Sprint 3 Bc. Martina Han\u00e1kov\u00e1 Active 182 Test Suite Timovy projekt 2019_Stories_Sprint 3 Bc. Martina Han\u00e1kov\u00e1 In Progress 183 Test Suite 176 : Zapracova\u0165 pripomienky k metodik\u00e1m Bc. Martina Han\u00e1kov\u00e1 In Progress","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/popis/","text":"Trvanie \u0161printu: 11.11.-25.11. 2019 Doru\u010den\u00e9 story pointy: 53.5/63.5 Do tohto \u0161printu boli zaraden\u00e9 prv\u00e9 implementa\u010dn\u00e9 pr\u00edbehy. Bolo implementovan\u00e9 pridanie magnetu do sc\u00e9ny z front-end strany a takisto bolo vytvoren\u00e9 UI pre magnety. Okrem toho sme sa venovali CI, dop\u013a\u0148an\u00edm metod\u00edk a v neposlednom rade sme pokra\u010dovali v rozbeh\u00e1van\u00ed aplik\u00e1cie na macOS.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Verejne nap\u00edsa\u0165 do teams ke\u010f niekto nem\u00f4\u017ee pr\u00eds\u0165 Backlog grooming Neskor\u00e9 pr\u00edchody (po 10 min) Za ka\u017ed\u00fdch na\u010dat\u00fdch 15 min\u00fat me\u0161kania sa zn\u00ed\u017ei podiel pr\u00e1ce v \u0161printe o 1% Ka\u017ed\u00fd si p\u00edsa\u0165 pozn\u00e1mky zo stretnut\u00ed (ke\u010f m\u00e1 pocit, \u017ee si potrebuje nie\u010do zap\u00edsa\u0165) WBS a podrobn\u00e9 pl\u00e1novanie Robi\u0165 v\u00e4\u010d\u0161inu taskov v druhej \u010dasti \u0161printu Komunik\u00e1cia v ved\u00facim t\u00edmu By\u0165 neprodukt\u00edvny na t\u00edmov\u00fdch stretnutiach Prest\u00e1vky na oddych, vysk\u00fa\u0161a\u0165 techniku pomodoro Synchroniz\u00e1cia spolupr\u00e1ce vr\u00e1mci t\u00edmu Podrobn\u00e9 trackovanie \u010dasu na taskoch","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_3/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Verejne nap\u00edsa\u0165 do teams ke\u010f niekto nem\u00f4\u017ee pr\u00eds\u0165 Backlog grooming Neskor\u00e9 pr\u00edchody (po 10 min) Za ka\u017ed\u00fdch na\u010dat\u00fdch 15 min\u00fat me\u0161kania sa zn\u00ed\u017ei podiel pr\u00e1ce v \u0161printe o 1% Ka\u017ed\u00fd si p\u00edsa\u0165 pozn\u00e1mky zo stretnut\u00ed (ke\u010f m\u00e1 pocit, \u017ee si potrebuje nie\u010do zap\u00edsa\u0165) WBS a podrobn\u00e9 pl\u00e1novanie Robi\u0165 v\u00e4\u010d\u0161inu taskov v druhej \u010dasti \u0161printu Komunik\u00e1cia v ved\u00facim t\u00edmu By\u0165 neprodukt\u00edvny na t\u00edmov\u00fdch stretnutiach Prest\u00e1vky na oddych, vysk\u00fa\u0161a\u0165 techniku pomodoro Synchroniz\u00e1cia spolupr\u00e1ce vr\u00e1mci t\u00edmu Podrobn\u00e9 trackovanie \u010dasu na taskoch","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/burndownchart/","text":"Burn down chart \u00b6","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/burndownchart/#burn-down-chart","text":"","title":"Burn down chart"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort 53 Task Spojazdni\u0165 Unity projekt Bc. Ladislav Zemko To Do 81 Bug VRScene sa ned\u00e1 otvori\u0165 Mat\u00fa\u0161 Zele\u0148\u00e1k Committed 8 117 Task Spojazdni\u0165 C# projekt Bc. Ladislav Zemko In Progress 159 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (backend) Jakub Bla\u017eej In development 13 190 Task Premyslie\u0165 a prediskutova\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 191 Task Vytvori\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetu/ov Bc. \u0160imon V\u00e1ro\u0161 In development 5 377 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko In development 13 378 Bug Nefunguje search v dokument\u00e1cii Bc. Eva Nedeliakov\u00e1 Committed 1 379 Product Backlog Item Vytvorenie testu pre pridanie magnetu do sc\u00e9ny Bc. Andrej Erd\u00e9lsky In development 5 380 Product Backlog Item Automatizovan\u00e9 generovanie dokument\u00e1cie z k\u00f3du Bc. Eva Nedeliakov\u00e1 Ready to develop 8 381 Task Prida\u0165 podporu \u00fapravy magnetov v layoutova\u010di Jakub Bla\u017eej Done 383 Task Prida\u0165 podporu pre magnety v GraphCore Jakub Bla\u017eej In Progress 385 Task Aplikova\u0165 pr\u00edznak pagesize_zero Bc. Ladislav Zemko In Progress 386 Task Spojazdni\u0165 testy Lua Common a Lua Graph To Do 387 Task N\u00e1js\u0165 posledn\u00fd commit s funk\u010dnou VR sc\u00e9nou Mat\u00fa\u0161 Zele\u0148\u00e1k Done 388 Task Mergn\u00fa\u0165 commit do develop vetvy a vyrie\u0161i\u0165 merge konfliky Mat\u00fa\u0161 Zele\u0148\u00e1k In Progress 389 Task Presk\u00fama\u0165 ako je selekcia rie\u0161en\u00e1 doteraz Bc. \u0160imon V\u00e1ro\u0161 In Progress 390 Task Implement\u00e1cia ozna\u010dovania Bc. \u0160imon V\u00e1ro\u0161 To Do 391 Task Nap\u00edsanie testu Bc. Andrej Erd\u00e9lsky In Progress 392 Task Spustenie chybn\u00fdch testov Bc. Andrej Erd\u00e9lsky Done 393 Task Vyhodnotenie testu Bc. Andrej Erd\u00e9lsky To Do 394 Task Upload na git Bc. Andrej Erd\u00e9lsky To Do 395 Task Opravi\u0165 test GraphTests.cs Bc. Andrej Erd\u00e9lsky Done 396 Task Opravi\u0165 test NodeTests.cs Bc. Andrej Erd\u00e9lsky Done 397 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej To Do 429 Product Backlog Item Nap\u00edsa\u0165 nanovo metodiku ako p\u00edsa\u0165 dokument\u00e1ciu Bc. Martina Han\u00e1kov\u00e1 New 438 Task Testy Bc. Andrej Erd\u00e9lsky To Do","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort 53 Task Spojazdni\u0165 Unity projekt Bc. Ladislav Zemko To Do 81 Bug VRScene sa ned\u00e1 otvori\u0165 Mat\u00fa\u0161 Zele\u0148\u00e1k Committed 8 117 Task Spojazdni\u0165 C# projekt Bc. Ladislav Zemko In Progress 159 Product Backlog Item Prida\u0165 magnet do sc\u00e9ny (backend) Jakub Bla\u017eej In development 13 190 Task Premyslie\u0165 a prediskutova\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 191 Task Vytvori\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 315 Product Backlog Item V\u00fdber (ozna\u010denie) magnetu/ov Bc. \u0160imon V\u00e1ro\u0161 In development 5 377 Product Backlog Item Spojazdni\u0165 projekt na MAC Bc. Ladislav Zemko In development 13 378 Bug Nefunguje search v dokument\u00e1cii Bc. Eva Nedeliakov\u00e1 Committed 1 379 Product Backlog Item Vytvorenie testu pre pridanie magnetu do sc\u00e9ny Bc. Andrej Erd\u00e9lsky In development 5 380 Product Backlog Item Automatizovan\u00e9 generovanie dokument\u00e1cie z k\u00f3du Bc. Eva Nedeliakov\u00e1 Ready to develop 8 381 Task Prida\u0165 podporu \u00fapravy magnetov v layoutova\u010di Jakub Bla\u017eej Done 383 Task Prida\u0165 podporu pre magnety v GraphCore Jakub Bla\u017eej In Progress 385 Task Aplikova\u0165 pr\u00edznak pagesize_zero Bc. Ladislav Zemko In Progress 386 Task Spojazdni\u0165 testy Lua Common a Lua Graph To Do 387 Task N\u00e1js\u0165 posledn\u00fd commit s funk\u010dnou VR sc\u00e9nou Mat\u00fa\u0161 Zele\u0148\u00e1k Done 388 Task Mergn\u00fa\u0165 commit do develop vetvy a vyrie\u0161i\u0165 merge konfliky Mat\u00fa\u0161 Zele\u0148\u00e1k In Progress 389 Task Presk\u00fama\u0165 ako je selekcia rie\u0161en\u00e1 doteraz Bc. \u0160imon V\u00e1ro\u0161 In Progress 390 Task Implement\u00e1cia ozna\u010dovania Bc. \u0160imon V\u00e1ro\u0161 To Do 391 Task Nap\u00edsanie testu Bc. Andrej Erd\u00e9lsky In Progress 392 Task Spustenie chybn\u00fdch testov Bc. Andrej Erd\u00e9lsky Done 393 Task Vyhodnotenie testu Bc. Andrej Erd\u00e9lsky To Do 394 Task Upload na git Bc. Andrej Erd\u00e9lsky To Do 395 Task Opravi\u0165 test GraphTests.cs Bc. Andrej Erd\u00e9lsky Done 396 Task Opravi\u0165 test NodeTests.cs Bc. Andrej Erd\u00e9lsky Done 397 Task Aktualizova\u0165 dokument\u00e1ciu Jakub Bla\u017eej To Do 429 Product Backlog Item Nap\u00edsa\u0165 nanovo metodiku ako p\u00edsa\u0165 dokument\u00e1ciu Bc. Martina Han\u00e1kov\u00e1 New 438 Task Testy Bc. Andrej Erd\u00e9lsky To Do","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/popis/","text":"Trvanie \u0161printu: 25.11.-9.12. 2019 Doru\u010den\u00e9 story pointy: 20/53 V tomto \u0161printe sme sa prim\u00e1rne zamerali na implement\u00e1ciu a testovanie magnetov. Na\u010falej sme sa usilovali o spojazdnenie vyv\u00edjanej aplik\u00e1cie na macOS zariadenia.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie \u010c\u00edta\u0165 si pozn\u00e1mky zo stretnut\u00ed Ohodnocova\u0165 v\u0161etky tasky M\u00e1lo \u00faloh v \u0161printe a aj tak s\u00fa niektor\u00e9 nedokon\u010den\u00e9 Vyhradi\u0165 si viac \u010dasu na t\u00edmov\u00fd projekt \u010c\u00edta\u0165 si metodiky Dobr\u00e1 komunik\u00e1cia s ved\u00facim t\u00edmu Prokrastinova\u0165 na spolo\u010dn\u00fdch stretnutiach Ka\u017ed\u00fd kto bude prokrastinova\u0165 zaplat\u00ed 1 euro/za stretnutie, kto bude ma\u0165 prv\u00fd hotov\u00e9 \u00falohy dostane peniaze V\u010das si zisti\u0165, kedy m\u00e1me stretntie bez ved\u00faceho Rozde\u013eovanie user stories do features a epicov Hovori\u0165, \u017ee si neviem n\u00e1js\u0165 ani hodinu \u010dasu na TP V\u0161etci sa bud\u00fa na stretnutiach venova\u0165 aktu\u00e1lnej diskutovanej t\u00e9me P\u00edsa\u0165 v\u010das retrospekt\u00edvy Implement\u00e1cia Naozaj aplikova\u0165 zlep\u0161enia z minul\u00fdch retrospekt\u00edv","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_4/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie \u010c\u00edta\u0165 si pozn\u00e1mky zo stretnut\u00ed Ohodnocova\u0165 v\u0161etky tasky M\u00e1lo \u00faloh v \u0161printe a aj tak s\u00fa niektor\u00e9 nedokon\u010den\u00e9 Vyhradi\u0165 si viac \u010dasu na t\u00edmov\u00fd projekt \u010c\u00edta\u0165 si metodiky Dobr\u00e1 komunik\u00e1cia s ved\u00facim t\u00edmu Prokrastinova\u0165 na spolo\u010dn\u00fdch stretnutiach Ka\u017ed\u00fd kto bude prokrastinova\u0165 zaplat\u00ed 1 euro/za stretnutie, kto bude ma\u0165 prv\u00fd hotov\u00e9 \u00falohy dostane peniaze V\u010das si zisti\u0165, kedy m\u00e1me stretntie bez ved\u00faceho Rozde\u013eovanie user stories do features a epicov Hovori\u0165, \u017ee si neviem n\u00e1js\u0165 ani hodinu \u010dasu na TP V\u0161etci sa bud\u00fa na stretnutiach venova\u0165 aktu\u00e1lnej diskutovanej t\u00e9me P\u00edsa\u0165 v\u010das retrospekt\u00edvy Implement\u00e1cia Naozaj aplikova\u0165 zlep\u0161enia z minul\u00fdch retrospekt\u00edv","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_5/export_uloh/","text":"Export \u00faloh \u00b6 ID Work Item Type Title Assigned To State Effort 177 Product Backlog Item Vytvori\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 8 430 Task Nap\u00edsa\u0165 popisy k jednotliv\u00fdm \u0161printom Bc. Eva Nedeliakov\u00e1 Done 431 Task Nap\u00edsa\u0165 \u00favod a ciele za zimn\u00fd semester Bc. \u0160imon V\u00e1ro\u0161 Done 432 Task Pop\u00edsa\u0165 celkov\u00fa architekt\u00faru produktu Bc. Andrej Erd\u00e9lsky Done 433 Task Pop\u00edsa\u0165 jednotliv\u00e9 moduly projektu Mat\u00fa\u0161 Zele\u0148\u00e1k Done 434 Task Prekop\u00edrova\u0165 magnety a obmedova\u010de Mat\u00fa\u0161 Zele\u0148\u00e1k Done 435 Task Pop\u00edsa\u0165 pou\u017e\u00edvate\u013esk\u00e9 pr\u00edru\u010dky Jakub Bla\u017eej Done 436 Task Pop\u00edsa\u0165 \u010das\u0165 infra\u0161trukt\u00fara Bc. Ladislav Zemko Done 437 Task Prep\u00edsa\u0165 dokument\u00e1ciu k testom Bc. Andrej Erd\u00e9lsky Done 439 Task Pop\u00edsa\u0165 jednotliv\u00e9 \u0161printy Bc. Martina Han\u00e1kov\u00e1 Done 440 Task Sp\u00edsa\u0165 glob\u00e1lnu retrospekt\u00edvu Done 441 Task Sp\u00edsa\u0165 podiel pr\u00e1ce na dokument\u00e1cii k produktu Done 442 Task Zmaza\u0165 adres\u00e1r Old zo \u0161trukt\u00fary dokument\u00e1cie Jakub Bla\u017eej Done 443 Task CI na export dokument\u00e1cie do PDF Jakub Bla\u017eej Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_5/export_uloh/#export-\u00faloh","text":"ID Work Item Type Title Assigned To State Effort 177 Product Backlog Item Vytvori\u0165 \u0161trukt\u00faru dokument\u00e1cie Bc. Martina Han\u00e1kov\u00e1 Done 8 430 Task Nap\u00edsa\u0165 popisy k jednotliv\u00fdm \u0161printom Bc. Eva Nedeliakov\u00e1 Done 431 Task Nap\u00edsa\u0165 \u00favod a ciele za zimn\u00fd semester Bc. \u0160imon V\u00e1ro\u0161 Done 432 Task Pop\u00edsa\u0165 celkov\u00fa architekt\u00faru produktu Bc. Andrej Erd\u00e9lsky Done 433 Task Pop\u00edsa\u0165 jednotliv\u00e9 moduly projektu Mat\u00fa\u0161 Zele\u0148\u00e1k Done 434 Task Prekop\u00edrova\u0165 magnety a obmedova\u010de Mat\u00fa\u0161 Zele\u0148\u00e1k Done 435 Task Pop\u00edsa\u0165 pou\u017e\u00edvate\u013esk\u00e9 pr\u00edru\u010dky Jakub Bla\u017eej Done 436 Task Pop\u00edsa\u0165 \u010das\u0165 infra\u0161trukt\u00fara Bc. Ladislav Zemko Done 437 Task Prep\u00edsa\u0165 dokument\u00e1ciu k testom Bc. Andrej Erd\u00e9lsky Done 439 Task Pop\u00edsa\u0165 jednotliv\u00e9 \u0161printy Bc. Martina Han\u00e1kov\u00e1 Done 440 Task Sp\u00edsa\u0165 glob\u00e1lnu retrospekt\u00edvu Done 441 Task Sp\u00edsa\u0165 podiel pr\u00e1ce na dokument\u00e1cii k produktu Done 442 Task Zmaza\u0165 adres\u00e1r Old zo \u0161trukt\u00fary dokument\u00e1cie Jakub Bla\u017eej Done 443 Task CI na export dokument\u00e1cie do PDF Jakub Bla\u017eej Done","title":"Export \u00faloh"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_5/popis/","text":"Trvanie \u0161printu: 9.12.-13.12. 2019 Doru\u010den\u00e9 story pointy: 8/8 V poslednom \u0161printe zimn\u00e9ho semestra sme sa s\u00fastredili na dokon\u010denie dokument\u00e1cie, glob\u00e1lnu restrospekt\u00edvu a vyhodnotenie cie\u013eov. Tie\u0165 sme sa zam\u00fd\u0161\u013eali nad cie\u013emi do \u010fal\u0161ieho semestra.","title":"Popis"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_5/retrospektiva/","text":"Retrospekt\u00edva \u00b6 Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Lep\u0161ie po\u010d\u00fava\u0165 na stretnutiach, aby nedoch\u00e1dzalo k nedorozumeniam Spolupr\u00e1ca viacer\u00fdch na jednej user story Vytv\u00e1ra\u0165 na jednu user story viac vetiev Na rie\u0161enie ka\u017edej user story bude vytvoren\u00e1 len jedna vetva Vopred sa dohodn\u00fa\u0165 na term\u00edne stretnutia, tak aby s t\u00fdm boli v\u0161etci uzrozumen\u00ed Rozdelenie si \u00faloh Pl\u00e1nova\u0165 glob\u00e1lne, nie len na aktu\u00e1lny \u0161print Podrobn\u00e9 popisovanie taskov","title":"Retrospekt\u00edva"},{"location":"dokumentacia_k_riadeniu/sumarizacia_sprintov/ZS/sprint_5/retrospektiva/#retrospekt\u00edva","text":"Za\u010da\u0165 robi\u0165 Pokra\u010dova\u0165 Presta\u0165 robi\u0165 Zlep\u0161enie Lep\u0161ie po\u010d\u00fava\u0165 na stretnutiach, aby nedoch\u00e1dzalo k nedorozumeniam Spolupr\u00e1ca viacer\u00fdch na jednej user story Vytv\u00e1ra\u0165 na jednu user story viac vetiev Na rie\u0161enie ka\u017edej user story bude vytvoren\u00e1 len jedna vetva Vopred sa dohodn\u00fa\u0165 na term\u00edne stretnutia, tak aby s t\u00fdm boli v\u0161etci uzrozumen\u00ed Rozdelenie si \u00faloh Pl\u00e1nova\u0165 glob\u00e1lne, nie len na aktu\u00e1lny \u0161print Podrobn\u00e9 popisovanie taskov","title":"Retrospekt\u00edva"}]}